
RTOSCoffeeMachineUCSD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009528  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003e8  080096b8  080096b8  0000a6b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009aa0  08009aa0  0000b064  2**0
                  CONTENTS
  4 .ARM          00000008  08009aa0  08009aa0  0000aaa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009aa8  08009aa8  0000b064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009aa8  08009aa8  0000aaa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009aac  08009aac  0000aaac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08009ab0  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000024b8  20000064  08009b14  0000b064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000251c  08009b14  0000b51c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000b064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001ee64  00000000  00000000  0000b094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000047fb  00000000  00000000  00029ef8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001aa0  00000000  00000000  0002e6f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000014a1  00000000  00000000  00030198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00004cdb  00000000  00000000  00031639  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00021f6d  00000000  00000000  00036314  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000fe5a3  00000000  00000000  00058281  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00156824  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000073d4  00000000  00000000  00156868  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008d  00000000  00000000  0015dc3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080096a0 	.word	0x080096a0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080096a0 	.word	0x080096a0

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b96a 	b.w	800056c <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	460c      	mov	r4, r1
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d14e      	bne.n	800035a <__udivmoddi4+0xaa>
 80002bc:	4694      	mov	ip, r2
 80002be:	458c      	cmp	ip, r1
 80002c0:	4686      	mov	lr, r0
 80002c2:	fab2 f282 	clz	r2, r2
 80002c6:	d962      	bls.n	800038e <__udivmoddi4+0xde>
 80002c8:	b14a      	cbz	r2, 80002de <__udivmoddi4+0x2e>
 80002ca:	f1c2 0320 	rsb	r3, r2, #32
 80002ce:	4091      	lsls	r1, r2
 80002d0:	fa20 f303 	lsr.w	r3, r0, r3
 80002d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002d8:	4319      	orrs	r1, r3
 80002da:	fa00 fe02 	lsl.w	lr, r0, r2
 80002de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002e2:	fa1f f68c 	uxth.w	r6, ip
 80002e6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002ea:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002ee:	fb07 1114 	mls	r1, r7, r4, r1
 80002f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002f6:	fb04 f106 	mul.w	r1, r4, r6
 80002fa:	4299      	cmp	r1, r3
 80002fc:	d90a      	bls.n	8000314 <__udivmoddi4+0x64>
 80002fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000302:	f104 30ff 	add.w	r0, r4, #4294967295
 8000306:	f080 8112 	bcs.w	800052e <__udivmoddi4+0x27e>
 800030a:	4299      	cmp	r1, r3
 800030c:	f240 810f 	bls.w	800052e <__udivmoddi4+0x27e>
 8000310:	3c02      	subs	r4, #2
 8000312:	4463      	add	r3, ip
 8000314:	1a59      	subs	r1, r3, r1
 8000316:	fa1f f38e 	uxth.w	r3, lr
 800031a:	fbb1 f0f7 	udiv	r0, r1, r7
 800031e:	fb07 1110 	mls	r1, r7, r0, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb00 f606 	mul.w	r6, r0, r6
 800032a:	429e      	cmp	r6, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x94>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f100 31ff 	add.w	r1, r0, #4294967295
 8000336:	f080 80fc 	bcs.w	8000532 <__udivmoddi4+0x282>
 800033a:	429e      	cmp	r6, r3
 800033c:	f240 80f9 	bls.w	8000532 <__udivmoddi4+0x282>
 8000340:	4463      	add	r3, ip
 8000342:	3802      	subs	r0, #2
 8000344:	1b9b      	subs	r3, r3, r6
 8000346:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800034a:	2100      	movs	r1, #0
 800034c:	b11d      	cbz	r5, 8000356 <__udivmoddi4+0xa6>
 800034e:	40d3      	lsrs	r3, r2
 8000350:	2200      	movs	r2, #0
 8000352:	e9c5 3200 	strd	r3, r2, [r5]
 8000356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035a:	428b      	cmp	r3, r1
 800035c:	d905      	bls.n	800036a <__udivmoddi4+0xba>
 800035e:	b10d      	cbz	r5, 8000364 <__udivmoddi4+0xb4>
 8000360:	e9c5 0100 	strd	r0, r1, [r5]
 8000364:	2100      	movs	r1, #0
 8000366:	4608      	mov	r0, r1
 8000368:	e7f5      	b.n	8000356 <__udivmoddi4+0xa6>
 800036a:	fab3 f183 	clz	r1, r3
 800036e:	2900      	cmp	r1, #0
 8000370:	d146      	bne.n	8000400 <__udivmoddi4+0x150>
 8000372:	42a3      	cmp	r3, r4
 8000374:	d302      	bcc.n	800037c <__udivmoddi4+0xcc>
 8000376:	4290      	cmp	r0, r2
 8000378:	f0c0 80f0 	bcc.w	800055c <__udivmoddi4+0x2ac>
 800037c:	1a86      	subs	r6, r0, r2
 800037e:	eb64 0303 	sbc.w	r3, r4, r3
 8000382:	2001      	movs	r0, #1
 8000384:	2d00      	cmp	r5, #0
 8000386:	d0e6      	beq.n	8000356 <__udivmoddi4+0xa6>
 8000388:	e9c5 6300 	strd	r6, r3, [r5]
 800038c:	e7e3      	b.n	8000356 <__udivmoddi4+0xa6>
 800038e:	2a00      	cmp	r2, #0
 8000390:	f040 8090 	bne.w	80004b4 <__udivmoddi4+0x204>
 8000394:	eba1 040c 	sub.w	r4, r1, ip
 8000398:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800039c:	fa1f f78c 	uxth.w	r7, ip
 80003a0:	2101      	movs	r1, #1
 80003a2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003a6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003aa:	fb08 4416 	mls	r4, r8, r6, r4
 80003ae:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003b2:	fb07 f006 	mul.w	r0, r7, r6
 80003b6:	4298      	cmp	r0, r3
 80003b8:	d908      	bls.n	80003cc <__udivmoddi4+0x11c>
 80003ba:	eb1c 0303 	adds.w	r3, ip, r3
 80003be:	f106 34ff 	add.w	r4, r6, #4294967295
 80003c2:	d202      	bcs.n	80003ca <__udivmoddi4+0x11a>
 80003c4:	4298      	cmp	r0, r3
 80003c6:	f200 80cd 	bhi.w	8000564 <__udivmoddi4+0x2b4>
 80003ca:	4626      	mov	r6, r4
 80003cc:	1a1c      	subs	r4, r3, r0
 80003ce:	fa1f f38e 	uxth.w	r3, lr
 80003d2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003d6:	fb08 4410 	mls	r4, r8, r0, r4
 80003da:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003de:	fb00 f707 	mul.w	r7, r0, r7
 80003e2:	429f      	cmp	r7, r3
 80003e4:	d908      	bls.n	80003f8 <__udivmoddi4+0x148>
 80003e6:	eb1c 0303 	adds.w	r3, ip, r3
 80003ea:	f100 34ff 	add.w	r4, r0, #4294967295
 80003ee:	d202      	bcs.n	80003f6 <__udivmoddi4+0x146>
 80003f0:	429f      	cmp	r7, r3
 80003f2:	f200 80b0 	bhi.w	8000556 <__udivmoddi4+0x2a6>
 80003f6:	4620      	mov	r0, r4
 80003f8:	1bdb      	subs	r3, r3, r7
 80003fa:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003fe:	e7a5      	b.n	800034c <__udivmoddi4+0x9c>
 8000400:	f1c1 0620 	rsb	r6, r1, #32
 8000404:	408b      	lsls	r3, r1
 8000406:	fa22 f706 	lsr.w	r7, r2, r6
 800040a:	431f      	orrs	r7, r3
 800040c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000410:	fa04 f301 	lsl.w	r3, r4, r1
 8000414:	ea43 030c 	orr.w	r3, r3, ip
 8000418:	40f4      	lsrs	r4, r6
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	0c38      	lsrs	r0, r7, #16
 8000420:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000424:	fbb4 fef0 	udiv	lr, r4, r0
 8000428:	fa1f fc87 	uxth.w	ip, r7
 800042c:	fb00 441e 	mls	r4, r0, lr, r4
 8000430:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000434:	fb0e f90c 	mul.w	r9, lr, ip
 8000438:	45a1      	cmp	r9, r4
 800043a:	fa02 f201 	lsl.w	r2, r2, r1
 800043e:	d90a      	bls.n	8000456 <__udivmoddi4+0x1a6>
 8000440:	193c      	adds	r4, r7, r4
 8000442:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000446:	f080 8084 	bcs.w	8000552 <__udivmoddi4+0x2a2>
 800044a:	45a1      	cmp	r9, r4
 800044c:	f240 8081 	bls.w	8000552 <__udivmoddi4+0x2a2>
 8000450:	f1ae 0e02 	sub.w	lr, lr, #2
 8000454:	443c      	add	r4, r7
 8000456:	eba4 0409 	sub.w	r4, r4, r9
 800045a:	fa1f f983 	uxth.w	r9, r3
 800045e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000462:	fb00 4413 	mls	r4, r0, r3, r4
 8000466:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800046a:	fb03 fc0c 	mul.w	ip, r3, ip
 800046e:	45a4      	cmp	ip, r4
 8000470:	d907      	bls.n	8000482 <__udivmoddi4+0x1d2>
 8000472:	193c      	adds	r4, r7, r4
 8000474:	f103 30ff 	add.w	r0, r3, #4294967295
 8000478:	d267      	bcs.n	800054a <__udivmoddi4+0x29a>
 800047a:	45a4      	cmp	ip, r4
 800047c:	d965      	bls.n	800054a <__udivmoddi4+0x29a>
 800047e:	3b02      	subs	r3, #2
 8000480:	443c      	add	r4, r7
 8000482:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000486:	fba0 9302 	umull	r9, r3, r0, r2
 800048a:	eba4 040c 	sub.w	r4, r4, ip
 800048e:	429c      	cmp	r4, r3
 8000490:	46ce      	mov	lr, r9
 8000492:	469c      	mov	ip, r3
 8000494:	d351      	bcc.n	800053a <__udivmoddi4+0x28a>
 8000496:	d04e      	beq.n	8000536 <__udivmoddi4+0x286>
 8000498:	b155      	cbz	r5, 80004b0 <__udivmoddi4+0x200>
 800049a:	ebb8 030e 	subs.w	r3, r8, lr
 800049e:	eb64 040c 	sbc.w	r4, r4, ip
 80004a2:	fa04 f606 	lsl.w	r6, r4, r6
 80004a6:	40cb      	lsrs	r3, r1
 80004a8:	431e      	orrs	r6, r3
 80004aa:	40cc      	lsrs	r4, r1
 80004ac:	e9c5 6400 	strd	r6, r4, [r5]
 80004b0:	2100      	movs	r1, #0
 80004b2:	e750      	b.n	8000356 <__udivmoddi4+0xa6>
 80004b4:	f1c2 0320 	rsb	r3, r2, #32
 80004b8:	fa20 f103 	lsr.w	r1, r0, r3
 80004bc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004c0:	fa24 f303 	lsr.w	r3, r4, r3
 80004c4:	4094      	lsls	r4, r2
 80004c6:	430c      	orrs	r4, r1
 80004c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004cc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004d0:	fa1f f78c 	uxth.w	r7, ip
 80004d4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004d8:	fb08 3110 	mls	r1, r8, r0, r3
 80004dc:	0c23      	lsrs	r3, r4, #16
 80004de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004e2:	fb00 f107 	mul.w	r1, r0, r7
 80004e6:	4299      	cmp	r1, r3
 80004e8:	d908      	bls.n	80004fc <__udivmoddi4+0x24c>
 80004ea:	eb1c 0303 	adds.w	r3, ip, r3
 80004ee:	f100 36ff 	add.w	r6, r0, #4294967295
 80004f2:	d22c      	bcs.n	800054e <__udivmoddi4+0x29e>
 80004f4:	4299      	cmp	r1, r3
 80004f6:	d92a      	bls.n	800054e <__udivmoddi4+0x29e>
 80004f8:	3802      	subs	r0, #2
 80004fa:	4463      	add	r3, ip
 80004fc:	1a5b      	subs	r3, r3, r1
 80004fe:	b2a4      	uxth	r4, r4
 8000500:	fbb3 f1f8 	udiv	r1, r3, r8
 8000504:	fb08 3311 	mls	r3, r8, r1, r3
 8000508:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800050c:	fb01 f307 	mul.w	r3, r1, r7
 8000510:	42a3      	cmp	r3, r4
 8000512:	d908      	bls.n	8000526 <__udivmoddi4+0x276>
 8000514:	eb1c 0404 	adds.w	r4, ip, r4
 8000518:	f101 36ff 	add.w	r6, r1, #4294967295
 800051c:	d213      	bcs.n	8000546 <__udivmoddi4+0x296>
 800051e:	42a3      	cmp	r3, r4
 8000520:	d911      	bls.n	8000546 <__udivmoddi4+0x296>
 8000522:	3902      	subs	r1, #2
 8000524:	4464      	add	r4, ip
 8000526:	1ae4      	subs	r4, r4, r3
 8000528:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800052c:	e739      	b.n	80003a2 <__udivmoddi4+0xf2>
 800052e:	4604      	mov	r4, r0
 8000530:	e6f0      	b.n	8000314 <__udivmoddi4+0x64>
 8000532:	4608      	mov	r0, r1
 8000534:	e706      	b.n	8000344 <__udivmoddi4+0x94>
 8000536:	45c8      	cmp	r8, r9
 8000538:	d2ae      	bcs.n	8000498 <__udivmoddi4+0x1e8>
 800053a:	ebb9 0e02 	subs.w	lr, r9, r2
 800053e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000542:	3801      	subs	r0, #1
 8000544:	e7a8      	b.n	8000498 <__udivmoddi4+0x1e8>
 8000546:	4631      	mov	r1, r6
 8000548:	e7ed      	b.n	8000526 <__udivmoddi4+0x276>
 800054a:	4603      	mov	r3, r0
 800054c:	e799      	b.n	8000482 <__udivmoddi4+0x1d2>
 800054e:	4630      	mov	r0, r6
 8000550:	e7d4      	b.n	80004fc <__udivmoddi4+0x24c>
 8000552:	46d6      	mov	lr, sl
 8000554:	e77f      	b.n	8000456 <__udivmoddi4+0x1a6>
 8000556:	4463      	add	r3, ip
 8000558:	3802      	subs	r0, #2
 800055a:	e74d      	b.n	80003f8 <__udivmoddi4+0x148>
 800055c:	4606      	mov	r6, r0
 800055e:	4623      	mov	r3, r4
 8000560:	4608      	mov	r0, r1
 8000562:	e70f      	b.n	8000384 <__udivmoddi4+0xd4>
 8000564:	3e02      	subs	r6, #2
 8000566:	4463      	add	r3, ip
 8000568:	e730      	b.n	80003cc <__udivmoddi4+0x11c>
 800056a:	bf00      	nop

0800056c <__aeabi_idiv0>:
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop

08000570 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8000570:	b480      	push	{r7}
 8000572:	b085      	sub	sp, #20
 8000574:	af00      	add	r7, sp, #0
 8000576:	60f8      	str	r0, [r7, #12]
 8000578:	60b9      	str	r1, [r7, #8]
 800057a:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 800057c:	68fb      	ldr	r3, [r7, #12]
 800057e:	4a07      	ldr	r2, [pc, #28]	@ (800059c <vApplicationGetIdleTaskMemory+0x2c>)
 8000580:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8000582:	68bb      	ldr	r3, [r7, #8]
 8000584:	4a06      	ldr	r2, [pc, #24]	@ (80005a0 <vApplicationGetIdleTaskMemory+0x30>)
 8000586:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	2280      	movs	r2, #128	@ 0x80
 800058c:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 800058e:	bf00      	nop
 8000590:	3714      	adds	r7, #20
 8000592:	46bd      	mov	sp, r7
 8000594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000598:	4770      	bx	lr
 800059a:	bf00      	nop
 800059c:	20000080 	.word	0x20000080
 80005a0:	200000d4 	.word	0x200000d4

080005a4 <vApplicationGetTimerTaskMemory>:
/* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
static StaticTask_t xTimerTaskTCBBuffer;
static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];

void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize )
{
 80005a4:	b480      	push	{r7}
 80005a6:	b085      	sub	sp, #20
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	60f8      	str	r0, [r7, #12]
 80005ac:	60b9      	str	r1, [r7, #8]
 80005ae:	607a      	str	r2, [r7, #4]
  *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 80005b0:	68fb      	ldr	r3, [r7, #12]
 80005b2:	4a07      	ldr	r2, [pc, #28]	@ (80005d0 <vApplicationGetTimerTaskMemory+0x2c>)
 80005b4:	601a      	str	r2, [r3, #0]
  *ppxTimerTaskStackBuffer = &xTimerStack[0];
 80005b6:	68bb      	ldr	r3, [r7, #8]
 80005b8:	4a06      	ldr	r2, [pc, #24]	@ (80005d4 <vApplicationGetTimerTaskMemory+0x30>)
 80005ba:	601a      	str	r2, [r3, #0]
  *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80005c2:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 80005c4:	bf00      	nop
 80005c6:	3714      	adds	r7, #20
 80005c8:	46bd      	mov	sp, r7
 80005ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ce:	4770      	bx	lr
 80005d0:	200002d4 	.word	0x200002d4
 80005d4:	20000328 	.word	0x20000328

080005d8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005d8:	b5b0      	push	{r4, r5, r7, lr}
 80005da:	b0a4      	sub	sp, #144	@ 0x90
 80005dc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	// Event Group Creation
	xEventGroup = xEventGroupCreate();
 80005de:	f005 f843 	bl	8005668 <xEventGroupCreate>
 80005e2:	4603      	mov	r3, r0
 80005e4:	4a52      	ldr	r2, [pc, #328]	@ (8000730 <main+0x158>)
 80005e6:	6013      	str	r3, [r2, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005e8:	f001 f9b5 	bl	8001956 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005ec:	f000 f8bc 	bl	8000768 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005f0:	f000 f986 	bl	8000900 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80005f4:	f000 f954 	bl	80008a0 <MX_USART1_UART_Init>
  MX_I2C1_Init();
 80005f8:	f000 f914 	bl	8000824 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  /* USER CODE END 2 */

  /* Create the mutex(es) */
  /* definition and creation of brewingMutex */
  osMutexDef(brewingMutex);
 80005fc:	2300      	movs	r3, #0
 80005fe:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8000602:	2300      	movs	r3, #0
 8000604:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
  brewingMutexHandle = osMutexCreate(osMutex(brewingMutex));
 8000608:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800060c:	4618      	mov	r0, r3
 800060e:	f004 ff5d 	bl	80054cc <osMutexCreate>
 8000612:	4603      	mov	r3, r0
 8000614:	4a47      	ldr	r2, [pc, #284]	@ (8000734 <main+0x15c>)
 8000616:	6013      	str	r3, [r2, #0]
  /* add mutexes, ... */
  /* USER CODE END RTOS_MUTEX */

  /* Create the semaphores(s) */
  /* definition and creation of powerOnSem */
  osSemaphoreDef(powerOnSem);
 8000618:	2300      	movs	r3, #0
 800061a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800061e:	2300      	movs	r3, #0
 8000620:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
  powerOnSemHandle = osSemaphoreCreate(osSemaphore(powerOnSem), 1);
 8000624:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 8000628:	2101      	movs	r1, #1
 800062a:	4618      	mov	r0, r3
 800062c:	f004 ff66 	bl	80054fc <osSemaphoreCreate>
 8000630:	4603      	mov	r3, r0
 8000632:	4a41      	ldr	r2, [pc, #260]	@ (8000738 <main+0x160>)
 8000634:	6013      	str	r3, [r2, #0]

  /* definition and creation of strongBrewSem */
  osSemaphoreDef(strongBrewSem);
 8000636:	2300      	movs	r3, #0
 8000638:	67bb      	str	r3, [r7, #120]	@ 0x78
 800063a:	2300      	movs	r3, #0
 800063c:	67fb      	str	r3, [r7, #124]	@ 0x7c
  strongBrewSemHandle = osSemaphoreCreate(osSemaphore(strongBrewSem), 1);
 800063e:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 8000642:	2101      	movs	r1, #1
 8000644:	4618      	mov	r0, r3
 8000646:	f004 ff59 	bl	80054fc <osSemaphoreCreate>
 800064a:	4603      	mov	r3, r0
 800064c:	4a3b      	ldr	r2, [pc, #236]	@ (800073c <main+0x164>)
 800064e:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_SEMAPHORES */

  // Initialize semaphores count to 0
  if (powerOnSemHandle != NULL && strongBrewSemHandle != NULL)
 8000650:	4b39      	ldr	r3, [pc, #228]	@ (8000738 <main+0x160>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	2b00      	cmp	r3, #0
 8000656:	d00f      	beq.n	8000678 <main+0xa0>
 8000658:	4b38      	ldr	r3, [pc, #224]	@ (800073c <main+0x164>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	2b00      	cmp	r3, #0
 800065e:	d00b      	beq.n	8000678 <main+0xa0>
  {
      osSemaphoreWait(powerOnSemHandle, 0);
 8000660:	4b35      	ldr	r3, [pc, #212]	@ (8000738 <main+0x160>)
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	2100      	movs	r1, #0
 8000666:	4618      	mov	r0, r3
 8000668:	f004 ff7a 	bl	8005560 <osSemaphoreWait>
      osSemaphoreWait(strongBrewSemHandle, 0);
 800066c:	4b33      	ldr	r3, [pc, #204]	@ (800073c <main+0x164>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	2100      	movs	r1, #0
 8000672:	4618      	mov	r0, r3
 8000674:	f004 ff74 	bl	8005560 <osSemaphoreWait>
  /* add semaphores, ... */
  /* USER CODE END RTOS_SEMAPHORES */

  /* Create the timer(s) */
  /* definition and creation of autoOffTimer */
  osTimerDef(autoOffTimer, pvAutoOffTimerOneShot);
 8000678:	4b31      	ldr	r3, [pc, #196]	@ (8000740 <main+0x168>)
 800067a:	673b      	str	r3, [r7, #112]	@ 0x70
 800067c:	2300      	movs	r3, #0
 800067e:	677b      	str	r3, [r7, #116]	@ 0x74
  autoOffTimerHandle = osTimerCreate(osTimer(autoOffTimer), osTimerOnce, NULL);
 8000680:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 8000684:	2200      	movs	r2, #0
 8000686:	2100      	movs	r1, #0
 8000688:	4618      	mov	r0, r3
 800068a:	f004 fe6b 	bl	8005364 <osTimerCreate>
 800068e:	4603      	mov	r3, r0
 8000690:	4a2c      	ldr	r2, [pc, #176]	@ (8000744 <main+0x16c>)
 8000692:	6013      	str	r3, [r2, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of StartDefaultTask */
  osThreadDef(StartDefaultTask, StartDefaultTask, osPriorityAboveNormal, 0, 128);
 8000694:	4b2c      	ldr	r3, [pc, #176]	@ (8000748 <main+0x170>)
 8000696:	f107 0454 	add.w	r4, r7, #84	@ 0x54
 800069a:	461d      	mov	r5, r3
 800069c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800069e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80006a4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  StartDefaultTaskHandle = osThreadCreate(osThread(StartDefaultTask), NULL);
 80006a8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80006ac:	2100      	movs	r1, #0
 80006ae:	4618      	mov	r0, r3
 80006b0:	f004 fdf7 	bl	80052a2 <osThreadCreate>
 80006b4:	4603      	mov	r3, r0
 80006b6:	4a25      	ldr	r2, [pc, #148]	@ (800074c <main+0x174>)
 80006b8:	6013      	str	r3, [r2, #0]

  /* definition and creation of powerOnTask */
  osThreadDef(powerOnTask, powerOnTask, osPriorityNormal, 0, 128);
 80006ba:	4b25      	ldr	r3, [pc, #148]	@ (8000750 <main+0x178>)
 80006bc:	f107 0438 	add.w	r4, r7, #56	@ 0x38
 80006c0:	461d      	mov	r5, r3
 80006c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80006c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80006ca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  powerOnTaskHandle = osThreadCreate(osThread(powerOnTask), NULL);
 80006ce:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80006d2:	2100      	movs	r1, #0
 80006d4:	4618      	mov	r0, r3
 80006d6:	f004 fde4 	bl	80052a2 <osThreadCreate>
 80006da:	4603      	mov	r3, r0
 80006dc:	4a1d      	ldr	r2, [pc, #116]	@ (8000754 <main+0x17c>)
 80006de:	6013      	str	r3, [r2, #0]

  /* definition and creation of strongBrewTask */
  osThreadDef(strongBrewTask, strongBrewTask, osPriorityBelowNormal, 0, 128);
 80006e0:	4b1d      	ldr	r3, [pc, #116]	@ (8000758 <main+0x180>)
 80006e2:	f107 041c 	add.w	r4, r7, #28
 80006e6:	461d      	mov	r5, r3
 80006e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80006ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80006ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80006f0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  strongBrewTaskHandle = osThreadCreate(osThread(strongBrewTask), NULL);
 80006f4:	f107 031c 	add.w	r3, r7, #28
 80006f8:	2100      	movs	r1, #0
 80006fa:	4618      	mov	r0, r3
 80006fc:	f004 fdd1 	bl	80052a2 <osThreadCreate>
 8000700:	4603      	mov	r3, r0
 8000702:	4a16      	ldr	r2, [pc, #88]	@ (800075c <main+0x184>)
 8000704:	6013      	str	r3, [r2, #0]

  /* definition and creation of brewTravelMug */
  osThreadDef(brewerTask, brewerTask, osPriorityBelowNormal, 0, 128);
 8000706:	4b16      	ldr	r3, [pc, #88]	@ (8000760 <main+0x188>)
 8000708:	463c      	mov	r4, r7
 800070a:	461d      	mov	r5, r3
 800070c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800070e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000710:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000714:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  brewerTaskHandle = osThreadCreate(osThread(brewerTask), NULL);
 8000718:	463b      	mov	r3, r7
 800071a:	2100      	movs	r1, #0
 800071c:	4618      	mov	r0, r3
 800071e:	f004 fdc0 	bl	80052a2 <osThreadCreate>
 8000722:	4603      	mov	r3, r0
 8000724:	4a0f      	ldr	r2, [pc, #60]	@ (8000764 <main+0x18c>)
 8000726:	6013      	str	r3, [r2, #0]
  //osThreadDef(commHandlerTask, commHandlerTask, osPriorityNormal, 0, 128);
  //osThreadCreate(osThread(commHandlerTask), NULL);
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8000728:	f004 fdb4 	bl	8005294 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800072c:	bf00      	nop
 800072e:	e7fd      	b.n	800072c <main+0x154>
 8000730:	20000954 	.word	0x20000954
 8000734:	20000948 	.word	0x20000948
 8000738:	2000094c 	.word	0x2000094c
 800073c:	20000950 	.word	0x20000950
 8000740:	080011e9 	.word	0x080011e9
 8000744:	20000944 	.word	0x20000944
 8000748:	080096cc 	.word	0x080096cc
 800074c:	20000934 	.word	0x20000934
 8000750:	080096f4 	.word	0x080096f4
 8000754:	20000938 	.word	0x20000938
 8000758:	08009720 	.word	0x08009720
 800075c:	2000093c 	.word	0x2000093c
 8000760:	08009748 	.word	0x08009748
 8000764:	20000940 	.word	0x20000940

08000768 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000768:	b580      	push	{r7, lr}
 800076a:	b096      	sub	sp, #88	@ 0x58
 800076c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800076e:	f107 0314 	add.w	r3, r7, #20
 8000772:	2244      	movs	r2, #68	@ 0x44
 8000774:	2100      	movs	r1, #0
 8000776:	4618      	mov	r0, r3
 8000778:	f008 fb12 	bl	8008da0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800077c:	463b      	mov	r3, r7
 800077e:	2200      	movs	r2, #0
 8000780:	601a      	str	r2, [r3, #0]
 8000782:	605a      	str	r2, [r3, #4]
 8000784:	609a      	str	r2, [r3, #8]
 8000786:	60da      	str	r2, [r3, #12]
 8000788:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 800078a:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800078e:	f001 fde1 	bl	8002354 <HAL_PWREx_ControlVoltageScaling>
 8000792:	4603      	mov	r3, r0
 8000794:	2b00      	cmp	r3, #0
 8000796:	d001      	beq.n	800079c <SystemClock_Config+0x34>
  {
    Error_Handler();
 8000798:	f000 f83e 	bl	8000818 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 800079c:	2310      	movs	r3, #16
 800079e:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80007a0:	2301      	movs	r3, #1
 80007a2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80007a4:	2300      	movs	r3, #0
 80007a6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80007a8:	2360      	movs	r3, #96	@ 0x60
 80007aa:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80007ac:	2300      	movs	r3, #0
 80007ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007b0:	f107 0314 	add.w	r3, r7, #20
 80007b4:	4618      	mov	r0, r3
 80007b6:	f001 fe23 	bl	8002400 <HAL_RCC_OscConfig>
 80007ba:	4603      	mov	r3, r0
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d001      	beq.n	80007c4 <SystemClock_Config+0x5c>
  {
    Error_Handler();
 80007c0:	f000 f82a 	bl	8000818 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007c4:	230f      	movs	r3, #15
 80007c6:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 80007c8:	2300      	movs	r3, #0
 80007ca:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007cc:	2300      	movs	r3, #0
 80007ce:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80007d0:	2300      	movs	r3, #0
 80007d2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80007d4:	2300      	movs	r3, #0
 80007d6:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80007d8:	463b      	mov	r3, r7
 80007da:	2100      	movs	r1, #0
 80007dc:	4618      	mov	r0, r3
 80007de:	f002 f9eb 	bl	8002bb8 <HAL_RCC_ClockConfig>
 80007e2:	4603      	mov	r3, r0
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d001      	beq.n	80007ec <SystemClock_Config+0x84>
  {
    Error_Handler();
 80007e8:	f000 f816 	bl	8000818 <Error_Handler>
  }
}
 80007ec:	bf00      	nop
 80007ee:	3758      	adds	r7, #88	@ 0x58
 80007f0:	46bd      	mov	sp, r7
 80007f2:	bd80      	pop	{r7, pc}

080007f4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b082      	sub	sp, #8
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	4a04      	ldr	r2, [pc, #16]	@ (8000814 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000802:	4293      	cmp	r3, r2
 8000804:	d101      	bne.n	800080a <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000806:	f001 f8bf 	bl	8001988 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800080a:	bf00      	nop
 800080c:	3708      	adds	r7, #8
 800080e:	46bd      	mov	sp, r7
 8000810:	bd80      	pop	{r7, pc}
 8000812:	bf00      	nop
 8000814:	40012c00 	.word	0x40012c00

08000818 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000818:	b480      	push	{r7}
 800081a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800081c:	b672      	cpsid	i
}
 800081e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000820:	bf00      	nop
 8000822:	e7fd      	b.n	8000820 <Error_Handler+0x8>

08000824 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
void MX_I2C1_Init(void)
{
 8000824:	b580      	push	{r7, lr}
 8000826:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000828:	4b1b      	ldr	r3, [pc, #108]	@ (8000898 <MX_I2C1_Init+0x74>)
 800082a:	4a1c      	ldr	r2, [pc, #112]	@ (800089c <MX_I2C1_Init+0x78>)
 800082c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00000E14;
 800082e:	4b1a      	ldr	r3, [pc, #104]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000830:	f640 6214 	movw	r2, #3604	@ 0xe14
 8000834:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8000836:	4b18      	ldr	r3, [pc, #96]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000838:	2200      	movs	r2, #0
 800083a:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800083c:	4b16      	ldr	r3, [pc, #88]	@ (8000898 <MX_I2C1_Init+0x74>)
 800083e:	2201      	movs	r2, #1
 8000840:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000842:	4b15      	ldr	r3, [pc, #84]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000844:	2200      	movs	r2, #0
 8000846:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8000848:	4b13      	ldr	r3, [pc, #76]	@ (8000898 <MX_I2C1_Init+0x74>)
 800084a:	2200      	movs	r2, #0
 800084c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800084e:	4b12      	ldr	r3, [pc, #72]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000850:	2200      	movs	r2, #0
 8000852:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000854:	4b10      	ldr	r3, [pc, #64]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000856:	2200      	movs	r2, #0
 8000858:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800085a:	4b0f      	ldr	r3, [pc, #60]	@ (8000898 <MX_I2C1_Init+0x74>)
 800085c:	2200      	movs	r2, #0
 800085e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000860:	480d      	ldr	r0, [pc, #52]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000862:	f001 fc36 	bl	80020d2 <HAL_I2C_Init>
 8000866:	4603      	mov	r3, r0
 8000868:	2b00      	cmp	r3, #0
 800086a:	d001      	beq.n	8000870 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800086c:	f7ff ffd4 	bl	8000818 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000870:	2100      	movs	r1, #0
 8000872:	4809      	ldr	r0, [pc, #36]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000874:	f001 fcc8 	bl	8002208 <HAL_I2CEx_ConfigAnalogFilter>
 8000878:	4603      	mov	r3, r0
 800087a:	2b00      	cmp	r3, #0
 800087c:	d001      	beq.n	8000882 <MX_I2C1_Init+0x5e>
  {
    Error_Handler();
 800087e:	f7ff ffcb 	bl	8000818 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8000882:	2100      	movs	r1, #0
 8000884:	4804      	ldr	r0, [pc, #16]	@ (8000898 <MX_I2C1_Init+0x74>)
 8000886:	f001 fd0a 	bl	800229e <HAL_I2CEx_ConfigDigitalFilter>
 800088a:	4603      	mov	r3, r0
 800088c:	2b00      	cmp	r3, #0
 800088e:	d001      	beq.n	8000894 <MX_I2C1_Init+0x70>
  {
    Error_Handler();
 8000890:	f7ff ffc2 	bl	8000818 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000894:	bf00      	nop
 8000896:	bd80      	pop	{r7, pc}
 8000898:	20000858 	.word	0x20000858
 800089c:	40005400 	.word	0x40005400

080008a0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
void MX_USART1_UART_Init(void)
{
 80008a0:	b580      	push	{r7, lr}
 80008a2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80008a4:	4b14      	ldr	r3, [pc, #80]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008a6:	4a15      	ldr	r2, [pc, #84]	@ (80008fc <MX_USART1_UART_Init+0x5c>)
 80008a8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80008aa:	4b13      	ldr	r3, [pc, #76]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008ac:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80008b0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80008b2:	4b11      	ldr	r3, [pc, #68]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008b4:	2200      	movs	r2, #0
 80008b6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008ba:	2200      	movs	r2, #0
 80008bc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80008be:	4b0e      	ldr	r3, [pc, #56]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008c0:	2200      	movs	r2, #0
 80008c2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80008c4:	4b0c      	ldr	r3, [pc, #48]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008c6:	220c      	movs	r2, #12
 80008c8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008cc:	2200      	movs	r2, #0
 80008ce:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80008d0:	4b09      	ldr	r3, [pc, #36]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008d2:	2200      	movs	r2, #0
 80008d4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80008d6:	4b08      	ldr	r3, [pc, #32]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008d8:	2200      	movs	r2, #0
 80008da:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80008dc:	4b06      	ldr	r3, [pc, #24]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008de:	2200      	movs	r2, #0
 80008e0:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80008e2:	4805      	ldr	r0, [pc, #20]	@ (80008f8 <MX_USART1_UART_Init+0x58>)
 80008e4:	f003 fb2e 	bl	8003f44 <HAL_UART_Init>
 80008e8:	4603      	mov	r3, r0
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	d001      	beq.n	80008f2 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 80008ee:	f7ff ff93 	bl	8000818 <Error_Handler>



  /* USER CODE END USART1_Init 2 */

}
 80008f2:	bf00      	nop
 80008f4:	bd80      	pop	{r7, pc}
 80008f6:	bf00      	nop
 80008f8:	200008ac 	.word	0x200008ac
 80008fc:	40013800 	.word	0x40013800

08000900 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
void MX_GPIO_Init(void)
{
 8000900:	b580      	push	{r7, lr}
 8000902:	b088      	sub	sp, #32
 8000904:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000906:	f107 030c 	add.w	r3, r7, #12
 800090a:	2200      	movs	r2, #0
 800090c:	601a      	str	r2, [r3, #0]
 800090e:	605a      	str	r2, [r3, #4]
 8000910:	609a      	str	r2, [r3, #8]
 8000912:	60da      	str	r2, [r3, #12]
 8000914:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000916:	4b5e      	ldr	r3, [pc, #376]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000918:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800091a:	4a5d      	ldr	r2, [pc, #372]	@ (8000a90 <MX_GPIO_Init+0x190>)
 800091c:	f043 0301 	orr.w	r3, r3, #1
 8000920:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000922:	4b5b      	ldr	r3, [pc, #364]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000924:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000926:	f003 0301 	and.w	r3, r3, #1
 800092a:	60bb      	str	r3, [r7, #8]
 800092c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800092e:	4b58      	ldr	r3, [pc, #352]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000930:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000932:	4a57      	ldr	r2, [pc, #348]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000934:	f043 0302 	orr.w	r3, r3, #2
 8000938:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800093a:	4b55      	ldr	r3, [pc, #340]	@ (8000a90 <MX_GPIO_Init+0x190>)
 800093c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800093e:	f003 0302 	and.w	r3, r3, #2
 8000942:	607b      	str	r3, [r7, #4]
 8000944:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000946:	4b52      	ldr	r3, [pc, #328]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000948:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800094a:	4a51      	ldr	r2, [pc, #324]	@ (8000a90 <MX_GPIO_Init+0x190>)
 800094c:	f043 0308 	orr.w	r3, r3, #8
 8000950:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000952:	4b4f      	ldr	r3, [pc, #316]	@ (8000a90 <MX_GPIO_Init+0x190>)
 8000954:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000956:	f003 0308 	and.w	r3, r3, #8
 800095a:	603b      	str	r3, [r7, #0]
 800095c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED_TRAV_MUG_Pin|LED_SMALL_CUP_Pin|LED_SMALL_MUG_Pin|LED_LARG_MUG_Pin
 800095e:	2200      	movs	r2, #0
 8000960:	f248 01f0 	movw	r1, #33008	@ 0x80f0
 8000964:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000968:	f001 fb5e 	bl	8002028 <HAL_GPIO_WritePin>
                          |LED_STR_BRW_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_PWR_ON_GPIO_Port, LED_PWR_ON_Pin, GPIO_PIN_RESET);
 800096c:	2200      	movs	r2, #0
 800096e:	2102      	movs	r1, #2
 8000970:	4848      	ldr	r0, [pc, #288]	@ (8000a94 <MX_GPIO_Init+0x194>)
 8000972:	f001 fb59 	bl	8002028 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : BUTTON_PWR_Pin BUTTON_STR_BRW_Pin BUTTON_LARG_MUG_Pin */
  GPIO_InitStruct.Pin = BUTTON_PWR_Pin|BUTTON_STR_BRW_Pin|BUTTON_LARG_MUG_Pin;
 8000976:	230b      	movs	r3, #11
 8000978:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800097a:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 800097e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000980:	2300      	movs	r3, #0
 8000982:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000984:	f107 030c 	add.w	r3, r7, #12
 8000988:	4619      	mov	r1, r3
 800098a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800098e:	f001 f9a1 	bl	8001cd4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_TRAV_MUG_Pin LED_SMALL_CUP_Pin LED_SMALL_MUG_Pin LED_LARG_MUG_Pin
                           LED_STR_BRW_Pin */
  GPIO_InitStruct.Pin = LED_TRAV_MUG_Pin|LED_SMALL_CUP_Pin|LED_SMALL_MUG_Pin|LED_LARG_MUG_Pin
 8000992:	f248 03f0 	movw	r3, #33008	@ 0x80f0
 8000996:	60fb      	str	r3, [r7, #12]
                          |LED_STR_BRW_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000998:	2301      	movs	r3, #1
 800099a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800099c:	2300      	movs	r3, #0
 800099e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009a0:	2300      	movs	r3, #0
 80009a2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80009a4:	f107 030c 	add.w	r3, r7, #12
 80009a8:	4619      	mov	r1, r3
 80009aa:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80009ae:	f001 f991 	bl	8001cd4 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_PWR_ON_Pin */
  GPIO_InitStruct.Pin = LED_PWR_ON_Pin;
 80009b2:	2302      	movs	r3, #2
 80009b4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009b6:	2301      	movs	r3, #1
 80009b8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009ba:	2300      	movs	r3, #0
 80009bc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009be:	2300      	movs	r3, #0
 80009c0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(LED_PWR_ON_GPIO_Port, &GPIO_InitStruct);
 80009c2:	f107 030c 	add.w	r3, r7, #12
 80009c6:	4619      	mov	r1, r3
 80009c8:	4832      	ldr	r0, [pc, #200]	@ (8000a94 <MX_GPIO_Init+0x194>)
 80009ca:	f001 f983 	bl	8001cd4 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON_SMALL_CUP_Pin BUTTON_SMALL_MUG_Pin */
  GPIO_InitStruct.Pin = BUTTON_SMALL_CUP_Pin|BUTTON_SMALL_MUG_Pin;
 80009ce:	2314      	movs	r3, #20
 80009d0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80009d2:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80009d6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d8:	2300      	movs	r3, #0
 80009da:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80009dc:	f107 030c 	add.w	r3, r7, #12
 80009e0:	4619      	mov	r1, r3
 80009e2:	482c      	ldr	r0, [pc, #176]	@ (8000a94 <MX_GPIO_Init+0x194>)
 80009e4:	f001 f976 	bl	8001cd4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB10 PB11 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 80009e8:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80009ec:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80009ee:	2312      	movs	r3, #18
 80009f0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009f2:	2300      	movs	r3, #0
 80009f4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009f6:	2303      	movs	r3, #3
 80009f8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80009fa:	2304      	movs	r3, #4
 80009fc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80009fe:	f107 030c 	add.w	r3, r7, #12
 8000a02:	4619      	mov	r1, r3
 8000a04:	4823      	ldr	r0, [pc, #140]	@ (8000a94 <MX_GPIO_Init+0x194>)
 8000a06:	f001 f965 	bl	8001cd4 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_TRAV_MUG_Pin */
  GPIO_InitStruct.Pin = BUTTON_TRAV_MUG_Pin;
 8000a0a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8000a0e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000a10:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8000a14:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a16:	2300      	movs	r3, #0
 8000a18:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(BUTTON_TRAV_MUG_GPIO_Port, &GPIO_InitStruct);
 8000a1a:	f107 030c 	add.w	r3, r7, #12
 8000a1e:	4619      	mov	r1, r3
 8000a20:	481d      	ldr	r0, [pc, #116]	@ (8000a98 <MX_GPIO_Init+0x198>)
 8000a22:	f001 f957 	bl	8001cd4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 8000a26:	2200      	movs	r2, #0
 8000a28:	2105      	movs	r1, #5
 8000a2a:	2006      	movs	r0, #6
 8000a2c:	f001 f8a8 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000a30:	2006      	movs	r0, #6
 8000a32:	f001 f8c1 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 5, 0);
 8000a36:	2200      	movs	r2, #0
 8000a38:	2105      	movs	r1, #5
 8000a3a:	2007      	movs	r0, #7
 8000a3c:	f001 f8a0 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8000a40:	2007      	movs	r0, #7
 8000a42:	f001 f8b9 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI2_IRQn, 5, 0);
 8000a46:	2200      	movs	r2, #0
 8000a48:	2105      	movs	r1, #5
 8000a4a:	2008      	movs	r0, #8
 8000a4c:	f001 f898 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 8000a50:	2008      	movs	r0, #8
 8000a52:	f001 f8b1 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000a56:	2200      	movs	r2, #0
 8000a58:	2105      	movs	r1, #5
 8000a5a:	2009      	movs	r0, #9
 8000a5c:	f001 f890 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000a60:	2009      	movs	r0, #9
 8000a62:	f001 f8a9 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 8000a66:	2200      	movs	r2, #0
 8000a68:	2105      	movs	r1, #5
 8000a6a:	200a      	movs	r0, #10
 8000a6c:	f001 f888 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8000a70:	200a      	movs	r0, #10
 8000a72:	f001 f8a1 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8000a76:	2200      	movs	r2, #0
 8000a78:	2105      	movs	r1, #5
 8000a7a:	2028      	movs	r0, #40	@ 0x28
 8000a7c:	f001 f880 	bl	8001b80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000a80:	2028      	movs	r0, #40	@ 0x28
 8000a82:	f001 f899 	bl	8001bb8 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000a86:	bf00      	nop
 8000a88:	3720      	adds	r7, #32
 8000a8a:	46bd      	mov	sp, r7
 8000a8c:	bd80      	pop	{r7, pc}
 8000a8e:	bf00      	nop
 8000a90:	40021000 	.word	0x40021000
 8000a94:	48000400 	.word	0x48000400
 8000a98:	48000c00 	.word	0x48000c00

08000a9c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000a9c:	b580      	push	{r7, lr}
 8000a9e:	b082      	sub	sp, #8
 8000aa0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000aa2:	4b11      	ldr	r3, [pc, #68]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000aa4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000aa6:	4a10      	ldr	r2, [pc, #64]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000aa8:	f043 0301 	orr.w	r3, r3, #1
 8000aac:	6613      	str	r3, [r2, #96]	@ 0x60
 8000aae:	4b0e      	ldr	r3, [pc, #56]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000ab0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000ab2:	f003 0301 	and.w	r3, r3, #1
 8000ab6:	607b      	str	r3, [r7, #4]
 8000ab8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000aba:	4b0b      	ldr	r3, [pc, #44]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000abc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000abe:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000ac0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ac4:	6593      	str	r3, [r2, #88]	@ 0x58
 8000ac6:	4b08      	ldr	r3, [pc, #32]	@ (8000ae8 <HAL_MspInit+0x4c>)
 8000ac8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000aca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ace:	603b      	str	r3, [r7, #0]
 8000ad0:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	210f      	movs	r1, #15
 8000ad6:	f06f 0001 	mvn.w	r0, #1
 8000ada:	f001 f851 	bl	8001b80 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000ade:	bf00      	nop
 8000ae0:	3708      	adds	r7, #8
 8000ae2:	46bd      	mov	sp, r7
 8000ae4:	bd80      	pop	{r7, pc}
 8000ae6:	bf00      	nop
 8000ae8:	40021000 	.word	0x40021000

08000aec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000aec:	b580      	push	{r7, lr}
 8000aee:	b0ac      	sub	sp, #176	@ 0xb0
 8000af0:	af00      	add	r7, sp, #0
 8000af2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000af4:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8000af8:	2200      	movs	r2, #0
 8000afa:	601a      	str	r2, [r3, #0]
 8000afc:	605a      	str	r2, [r3, #4]
 8000afe:	609a      	str	r2, [r3, #8]
 8000b00:	60da      	str	r2, [r3, #12]
 8000b02:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000b04:	f107 0314 	add.w	r3, r7, #20
 8000b08:	2288      	movs	r2, #136	@ 0x88
 8000b0a:	2100      	movs	r1, #0
 8000b0c:	4618      	mov	r0, r3
 8000b0e:	f008 f947 	bl	8008da0 <memset>
  if(hi2c->Instance==I2C1)
 8000b12:	687b      	ldr	r3, [r7, #4]
 8000b14:	681b      	ldr	r3, [r3, #0]
 8000b16:	4a21      	ldr	r2, [pc, #132]	@ (8000b9c <HAL_I2C_MspInit+0xb0>)
 8000b18:	4293      	cmp	r3, r2
 8000b1a:	d13b      	bne.n	8000b94 <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8000b1c:	2340      	movs	r3, #64	@ 0x40
 8000b1e:	617b      	str	r3, [r7, #20]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8000b20:	2300      	movs	r3, #0
 8000b22:	667b      	str	r3, [r7, #100]	@ 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000b24:	f107 0314 	add.w	r3, r7, #20
 8000b28:	4618      	mov	r0, r3
 8000b2a:	f002 fa9b 	bl	8003064 <HAL_RCCEx_PeriphCLKConfig>
 8000b2e:	4603      	mov	r3, r0
 8000b30:	2b00      	cmp	r3, #0
 8000b32:	d001      	beq.n	8000b38 <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 8000b34:	f7ff fe70 	bl	8000818 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b38:	4b19      	ldr	r3, [pc, #100]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b3a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b3c:	4a18      	ldr	r2, [pc, #96]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b3e:	f043 0302 	orr.w	r3, r3, #2
 8000b42:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000b44:	4b16      	ldr	r3, [pc, #88]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b46:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b48:	f003 0302 	and.w	r3, r3, #2
 8000b4c:	613b      	str	r3, [r7, #16]
 8000b4e:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000b50:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8000b54:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000b58:	2312      	movs	r3, #18
 8000b5a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b5e:	2300      	movs	r3, #0
 8000b60:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b64:	2303      	movs	r3, #3
 8000b66:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000b6a:	2304      	movs	r3, #4
 8000b6c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b70:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8000b74:	4619      	mov	r1, r3
 8000b76:	480b      	ldr	r0, [pc, #44]	@ (8000ba4 <HAL_I2C_MspInit+0xb8>)
 8000b78:	f001 f8ac 	bl	8001cd4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000b7c:	4b08      	ldr	r3, [pc, #32]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b7e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000b80:	4a07      	ldr	r2, [pc, #28]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b82:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000b86:	6593      	str	r3, [r2, #88]	@ 0x58
 8000b88:	4b05      	ldr	r3, [pc, #20]	@ (8000ba0 <HAL_I2C_MspInit+0xb4>)
 8000b8a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000b8c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000b90:	60fb      	str	r3, [r7, #12]
 8000b92:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8000b94:	bf00      	nop
 8000b96:	37b0      	adds	r7, #176	@ 0xb0
 8000b98:	46bd      	mov	sp, r7
 8000b9a:	bd80      	pop	{r7, pc}
 8000b9c:	40005400 	.word	0x40005400
 8000ba0:	40021000 	.word	0x40021000
 8000ba4:	48000400 	.word	0x48000400

08000ba8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b0ac      	sub	sp, #176	@ 0xb0
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bb0:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8000bb4:	2200      	movs	r2, #0
 8000bb6:	601a      	str	r2, [r3, #0]
 8000bb8:	605a      	str	r2, [r3, #4]
 8000bba:	609a      	str	r2, [r3, #8]
 8000bbc:	60da      	str	r2, [r3, #12]
 8000bbe:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000bc0:	f107 0314 	add.w	r3, r7, #20
 8000bc4:	2288      	movs	r2, #136	@ 0x88
 8000bc6:	2100      	movs	r1, #0
 8000bc8:	4618      	mov	r0, r3
 8000bca:	f008 f8e9 	bl	8008da0 <memset>
  if(huart->Instance==USART1)
 8000bce:	687b      	ldr	r3, [r7, #4]
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	4a25      	ldr	r2, [pc, #148]	@ (8000c68 <HAL_UART_MspInit+0xc0>)
 8000bd4:	4293      	cmp	r3, r2
 8000bd6:	d142      	bne.n	8000c5e <HAL_UART_MspInit+0xb6>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8000bd8:	2301      	movs	r3, #1
 8000bda:	617b      	str	r3, [r7, #20]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8000bdc:	2300      	movs	r3, #0
 8000bde:	64fb      	str	r3, [r7, #76]	@ 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000be0:	f107 0314 	add.w	r3, r7, #20
 8000be4:	4618      	mov	r0, r3
 8000be6:	f002 fa3d 	bl	8003064 <HAL_RCCEx_PeriphCLKConfig>
 8000bea:	4603      	mov	r3, r0
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d001      	beq.n	8000bf4 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8000bf0:	f7ff fe12 	bl	8000818 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000bf4:	4b1d      	ldr	r3, [pc, #116]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000bf6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000bf8:	4a1c      	ldr	r2, [pc, #112]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000bfa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000bfe:	6613      	str	r3, [r2, #96]	@ 0x60
 8000c00:	4b1a      	ldr	r3, [pc, #104]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000c02:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000c04:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000c08:	613b      	str	r3, [r7, #16]
 8000c0a:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c0c:	4b17      	ldr	r3, [pc, #92]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000c0e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000c10:	4a16      	ldr	r2, [pc, #88]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000c12:	f043 0302 	orr.w	r3, r3, #2
 8000c16:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000c18:	4b14      	ldr	r3, [pc, #80]	@ (8000c6c <HAL_UART_MspInit+0xc4>)
 8000c1a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000c1c:	f003 0302 	and.w	r3, r3, #2
 8000c20:	60fb      	str	r3, [r7, #12]
 8000c22:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000c24:	23c0      	movs	r3, #192	@ 0xc0
 8000c26:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c2a:	2302      	movs	r3, #2
 8000c2c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c30:	2300      	movs	r3, #0
 8000c32:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c36:	2303      	movs	r3, #3
 8000c38:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8000c3c:	2307      	movs	r3, #7
 8000c3e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c42:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8000c46:	4619      	mov	r1, r3
 8000c48:	4809      	ldr	r0, [pc, #36]	@ (8000c70 <HAL_UART_MspInit+0xc8>)
 8000c4a:	f001 f843 	bl	8001cd4 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8000c4e:	2200      	movs	r2, #0
 8000c50:	2105      	movs	r1, #5
 8000c52:	2025      	movs	r0, #37	@ 0x25
 8000c54:	f000 ff94 	bl	8001b80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8000c58:	2025      	movs	r0, #37	@ 0x25
 8000c5a:	f000 ffad 	bl	8001bb8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8000c5e:	bf00      	nop
 8000c60:	37b0      	adds	r7, #176	@ 0xb0
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}
 8000c66:	bf00      	nop
 8000c68:	40013800 	.word	0x40013800
 8000c6c:	40021000 	.word	0x40021000
 8000c70:	48000400 	.word	0x48000400

08000c74 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000c74:	b580      	push	{r7, lr}
 8000c76:	b08c      	sub	sp, #48	@ 0x30
 8000c78:	af00      	add	r7, sp, #0
 8000c7a:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status = HAL_OK;
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f

  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();
 8000c82:	4b2e      	ldr	r3, [pc, #184]	@ (8000d3c <HAL_InitTick+0xc8>)
 8000c84:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000c86:	4a2d      	ldr	r2, [pc, #180]	@ (8000d3c <HAL_InitTick+0xc8>)
 8000c88:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000c8c:	6613      	str	r3, [r2, #96]	@ 0x60
 8000c8e:	4b2b      	ldr	r3, [pc, #172]	@ (8000d3c <HAL_InitTick+0xc8>)
 8000c90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000c92:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8000c96:	60bb      	str	r3, [r7, #8]
 8000c98:	68bb      	ldr	r3, [r7, #8]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000c9a:	f107 020c 	add.w	r2, r7, #12
 8000c9e:	f107 0310 	add.w	r3, r7, #16
 8000ca2:	4611      	mov	r1, r2
 8000ca4:	4618      	mov	r0, r3
 8000ca6:	f002 f94b 	bl	8002f40 <HAL_RCC_GetClockConfig>

  /* Compute TIM1 clock */
      uwTimclock = HAL_RCC_GetPCLK2Freq();
 8000caa:	f002 f933 	bl	8002f14 <HAL_RCC_GetPCLK2Freq>
 8000cae:	62b8      	str	r0, [r7, #40]	@ 0x28

  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000cb0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000cb2:	4a23      	ldr	r2, [pc, #140]	@ (8000d40 <HAL_InitTick+0xcc>)
 8000cb4:	fba2 2303 	umull	r2, r3, r2, r3
 8000cb8:	0c9b      	lsrs	r3, r3, #18
 8000cba:	3b01      	subs	r3, #1
 8000cbc:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 8000cbe:	4b21      	ldr	r3, [pc, #132]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cc0:	4a21      	ldr	r2, [pc, #132]	@ (8000d48 <HAL_InitTick+0xd4>)
 8000cc2:	601a      	str	r2, [r3, #0]
  + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 8000cc4:	4b1f      	ldr	r3, [pc, #124]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cc6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000cca:	60da      	str	r2, [r3, #12]
  htim1.Init.Prescaler = uwPrescalerValue;
 8000ccc:	4a1d      	ldr	r2, [pc, #116]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000cd0:	6053      	str	r3, [r2, #4]
  htim1.Init.ClockDivision = 0;
 8000cd2:	4b1c      	ldr	r3, [pc, #112]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	611a      	str	r2, [r3, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000cd8:	4b1a      	ldr	r3, [pc, #104]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cda:	2200      	movs	r2, #0
 8000cdc:	609a      	str	r2, [r3, #8]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000cde:	4b19      	ldr	r3, [pc, #100]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim1);
 8000ce4:	4817      	ldr	r0, [pc, #92]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000ce6:	f002 fe79 	bl	80039dc <HAL_TIM_Base_Init>
 8000cea:	4603      	mov	r3, r0
 8000cec:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  if (status == HAL_OK)
 8000cf0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d11b      	bne.n	8000d30 <HAL_InitTick+0xbc>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim1);
 8000cf8:	4812      	ldr	r0, [pc, #72]	@ (8000d44 <HAL_InitTick+0xd0>)
 8000cfa:	f002 fed1 	bl	8003aa0 <HAL_TIM_Base_Start_IT>
 8000cfe:	4603      	mov	r3, r0
 8000d00:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
    if (status == HAL_OK)
 8000d04:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d111      	bne.n	8000d30 <HAL_InitTick+0xbc>
    {
    /* Enable the TIM1 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8000d0c:	2019      	movs	r0, #25
 8000d0e:	f000 ff53 	bl	8001bb8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	2b0f      	cmp	r3, #15
 8000d16:	d808      	bhi.n	8000d2a <HAL_InitTick+0xb6>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority, 0U);
 8000d18:	2200      	movs	r2, #0
 8000d1a:	6879      	ldr	r1, [r7, #4]
 8000d1c:	2019      	movs	r0, #25
 8000d1e:	f000 ff2f 	bl	8001b80 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000d22:	4a0a      	ldr	r2, [pc, #40]	@ (8000d4c <HAL_InitTick+0xd8>)
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	6013      	str	r3, [r2, #0]
 8000d28:	e002      	b.n	8000d30 <HAL_InitTick+0xbc>
      }
      else
      {
        status = HAL_ERROR;
 8000d2a:	2301      	movs	r3, #1
 8000d2c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
      }
    }
  }

 /* Return function status */
  return status;
 8000d30:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 8000d34:	4618      	mov	r0, r3
 8000d36:	3730      	adds	r7, #48	@ 0x30
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bd80      	pop	{r7, pc}
 8000d3c:	40021000 	.word	0x40021000
 8000d40:	431bde83 	.word	0x431bde83
 8000d44:	20000958 	.word	0x20000958
 8000d48:	40012c00 	.word	0x40012c00
 8000d4c:	20000008 	.word	0x20000008

08000d50 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d50:	b480      	push	{r7}
 8000d52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000d54:	bf00      	nop
 8000d56:	e7fd      	b.n	8000d54 <NMI_Handler+0x4>

08000d58 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d58:	b480      	push	{r7}
 8000d5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d5c:	bf00      	nop
 8000d5e:	e7fd      	b.n	8000d5c <HardFault_Handler+0x4>

08000d60 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d60:	b480      	push	{r7}
 8000d62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d64:	bf00      	nop
 8000d66:	e7fd      	b.n	8000d64 <MemManage_Handler+0x4>

08000d68 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d68:	b480      	push	{r7}
 8000d6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000d6c:	bf00      	nop
 8000d6e:	e7fd      	b.n	8000d6c <BusFault_Handler+0x4>

08000d70 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000d70:	b480      	push	{r7}
 8000d72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000d74:	bf00      	nop
 8000d76:	e7fd      	b.n	8000d74 <UsageFault_Handler+0x4>

08000d78 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d78:	b480      	push	{r7}
 8000d7a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d7c:	bf00      	nop
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d84:	4770      	bx	lr
	...

08000d88 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8000d88:	b580      	push	{r7, lr}
 8000d8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_PWR_Pin);
 8000d8c:	2001      	movs	r0, #1
 8000d8e:	f001 f97d 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

	// Release PowerOn Semaphore when interrupt is triggered
	osSemaphoreRelease(powerOnSemHandle);
 8000d92:	4b03      	ldr	r3, [pc, #12]	@ (8000da0 <EXTI0_IRQHandler+0x18>)
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	4618      	mov	r0, r3
 8000d98:	f004 fc30 	bl	80055fc <osSemaphoreRelease>

  /* USER CODE END EXTI0_IRQn 1 */
}
 8000d9c:	bf00      	nop
 8000d9e:	bd80      	pop	{r7, pc}
 8000da0:	2000094c 	.word	0x2000094c

08000da4 <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 8000da4:	b580      	push	{r7, lr}
 8000da6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */


  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_STR_BRW_Pin);
 8000da8:	2002      	movs	r0, #2
 8000daa:	f001 f96f 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  // Release strongBrew Semaphore when triggered
  osSemaphoreRelease(strongBrewSemHandle);
 8000dae:	4b03      	ldr	r3, [pc, #12]	@ (8000dbc <EXTI1_IRQHandler+0x18>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	4618      	mov	r0, r3
 8000db4:	f004 fc22 	bl	80055fc <osSemaphoreRelease>

  /* USER CODE END EXTI1_IRQn 1 */
}
 8000db8:	bf00      	nop
 8000dba:	bd80      	pop	{r7, pc}
 8000dbc:	20000950 	.word	0x20000950

08000dc0 <EXTI2_IRQHandler>:

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
 8000dc0:	b580      	push	{r7, lr}
 8000dc2:	b082      	sub	sp, #8
 8000dc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_IRQn 0 */

  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_SMALL_CUP_Pin);
 8000dc6:	2004      	movs	r0, #4
 8000dc8:	f001 f960 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_IRQn 1 */

  // 6oz Large  Cup Size

  // Declare vars for FreeRTOS interrupt safe-operation
  BaseType_t xHigherPriorityTaskWoken = pdFALSE;				// init false since bits not set to start
 8000dcc:	2300      	movs	r3, #0
 8000dce:	603b      	str	r3, [r7, #0]
  BaseType_t xResult = xEventGroupSetBitsFromISR(xEventGroup, smallCup_ISR_BIT, &xHigherPriorityTaskWoken);
 8000dd0:	4b0c      	ldr	r3, [pc, #48]	@ (8000e04 <EXTI2_IRQHandler+0x44>)
 8000dd2:	6819      	ldr	r1, [r3, #0]
 8000dd4:	463b      	mov	r3, r7
 8000dd6:	2208      	movs	r2, #8
 8000dd8:	480b      	ldr	r0, [pc, #44]	@ (8000e08 <EXTI2_IRQHandler+0x48>)
 8000dda:	f007 fb4b 	bl	8008474 <xTimerPendFunctionCallFromISR>
 8000dde:	6078      	str	r0, [r7, #4]

  // Check if Event Group Bits were successfully set
  if (xResult == pdTRUE)
 8000de0:	687b      	ldr	r3, [r7, #4]
 8000de2:	2b01      	cmp	r3, #1
 8000de4:	d10a      	bne.n	8000dfc <EXTI2_IRQHandler+0x3c>
  {
	  // request context switch when task unblocked
	  portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 8000de6:	683b      	ldr	r3, [r7, #0]
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	d007      	beq.n	8000dfc <EXTI2_IRQHandler+0x3c>
 8000dec:	4b07      	ldr	r3, [pc, #28]	@ (8000e0c <EXTI2_IRQHandler+0x4c>)
 8000dee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000df2:	601a      	str	r2, [r3, #0]
 8000df4:	f3bf 8f4f 	dsb	sy
 8000df8:	f3bf 8f6f 	isb	sy
  }

  /* USER CODE END EXTI2_IRQn 1 */
}
 8000dfc:	bf00      	nop
 8000dfe:	3708      	adds	r7, #8
 8000e00:	46bd      	mov	sp, r7
 8000e02:	bd80      	pop	{r7, pc}
 8000e04:	20000954 	.word	0x20000954
 8000e08:	08005959 	.word	0x08005959
 8000e0c:	e000ed04 	.word	0xe000ed04

08000e10 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	b082      	sub	sp, #8
 8000e14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_LARG_MUG_Pin);
 8000e16:	2008      	movs	r0, #8
 8000e18:	f001 f938 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  // 10oz Large  Mug Size

  // Declare vars for FreeRTOS interrupt safe-operation
  BaseType_t xHigherPriorityTaskWoken = pdFALSE;				// init false since bits not set to start
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	603b      	str	r3, [r7, #0]
  BaseType_t xResult = xEventGroupSetBitsFromISR(xEventGroup, largeMug_ISR_BIT, &xHigherPriorityTaskWoken);
 8000e20:	4b0c      	ldr	r3, [pc, #48]	@ (8000e54 <EXTI3_IRQHandler+0x44>)
 8000e22:	6819      	ldr	r1, [r3, #0]
 8000e24:	463b      	mov	r3, r7
 8000e26:	2202      	movs	r2, #2
 8000e28:	480b      	ldr	r0, [pc, #44]	@ (8000e58 <EXTI3_IRQHandler+0x48>)
 8000e2a:	f007 fb23 	bl	8008474 <xTimerPendFunctionCallFromISR>
 8000e2e:	6078      	str	r0, [r7, #4]

  // Check if Event Group Bits were successfully set
  if (xResult == pdTRUE)
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	2b01      	cmp	r3, #1
 8000e34:	d10a      	bne.n	8000e4c <EXTI3_IRQHandler+0x3c>
  {
	  // request context switch when task unblocked
	  portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 8000e36:	683b      	ldr	r3, [r7, #0]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d007      	beq.n	8000e4c <EXTI3_IRQHandler+0x3c>
 8000e3c:	4b07      	ldr	r3, [pc, #28]	@ (8000e5c <EXTI3_IRQHandler+0x4c>)
 8000e3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000e42:	601a      	str	r2, [r3, #0]
 8000e44:	f3bf 8f4f 	dsb	sy
 8000e48:	f3bf 8f6f 	isb	sy
  }
  /* USER CODE END EXTI3_IRQn 1 */
}
 8000e4c:	bf00      	nop
 8000e4e:	3708      	adds	r7, #8
 8000e50:	46bd      	mov	sp, r7
 8000e52:	bd80      	pop	{r7, pc}
 8000e54:	20000954 	.word	0x20000954
 8000e58:	08005959 	.word	0x08005959
 8000e5c:	e000ed04 	.word	0xe000ed04

08000e60 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b082      	sub	sp, #8
 8000e64:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */


  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_SMALL_MUG_Pin);
 8000e66:	2010      	movs	r0, #16
 8000e68:	f001 f910 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  // 8oz Small Mug Size

  // Declare vars for FreeRTOS interrupt safe-operation
  BaseType_t xHigherPriorityTaskWoken = pdFALSE;				// init false since bits not set to start
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	603b      	str	r3, [r7, #0]
  BaseType_t xResult = xEventGroupSetBitsFromISR(xEventGroup, smallMug_ISR_BIT, &xHigherPriorityTaskWoken);
 8000e70:	4b0c      	ldr	r3, [pc, #48]	@ (8000ea4 <EXTI4_IRQHandler+0x44>)
 8000e72:	6819      	ldr	r1, [r3, #0]
 8000e74:	463b      	mov	r3, r7
 8000e76:	2204      	movs	r2, #4
 8000e78:	480b      	ldr	r0, [pc, #44]	@ (8000ea8 <EXTI4_IRQHandler+0x48>)
 8000e7a:	f007 fafb 	bl	8008474 <xTimerPendFunctionCallFromISR>
 8000e7e:	6078      	str	r0, [r7, #4]

  // Check if Event Group Bits were successfully set
  if (xResult == pdTRUE)
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	2b01      	cmp	r3, #1
 8000e84:	d10a      	bne.n	8000e9c <EXTI4_IRQHandler+0x3c>
  {
	  // request context switch when task unblocked
	  portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 8000e86:	683b      	ldr	r3, [r7, #0]
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d007      	beq.n	8000e9c <EXTI4_IRQHandler+0x3c>
 8000e8c:	4b07      	ldr	r3, [pc, #28]	@ (8000eac <EXTI4_IRQHandler+0x4c>)
 8000e8e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000e92:	601a      	str	r2, [r3, #0]
 8000e94:	f3bf 8f4f 	dsb	sy
 8000e98:	f3bf 8f6f 	isb	sy
  }
  /* USER CODE END EXTI4_IRQn 1 */
}
 8000e9c:	bf00      	nop
 8000e9e:	3708      	adds	r7, #8
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	bd80      	pop	{r7, pc}
 8000ea4:	20000954 	.word	0x20000954
 8000ea8:	08005959 	.word	0x08005959
 8000eac:	e000ed04 	.word	0xe000ed04

08000eb0 <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 8000eb0:	b580      	push	{r7, lr}
 8000eb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8000eb4:	4802      	ldr	r0, [pc, #8]	@ (8000ec0 <TIM1_UP_TIM16_IRQHandler+0x10>)
 8000eb6:	f002 fe63 	bl	8003b80 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8000eba:	bf00      	nop
 8000ebc:	bd80      	pop	{r7, pc}
 8000ebe:	bf00      	nop
 8000ec0:	20000958 	.word	0x20000958

08000ec4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000ec8:	4802      	ldr	r0, [pc, #8]	@ (8000ed4 <USART1_IRQHandler+0x10>)
 8000eca:	f003 f8e7 	bl	800409c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */



  /* USER CODE END USART1_IRQn 1 */
}
 8000ece:	bf00      	nop
 8000ed0:	bd80      	pop	{r7, pc}
 8000ed2:	bf00      	nop
 8000ed4:	200008ac 	.word	0x200008ac

08000ed8 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b082      	sub	sp, #8
 8000edc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_TRAV_MUG_Pin);
 8000ede:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8000ee2:	f001 f8d3 	bl	800208c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  // 6oz Small Cup Size

  // Declare vars for FreeRTOS interrupt safe-operation
  BaseType_t xHigherPriorityTaskWoken = pdFALSE;				// init false since bits not set to start
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	603b      	str	r3, [r7, #0]
  BaseType_t xResult = xEventGroupSetBitsFromISR(xEventGroup, travelMug_ISR_BIT, &xHigherPriorityTaskWoken);
 8000eea:	4b0d      	ldr	r3, [pc, #52]	@ (8000f20 <EXTI15_10_IRQHandler+0x48>)
 8000eec:	6819      	ldr	r1, [r3, #0]
 8000eee:	463b      	mov	r3, r7
 8000ef0:	2201      	movs	r2, #1
 8000ef2:	480c      	ldr	r0, [pc, #48]	@ (8000f24 <EXTI15_10_IRQHandler+0x4c>)
 8000ef4:	f007 fabe 	bl	8008474 <xTimerPendFunctionCallFromISR>
 8000ef8:	6078      	str	r0, [r7, #4]

  // Check if Event Group Bits were successfully set
  if (xResult == pdTRUE)
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	2b01      	cmp	r3, #1
 8000efe:	d10a      	bne.n	8000f16 <EXTI15_10_IRQHandler+0x3e>
  {
	  // request context switch when task unblocked
	  portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 8000f00:	683b      	ldr	r3, [r7, #0]
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d007      	beq.n	8000f16 <EXTI15_10_IRQHandler+0x3e>
 8000f06:	4b08      	ldr	r3, [pc, #32]	@ (8000f28 <EXTI15_10_IRQHandler+0x50>)
 8000f08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8000f0c:	601a      	str	r2, [r3, #0]
 8000f0e:	f3bf 8f4f 	dsb	sy
 8000f12:	f3bf 8f6f 	isb	sy
  }
  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8000f16:	bf00      	nop
 8000f18:	3708      	adds	r7, #8
 8000f1a:	46bd      	mov	sp, r7
 8000f1c:	bd80      	pop	{r7, pc}
 8000f1e:	bf00      	nop
 8000f20:	20000954 	.word	0x20000954
 8000f24:	08005959 	.word	0x08005959
 8000f28:	e000ed04 	.word	0xe000ed04

08000f2c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000f2c:	b580      	push	{r7, lr}
 8000f2e:	b086      	sub	sp, #24
 8000f30:	af00      	add	r7, sp, #0
 8000f32:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000f34:	4a14      	ldr	r2, [pc, #80]	@ (8000f88 <_sbrk+0x5c>)
 8000f36:	4b15      	ldr	r3, [pc, #84]	@ (8000f8c <_sbrk+0x60>)
 8000f38:	1ad3      	subs	r3, r2, r3
 8000f3a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000f3c:	697b      	ldr	r3, [r7, #20]
 8000f3e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f40:	4b13      	ldr	r3, [pc, #76]	@ (8000f90 <_sbrk+0x64>)
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	d102      	bne.n	8000f4e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f48:	4b11      	ldr	r3, [pc, #68]	@ (8000f90 <_sbrk+0x64>)
 8000f4a:	4a12      	ldr	r2, [pc, #72]	@ (8000f94 <_sbrk+0x68>)
 8000f4c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f4e:	4b10      	ldr	r3, [pc, #64]	@ (8000f90 <_sbrk+0x64>)
 8000f50:	681a      	ldr	r2, [r3, #0]
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	4413      	add	r3, r2
 8000f56:	693a      	ldr	r2, [r7, #16]
 8000f58:	429a      	cmp	r2, r3
 8000f5a:	d207      	bcs.n	8000f6c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f5c:	f007 ff28 	bl	8008db0 <__errno>
 8000f60:	4603      	mov	r3, r0
 8000f62:	220c      	movs	r2, #12
 8000f64:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f66:	f04f 33ff 	mov.w	r3, #4294967295
 8000f6a:	e009      	b.n	8000f80 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f6c:	4b08      	ldr	r3, [pc, #32]	@ (8000f90 <_sbrk+0x64>)
 8000f6e:	681b      	ldr	r3, [r3, #0]
 8000f70:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f72:	4b07      	ldr	r3, [pc, #28]	@ (8000f90 <_sbrk+0x64>)
 8000f74:	681a      	ldr	r2, [r3, #0]
 8000f76:	687b      	ldr	r3, [r7, #4]
 8000f78:	4413      	add	r3, r2
 8000f7a:	4a05      	ldr	r2, [pc, #20]	@ (8000f90 <_sbrk+0x64>)
 8000f7c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f7e:	68fb      	ldr	r3, [r7, #12]
}
 8000f80:	4618      	mov	r0, r3
 8000f82:	3718      	adds	r7, #24
 8000f84:	46bd      	mov	sp, r7
 8000f86:	bd80      	pop	{r7, pc}
 8000f88:	20018000 	.word	0x20018000
 8000f8c:	00000400 	.word	0x00000400
 8000f90:	200009a4 	.word	0x200009a4
 8000f94:	20002520 	.word	0x20002520

08000f98 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8000f98:	b480      	push	{r7}
 8000f9a:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8000f9c:	4b06      	ldr	r3, [pc, #24]	@ (8000fb8 <SystemInit+0x20>)
 8000f9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000fa2:	4a05      	ldr	r2, [pc, #20]	@ (8000fb8 <SystemInit+0x20>)
 8000fa4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000fa8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
}
 8000fac:	bf00      	nop
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	e000ed00 	.word	0xe000ed00

08000fbc <StartDefaultTask>:
  * @brief  Default Task Function
  * 		Takes care of initial prompt & Reseting LEDs
  * @param  argument: Not used
  */
void StartDefaultTask(void const * argument)
{
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b082      	sub	sp, #8
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
	startupPrompt();						// User Message
 8000fc4:	f000 f980 	bl	80012c8 <startupPrompt>
	osDelay(100);
 8000fc8:	2064      	movs	r0, #100	@ 0x64
 8000fca:	f004 f9b6 	bl	800533a <osDelay>
	ledCtrl(STR_LED, LED_OFF);				// Reset StrongBrew LED (Yellow)
 8000fce:	2100      	movs	r1, #0
 8000fd0:	2001      	movs	r0, #1
 8000fd2:	f000 fc05 	bl	80017e0 <ledCtrl>
	ledCtrl(PWR_LED, LED_OFF);				// Reset Power LED (Green)
 8000fd6:	2100      	movs	r1, #0
 8000fd8:	2000      	movs	r0, #0
 8000fda:	f000 fc01 	bl	80017e0 <ledCtrl>
	osDelay(100);
 8000fde:	2064      	movs	r0, #100	@ 0x64
 8000fe0:	f004 f9ab 	bl	800533a <osDelay>
  /* Infinite loop */
  for(;;)
  {
	  osDelay(1);
 8000fe4:	2001      	movs	r0, #1
 8000fe6:	f004 f9a8 	bl	800533a <osDelay>
 8000fea:	e7fb      	b.n	8000fe4 <StartDefaultTask+0x28>

08000fec <powerOnTask>:
* @brief 	Power Task Function
* 			Handles functionalities specific to when Power turns ON/OFF
* @param 	argument: Not used
*/
void powerOnTask(void const * argument)
{
 8000fec:	b580      	push	{r7, lr}
 8000fee:	b082      	sub	sp, #8
 8000ff0:	af00      	add	r7, sp, #0
 8000ff2:	6078      	str	r0, [r7, #4]
  for(;;)
  {
	  // Wait for Semaphore indefinitely (till user hits power button)
	  osSemaphoreWait(powerOnSemHandle, osWaitForever);
 8000ff4:	4b22      	ldr	r3, [pc, #136]	@ (8001080 <powerOnTask+0x94>)
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	f04f 31ff 	mov.w	r1, #4294967295
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	f004 faaf 	bl	8005560 <osSemaphoreWait>

	  if(pwr_status == false)					// Turn PWR ON
 8001002:	4b20      	ldr	r3, [pc, #128]	@ (8001084 <powerOnTask+0x98>)
 8001004:	781b      	ldrb	r3, [r3, #0]
 8001006:	b2db      	uxtb	r3, r3
 8001008:	f083 0301 	eor.w	r3, r3, #1
 800100c:	b2db      	uxtb	r3, r3
 800100e:	2b00      	cmp	r3, #0
 8001010:	d01b      	beq.n	800104a <powerOnTask+0x5e>
	  {
		  pwr_status = true;								// Set Power variable
 8001012:	4b1c      	ldr	r3, [pc, #112]	@ (8001084 <powerOnTask+0x98>)
 8001014:	2201      	movs	r2, #1
 8001016:	701a      	strb	r2, [r3, #0]
		  ledCtrl(PWR_LED, LED_ON);							// Set Power LED
 8001018:	2101      	movs	r1, #1
 800101a:	2000      	movs	r0, #0
 800101c:	f000 fbe0 	bl	80017e0 <ledCtrl>
		  osDelay(100);
 8001020:	2064      	movs	r0, #100	@ 0x64
 8001022:	f004 f98a 	bl	800533a <osDelay>
		  powerMessage();									// User Message
 8001026:	f000 f983 	bl	8001330 <powerMessage>
		  waterLevel = FULL_WATER_TANK;						// Refill water on boot
 800102a:	4b17      	ldr	r3, [pc, #92]	@ (8001088 <powerOnTask+0x9c>)
 800102c:	2264      	movs	r2, #100	@ 0x64
 800102e:	701a      	strb	r2, [r3, #0]
		  waterLevelMessage(waterLevel);					// User Message
 8001030:	4b15      	ldr	r3, [pc, #84]	@ (8001088 <powerOnTask+0x9c>)
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	4618      	mov	r0, r3
 8001036:	f000 fa4b 	bl	80014d0 <waterLevelMessage>
		  osTimerStart(autoOffTimerHandle, AUTO_OFF_TMR);	// Start Auto-Off Timer
 800103a:	4b14      	ldr	r3, [pc, #80]	@ (800108c <powerOnTask+0xa0>)
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	f64e 2160 	movw	r1, #60000	@ 0xea60
 8001042:	4618      	mov	r0, r3
 8001044:	f004 f9c2 	bl	80053cc <osTimerStart>
 8001048:	e015      	b.n	8001076 <powerOnTask+0x8a>
	  }
	  else if(pwr_status == true)				// Turn PWR OFF
 800104a:	4b0e      	ldr	r3, [pc, #56]	@ (8001084 <powerOnTask+0x98>)
 800104c:	781b      	ldrb	r3, [r3, #0]
 800104e:	b2db      	uxtb	r3, r3
 8001050:	2b00      	cmp	r3, #0
 8001052:	d010      	beq.n	8001076 <powerOnTask+0x8a>
	  {
		  osTimerStop(autoOffTimerHandle);					// Stop Timer in case
 8001054:	4b0d      	ldr	r3, [pc, #52]	@ (800108c <powerOnTask+0xa0>)
 8001056:	681b      	ldr	r3, [r3, #0]
 8001058:	4618      	mov	r0, r3
 800105a:	f004 f9fb 	bl	8005454 <osTimerStop>
		  pwr_status = false;								// Set Power variable
 800105e:	4b09      	ldr	r3, [pc, #36]	@ (8001084 <powerOnTask+0x98>)
 8001060:	2200      	movs	r2, #0
 8001062:	701a      	strb	r2, [r3, #0]
		  ledCtrl(PWR_LED, LED_OFF);						// Reset Power LED
 8001064:	2100      	movs	r1, #0
 8001066:	2000      	movs	r0, #0
 8001068:	f000 fbba 	bl	80017e0 <ledCtrl>
		  osDelay(100);
 800106c:	2064      	movs	r0, #100	@ 0x64
 800106e:	f004 f964 	bl	800533a <osDelay>
		  powerMessage();									// User Message
 8001072:	f000 f95d 	bl	8001330 <powerMessage>
	  }
	  osDelay(300);
 8001076:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 800107a:	f004 f95e 	bl	800533a <osDelay>
	  osSemaphoreWait(powerOnSemHandle, osWaitForever);
 800107e:	e7b9      	b.n	8000ff4 <powerOnTask+0x8>
 8001080:	2000094c 	.word	0x2000094c
 8001084:	20000854 	.word	0x20000854
 8001088:	20000001 	.word	0x20000001
 800108c:	20000944 	.word	0x20000944

08001090 <strongBrewTask>:
* @brief 	Brew Strength Task Function
* 			Handles functionalities specific to Enabling/Disabling a Strong Brew
* @param argument: Not used
*/
void strongBrewTask(void const * argument)
{
 8001090:	b580      	push	{r7, lr}
 8001092:	b082      	sub	sp, #8
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
  for(;;)
  {
	  if(pwr_status == true)							// Only update when Power ON
 8001098:	4b14      	ldr	r3, [pc, #80]	@ (80010ec <strongBrewTask+0x5c>)
 800109a:	781b      	ldrb	r3, [r3, #0]
 800109c:	b2db      	uxtb	r3, r3
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d01f      	beq.n	80010e2 <strongBrewTask+0x52>
	  {
		  // Wait for Semaphore indefinitely (till user hits StrongBrew button)
		  osSemaphoreWait(strongBrewSemHandle, osWaitForever);
 80010a2:	4b13      	ldr	r3, [pc, #76]	@ (80010f0 <strongBrewTask+0x60>)
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	f04f 31ff 	mov.w	r1, #4294967295
 80010aa:	4618      	mov	r0, r3
 80010ac:	f004 fa58 	bl	8005560 <osSemaphoreWait>

		  ledCtrl(STR_LED, LED_TOGGLE);					// Toggle StrongBrew LED
 80010b0:	2102      	movs	r1, #2
 80010b2:	2001      	movs	r0, #1
 80010b4:	f000 fb94 	bl	80017e0 <ledCtrl>
		  osDelay(100);
 80010b8:	2064      	movs	r0, #100	@ 0x64
 80010ba:	f004 f93e 	bl	800533a <osDelay>
		  strongBrewMessage();							// User Message
 80010be:	f000 f987 	bl	80013d0 <strongBrewMessage>
		  strongBrewCoffee = !strongBrewCoffee;			// Toggle Brew Strength
 80010c2:	4b0c      	ldr	r3, [pc, #48]	@ (80010f4 <strongBrewTask+0x64>)
 80010c4:	781b      	ldrb	r3, [r3, #0]
 80010c6:	b2db      	uxtb	r3, r3
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	bf14      	ite	ne
 80010cc:	2301      	movne	r3, #1
 80010ce:	2300      	moveq	r3, #0
 80010d0:	b2db      	uxtb	r3, r3
 80010d2:	f083 0301 	eor.w	r3, r3, #1
 80010d6:	b2db      	uxtb	r3, r3
 80010d8:	f003 0301 	and.w	r3, r3, #1
 80010dc:	b2da      	uxtb	r2, r3
 80010de:	4b05      	ldr	r3, [pc, #20]	@ (80010f4 <strongBrewTask+0x64>)
 80010e0:	701a      	strb	r2, [r3, #0]
	  }
	  osDelay(300);
 80010e2:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80010e6:	f004 f928 	bl	800533a <osDelay>
	  if(pwr_status == true)							// Only update when Power ON
 80010ea:	e7d5      	b.n	8001098 <strongBrewTask+0x8>
 80010ec:	20000854 	.word	0x20000854
 80010f0:	20000950 	.word	0x20000950
 80010f4:	20000856 	.word	0x20000856

080010f8 <brewerTask>:
* @brief 	Brewing Operation Task Function
* 			Handles functionalities specific to user selecting a Size to brew
* @param 	argument: Not used
*/
void brewerTask(void const * argument)
{
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b086      	sub	sp, #24
 80010fc:	af02      	add	r7, sp, #8
 80010fe:	6078      	str	r0, [r7, #4]
	for(;;)
	{
		if(pwr_status == true)									// Brewing enabled when Power ON
 8001100:	4b33      	ldr	r3, [pc, #204]	@ (80011d0 <brewerTask+0xd8>)
 8001102:	781b      	ldrb	r3, [r3, #0]
 8001104:	b2db      	uxtb	r3, r3
 8001106:	2b00      	cmp	r3, #0
 8001108:	d0fa      	beq.n	8001100 <brewerTask+0x8>
		{
			uint8_t eventGroupPick = 0;
 800110a:	2300      	movs	r3, #0
 800110c:	73fb      	strb	r3, [r7, #15]

			// Wait for ISR (12, 10, 8, or 6 ozBits)
			eventGroupPick = xEventGroupWaitBits(xEventGroup,
 800110e:	4b31      	ldr	r3, [pc, #196]	@ (80011d4 <brewerTask+0xdc>)
 8001110:	6818      	ldr	r0, [r3, #0]
 8001112:	f04f 33ff 	mov.w	r3, #4294967295
 8001116:	9300      	str	r3, [sp, #0]
 8001118:	2300      	movs	r3, #0
 800111a:	2201      	movs	r2, #1
 800111c:	210f      	movs	r1, #15
 800111e:	f004 fabd 	bl	800569c <xEventGroupWaitBits>
 8001122:	4603      	mov	r3, r0
 8001124:	73fb      	strb	r3, [r7, #15]
												 travelMug_ISR_BIT | largeMug_ISR_BIT | smallMug_ISR_BIT | smallCup_ISR_BIT,
												 pdTRUE, 									// Clear on exit
												 pdFALSE, 									// don't wait on others
												 portMAX_DELAY);

			if (eventGroupPick & travelMug_ISR_BIT)				// Bitwise AND. Check if bits equal
 8001126:	7bfb      	ldrb	r3, [r7, #15]
 8001128:	f003 0301 	and.w	r3, r3, #1
 800112c:	2b00      	cmp	r3, #0
 800112e:	d00e      	beq.n	800114e <brewerTask+0x56>
			{
				if(enoughWaterCheck(travelMugSize))				// Check if there's enough water
 8001130:	4b29      	ldr	r3, [pc, #164]	@ (80011d8 <brewerTask+0xe0>)
 8001132:	781b      	ldrb	r3, [r3, #0]
 8001134:	4618      	mov	r0, r3
 8001136:	f000 faa5 	bl	8001684 <enoughWaterCheck>
 800113a:	4603      	mov	r3, r0
 800113c:	2b00      	cmp	r3, #0
 800113e:	d041      	beq.n	80011c4 <brewerTask+0xcc>
				{
					brewingHelper(TVL_LED, travelMugSize);		// Run Travel Size Brew
 8001140:	4b25      	ldr	r3, [pc, #148]	@ (80011d8 <brewerTask+0xe0>)
 8001142:	781b      	ldrb	r3, [r3, #0]
 8001144:	4619      	mov	r1, r3
 8001146:	2002      	movs	r0, #2
 8001148:	f000 f864 	bl	8001214 <brewingHelper>
 800114c:	e03a      	b.n	80011c4 <brewerTask+0xcc>
				}
			}
			else if (eventGroupPick & largeMug_ISR_BIT)			// Bitwise AND. Check if bits equal
 800114e:	7bfb      	ldrb	r3, [r7, #15]
 8001150:	f003 0302 	and.w	r3, r3, #2
 8001154:	2b00      	cmp	r3, #0
 8001156:	d00e      	beq.n	8001176 <brewerTask+0x7e>
			{
				if(enoughWaterCheck(largeMugSize))				// Check if there's enough water
 8001158:	4b20      	ldr	r3, [pc, #128]	@ (80011dc <brewerTask+0xe4>)
 800115a:	781b      	ldrb	r3, [r3, #0]
 800115c:	4618      	mov	r0, r3
 800115e:	f000 fa91 	bl	8001684 <enoughWaterCheck>
 8001162:	4603      	mov	r3, r0
 8001164:	2b00      	cmp	r3, #0
 8001166:	d02d      	beq.n	80011c4 <brewerTask+0xcc>
				{
					brewingHelper(LRG_LED, largeMugSize);		// Run Large Mug Size Brew
 8001168:	4b1c      	ldr	r3, [pc, #112]	@ (80011dc <brewerTask+0xe4>)
 800116a:	781b      	ldrb	r3, [r3, #0]
 800116c:	4619      	mov	r1, r3
 800116e:	2003      	movs	r0, #3
 8001170:	f000 f850 	bl	8001214 <brewingHelper>
 8001174:	e026      	b.n	80011c4 <brewerTask+0xcc>
				}
			}
			else if (eventGroupPick & smallMug_ISR_BIT)			// Bitwise AND. Check if bits equal
 8001176:	7bfb      	ldrb	r3, [r7, #15]
 8001178:	f003 0304 	and.w	r3, r3, #4
 800117c:	2b00      	cmp	r3, #0
 800117e:	d00e      	beq.n	800119e <brewerTask+0xa6>
			{
				if(enoughWaterCheck(smallMugSize))				// Check if there's enough water
 8001180:	4b17      	ldr	r3, [pc, #92]	@ (80011e0 <brewerTask+0xe8>)
 8001182:	781b      	ldrb	r3, [r3, #0]
 8001184:	4618      	mov	r0, r3
 8001186:	f000 fa7d 	bl	8001684 <enoughWaterCheck>
 800118a:	4603      	mov	r3, r0
 800118c:	2b00      	cmp	r3, #0
 800118e:	d019      	beq.n	80011c4 <brewerTask+0xcc>
				{
					brewingHelper(SMM_LED, smallMugSize);		// Run Small Mug Size Brew
 8001190:	4b13      	ldr	r3, [pc, #76]	@ (80011e0 <brewerTask+0xe8>)
 8001192:	781b      	ldrb	r3, [r3, #0]
 8001194:	4619      	mov	r1, r3
 8001196:	2004      	movs	r0, #4
 8001198:	f000 f83c 	bl	8001214 <brewingHelper>
 800119c:	e012      	b.n	80011c4 <brewerTask+0xcc>
				}
			}
			else if (eventGroupPick & smallCup_ISR_BIT)			// Bitwise AND. Check if bits equal
 800119e:	7bfb      	ldrb	r3, [r7, #15]
 80011a0:	f003 0308 	and.w	r3, r3, #8
 80011a4:	2b00      	cmp	r3, #0
 80011a6:	d00d      	beq.n	80011c4 <brewerTask+0xcc>
			{
				if(enoughWaterCheck(smallCupSize))				// Check if there's enough water
 80011a8:	4b0e      	ldr	r3, [pc, #56]	@ (80011e4 <brewerTask+0xec>)
 80011aa:	781b      	ldrb	r3, [r3, #0]
 80011ac:	4618      	mov	r0, r3
 80011ae:	f000 fa69 	bl	8001684 <enoughWaterCheck>
 80011b2:	4603      	mov	r3, r0
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d005      	beq.n	80011c4 <brewerTask+0xcc>
				{
					brewingHelper(SMC_LED, smallCupSize);		// Run Small Cup Size Brew
 80011b8:	4b0a      	ldr	r3, [pc, #40]	@ (80011e4 <brewerTask+0xec>)
 80011ba:	781b      	ldrb	r3, [r3, #0]
 80011bc:	4619      	mov	r1, r3
 80011be:	2005      	movs	r0, #5
 80011c0:	f000 f828 	bl	8001214 <brewingHelper>
				}
			}
		  osDelay(300);
 80011c4:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80011c8:	f004 f8b7 	bl	800533a <osDelay>
		if(pwr_status == true)									// Brewing enabled when Power ON
 80011cc:	e798      	b.n	8001100 <brewerTask+0x8>
 80011ce:	bf00      	nop
 80011d0:	20000854 	.word	0x20000854
 80011d4:	20000954 	.word	0x20000954
 80011d8:	08009a1d 	.word	0x08009a1d
 80011dc:	08009a1e 	.word	0x08009a1e
 80011e0:	08009a1f 	.word	0x08009a1f
 80011e4:	08009a20 	.word	0x08009a20

080011e8 <pvAutoOffTimerOneShot>:

/**
 * One shot timer for the Auto Power Shut off functionality
 * */
void pvAutoOffTimerOneShot(void const * argument)
{
 80011e8:	b580      	push	{r7, lr}
 80011ea:	b082      	sub	sp, #8
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	6078      	str	r0, [r7, #4]
	pwr_status = false;							// Power OFF Coffee Machine
 80011f0:	4b07      	ldr	r3, [pc, #28]	@ (8001210 <pvAutoOffTimerOneShot+0x28>)
 80011f2:	2200      	movs	r2, #0
 80011f4:	701a      	strb	r2, [r3, #0]
	ledCtrl(PWR_LED, LED_OFF);					// Reset Power LED
 80011f6:	2100      	movs	r1, #0
 80011f8:	2000      	movs	r0, #0
 80011fa:	f000 faf1 	bl	80017e0 <ledCtrl>
	osDelay(100);								// Delay
 80011fe:	2064      	movs	r0, #100	@ 0x64
 8001200:	f004 f89b 	bl	800533a <osDelay>
	autoOffTimerMessage();						// User Message
 8001204:	f000 f8c8 	bl	8001398 <autoOffTimerMessage>
}
 8001208:	bf00      	nop
 800120a:	3708      	adds	r7, #8
 800120c:	46bd      	mov	sp, r7
 800120e:	bd80      	pop	{r7, pc}
 8001210:	20000854 	.word	0x20000854

08001214 <brewingHelper>:

/* -------------------- Helper Functions --------------------*/
void brewingHelper(uint8_t led, uint8_t mugSize)
{
 8001214:	b580      	push	{r7, lr}
 8001216:	b082      	sub	sp, #8
 8001218:	af00      	add	r7, sp, #0
 800121a:	4603      	mov	r3, r0
 800121c:	460a      	mov	r2, r1
 800121e:	71fb      	strb	r3, [r7, #7]
 8001220:	4613      	mov	r3, r2
 8001222:	71bb      	strb	r3, [r7, #6]
	ledCtrl(led, LED_ON);							// Set LED
 8001224:	79fb      	ldrb	r3, [r7, #7]
 8001226:	2101      	movs	r1, #1
 8001228:	4618      	mov	r0, r3
 800122a:	f000 fad9 	bl	80017e0 <ledCtrl>
	osDelay(100);
 800122e:	2064      	movs	r0, #100	@ 0x64
 8001230:	f004 f883 	bl	800533a <osDelay>
	brewTypeMessage(mugSize);						// User Message
 8001234:	79bb      	ldrb	r3, [r7, #6]
 8001236:	4618      	mov	r0, r3
 8001238:	f000 f908 	bl	800144c <brewTypeMessage>
	progressAnimation(mugSize);						// Progress Bar animation
 800123c:	79bb      	ldrb	r3, [r7, #6]
 800123e:	4618      	mov	r0, r3
 8001240:	f000 fa02 	bl	8001648 <progressAnimation>
	osDelay(100);
 8001244:	2064      	movs	r0, #100	@ 0x64
 8001246:	f004 f878 	bl	800533a <osDelay>
	waterLevel = waterLevel - mugSize;				// Decrement Water level
 800124a:	4b11      	ldr	r3, [pc, #68]	@ (8001290 <brewingHelper+0x7c>)
 800124c:	781a      	ldrb	r2, [r3, #0]
 800124e:	79bb      	ldrb	r3, [r7, #6]
 8001250:	1ad3      	subs	r3, r2, r3
 8001252:	b2da      	uxtb	r2, r3
 8001254:	4b0e      	ldr	r3, [pc, #56]	@ (8001290 <brewingHelper+0x7c>)
 8001256:	701a      	strb	r2, [r3, #0]
	waterLevelMessage(waterLevel);					// User Message
 8001258:	4b0d      	ldr	r3, [pc, #52]	@ (8001290 <brewingHelper+0x7c>)
 800125a:	781b      	ldrb	r3, [r3, #0]
 800125c:	4618      	mov	r0, r3
 800125e:	f000 f937 	bl	80014d0 <waterLevelMessage>
	continueBrew = false;							// Reset continueBrew
 8001262:	4b0c      	ldr	r3, [pc, #48]	@ (8001294 <brewingHelper+0x80>)
 8001264:	2200      	movs	r2, #0
 8001266:	701a      	strb	r2, [r3, #0]
	osTimerStart(autoOffTimerHandle, AUTO_OFF_TMR);	// Reset Auto-Off Timer
 8001268:	4b0b      	ldr	r3, [pc, #44]	@ (8001298 <brewingHelper+0x84>)
 800126a:	681b      	ldr	r3, [r3, #0]
 800126c:	f64e 2160 	movw	r1, #60000	@ 0xea60
 8001270:	4618      	mov	r0, r3
 8001272:	f004 f8ab 	bl	80053cc <osTimerStart>
	ledCtrl(led, LED_OFF);							// Reset LED
 8001276:	79fb      	ldrb	r3, [r7, #7]
 8001278:	2100      	movs	r1, #0
 800127a:	4618      	mov	r0, r3
 800127c:	f000 fab0 	bl	80017e0 <ledCtrl>
	osDelay(100);
 8001280:	2064      	movs	r0, #100	@ 0x64
 8001282:	f004 f85a 	bl	800533a <osDelay>
}
 8001286:	bf00      	nop
 8001288:	3708      	adds	r7, #8
 800128a:	46bd      	mov	sp, r7
 800128c:	bd80      	pop	{r7, pc}
 800128e:	bf00      	nop
 8001290:	20000001 	.word	0x20000001
 8001294:	20000855 	.word	0x20000855
 8001298:	20000944 	.word	0x20000944

0800129c <HAL_UART_TxCpltCallback>:
/**
 * Transmit complete callback function
 * @param *huart		Pointer to huart for indicating when Transmission is complete
 * */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 800129c:	b480      	push	{r7}
 800129e:	b083      	sub	sp, #12
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
    if (huart->Instance == USART1)
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	4a05      	ldr	r2, [pc, #20]	@ (80012c0 <HAL_UART_TxCpltCallback+0x24>)
 80012aa:	4293      	cmp	r3, r2
 80012ac:	d102      	bne.n	80012b4 <HAL_UART_TxCpltCallback+0x18>
    {
        uart_tx_complete = 1; // Transmission complete
 80012ae:	4b05      	ldr	r3, [pc, #20]	@ (80012c4 <HAL_UART_TxCpltCallback+0x28>)
 80012b0:	2201      	movs	r2, #1
 80012b2:	701a      	strb	r2, [r3, #0]
    }
}
 80012b4:	bf00      	nop
 80012b6:	370c      	adds	r7, #12
 80012b8:	46bd      	mov	sp, r7
 80012ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012be:	4770      	bx	lr
 80012c0:	40013800 	.word	0x40013800
 80012c4:	20000000 	.word	0x20000000

080012c8 <startupPrompt>:

/**
 * Startup Prompt Message
 * */
void startupPrompt(void)
{
 80012c8:	b580      	push	{r7, lr}
 80012ca:	af00      	add	r7, sp, #0
    snprintf(uart_buffer, sizeof(uart_buffer),
 80012cc:	4a13      	ldr	r2, [pc, #76]	@ (800131c <startupPrompt+0x54>)
 80012ce:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 80012d2:	4813      	ldr	r0, [pc, #76]	@ (8001320 <startupPrompt+0x58>)
 80012d4:	f007 fd30 	bl	8008d38 <sniprintf>
             "*        Fidel Quezada Guzman          *\n"
             "****************************************\n\n"
             "\tFidelicious Coffee Maker\n\n"
             "Press the ON Button to Start the Revival Process\n");

    uart_tx_complete = 0;
 80012d8:	4b12      	ldr	r3, [pc, #72]	@ (8001324 <startupPrompt+0x5c>)
 80012da:	2200      	movs	r2, #0
 80012dc:	701a      	strb	r2, [r3, #0]
    if (HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer)) != HAL_OK)
 80012de:	4810      	ldr	r0, [pc, #64]	@ (8001320 <startupPrompt+0x58>)
 80012e0:	f7fe ff76 	bl	80001d0 <strlen>
 80012e4:	4603      	mov	r3, r0
 80012e6:	b29b      	uxth	r3, r3
 80012e8:	461a      	mov	r2, r3
 80012ea:	490d      	ldr	r1, [pc, #52]	@ (8001320 <startupPrompt+0x58>)
 80012ec:	480e      	ldr	r0, [pc, #56]	@ (8001328 <startupPrompt+0x60>)
 80012ee:	f002 fe77 	bl	8003fe0 <HAL_UART_Transmit_IT>
 80012f2:	4603      	mov	r3, r0
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d00f      	beq.n	8001318 <startupPrompt+0x50>
    {
        snprintf(uart_buffer, sizeof(uart_buffer), "ERROR TRANSMITTING!");
 80012f8:	4a0c      	ldr	r2, [pc, #48]	@ (800132c <startupPrompt+0x64>)
 80012fa:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 80012fe:	4808      	ldr	r0, [pc, #32]	@ (8001320 <startupPrompt+0x58>)
 8001300:	f007 fd1a 	bl	8008d38 <sniprintf>
        HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer));
 8001304:	4806      	ldr	r0, [pc, #24]	@ (8001320 <startupPrompt+0x58>)
 8001306:	f7fe ff63 	bl	80001d0 <strlen>
 800130a:	4603      	mov	r3, r0
 800130c:	b29b      	uxth	r3, r3
 800130e:	461a      	mov	r2, r3
 8001310:	4903      	ldr	r1, [pc, #12]	@ (8001320 <startupPrompt+0x58>)
 8001312:	4805      	ldr	r0, [pc, #20]	@ (8001328 <startupPrompt+0x60>)
 8001314:	f002 fe64 	bl	8003fe0 <HAL_UART_Transmit_IT>
    }
}
 8001318:	bf00      	nop
 800131a:	bd80      	pop	{r7, pc}
 800131c:	08009764 	.word	0x08009764
 8001320:	20000728 	.word	0x20000728
 8001324:	20000000 	.word	0x20000000
 8001328:	200008ac 	.word	0x200008ac
 800132c:	08009884 	.word	0x08009884

08001330 <powerMessage>:

/**
 * Coffee Machine On/Off Message
 * */
void powerMessage(void)
{
 8001330:	b5b0      	push	{r4, r5, r7, lr}
 8001332:	b08a      	sub	sp, #40	@ 0x28
 8001334:	af00      	add	r7, sp, #0
	char messageOn[20] = "Coffee Maker ON\n";
 8001336:	4b15      	ldr	r3, [pc, #84]	@ (800138c <powerMessage+0x5c>)
 8001338:	f107 0414 	add.w	r4, r7, #20
 800133c:	461d      	mov	r5, r3
 800133e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001340:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	7023      	strb	r3, [r4, #0]
 8001346:	f107 0325 	add.w	r3, r7, #37	@ 0x25
 800134a:	2200      	movs	r2, #0
 800134c:	801a      	strh	r2, [r3, #0]
 800134e:	709a      	strb	r2, [r3, #2]
	char messageOff[20] = "Coffee Maker OFF\n";
 8001350:	4b0f      	ldr	r3, [pc, #60]	@ (8001390 <powerMessage+0x60>)
 8001352:	463c      	mov	r4, r7
 8001354:	461d      	mov	r5, r3
 8001356:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001358:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800135a:	682b      	ldr	r3, [r5, #0]
 800135c:	8023      	strh	r3, [r4, #0]
 800135e:	2300      	movs	r3, #0
 8001360:	827b      	strh	r3, [r7, #18]

    if (pwr_status == true)
 8001362:	4b0c      	ldr	r3, [pc, #48]	@ (8001394 <powerMessage+0x64>)
 8001364:	781b      	ldrb	r3, [r3, #0]
 8001366:	b2db      	uxtb	r3, r3
 8001368:	2b00      	cmp	r3, #0
 800136a:	d006      	beq.n	800137a <powerMessage+0x4a>
    {
        printIT(messageOn, CHAR_TYPE);
 800136c:	f107 0314 	add.w	r3, r7, #20
 8001370:	2100      	movs	r1, #0
 8001372:	4618      	mov	r0, r3
 8001374:	f000 f9de 	bl	8001734 <printIT>
    }
    else
    {
        printIT(messageOff, CHAR_TYPE);
    }
}
 8001378:	e004      	b.n	8001384 <powerMessage+0x54>
        printIT(messageOff, CHAR_TYPE);
 800137a:	463b      	mov	r3, r7
 800137c:	2100      	movs	r1, #0
 800137e:	4618      	mov	r0, r3
 8001380:	f000 f9d8 	bl	8001734 <printIT>
}
 8001384:	bf00      	nop
 8001386:	3728      	adds	r7, #40	@ 0x28
 8001388:	46bd      	mov	sp, r7
 800138a:	bdb0      	pop	{r4, r5, r7, pc}
 800138c:	080098ac 	.word	0x080098ac
 8001390:	080098c0 	.word	0x080098c0
 8001394:	20000854 	.word	0x20000854

08001398 <autoOffTimerMessage>:

/**
 * Auto Off Message
 * */
void autoOffTimerMessage()
{
 8001398:	b5b0      	push	{r4, r5, r7, lr}
 800139a:	b08a      	sub	sp, #40	@ 0x28
 800139c:	af00      	add	r7, sp, #0
	char message[35] = "Auto Turning OFF Coffee Machine\n";
 800139e:	4b0b      	ldr	r3, [pc, #44]	@ (80013cc <autoOffTimerMessage+0x34>)
 80013a0:	1d3c      	adds	r4, r7, #4
 80013a2:	461d      	mov	r5, r3
 80013a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80013a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80013a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80013aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80013ac:	682b      	ldr	r3, [r5, #0]
 80013ae:	7023      	strb	r3, [r4, #0]
 80013b0:	f107 0325 	add.w	r3, r7, #37	@ 0x25
 80013b4:	2200      	movs	r2, #0
 80013b6:	801a      	strh	r2, [r3, #0]
	printIT(message, CHAR_TYPE);
 80013b8:	1d3b      	adds	r3, r7, #4
 80013ba:	2100      	movs	r1, #0
 80013bc:	4618      	mov	r0, r3
 80013be:	f000 f9b9 	bl	8001734 <printIT>
}
 80013c2:	bf00      	nop
 80013c4:	3728      	adds	r7, #40	@ 0x28
 80013c6:	46bd      	mov	sp, r7
 80013c8:	bdb0      	pop	{r4, r5, r7, pc}
 80013ca:	bf00      	nop
 80013cc:	080098d4 	.word	0x080098d4

080013d0 <strongBrewMessage>:

/**
 * Strong/Normal Brew Message
 * */
void strongBrewMessage()
{
 80013d0:	b590      	push	{r4, r7, lr}
 80013d2:	b08b      	sub	sp, #44	@ 0x2c
 80013d4:	af00      	add	r7, sp, #0
	// print Messages
	char message1[20] = "Strong Brew\n";
 80013d6:	4b1a      	ldr	r3, [pc, #104]	@ (8001440 <strongBrewMessage+0x70>)
 80013d8:	f107 0414 	add.w	r4, r7, #20
 80013dc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80013de:	c407      	stmia	r4!, {r0, r1, r2}
 80013e0:	7023      	strb	r3, [r4, #0]
 80013e2:	f107 0321 	add.w	r3, r7, #33	@ 0x21
 80013e6:	2200      	movs	r2, #0
 80013e8:	601a      	str	r2, [r3, #0]
 80013ea:	f8c3 2003 	str.w	r2, [r3, #3]
	char message2[20] = "Normal Brew\n";
 80013ee:	4b15      	ldr	r3, [pc, #84]	@ (8001444 <strongBrewMessage+0x74>)
 80013f0:	463c      	mov	r4, r7
 80013f2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80013f4:	c407      	stmia	r4!, {r0, r1, r2}
 80013f6:	7023      	strb	r3, [r4, #0]
 80013f8:	f107 030d 	add.w	r3, r7, #13
 80013fc:	2200      	movs	r2, #0
 80013fe:	601a      	str	r2, [r3, #0]
 8001400:	f8c3 2003 	str.w	r2, [r3, #3]

	  if(strongBrewCoffee == false)
 8001404:	4b10      	ldr	r3, [pc, #64]	@ (8001448 <strongBrewMessage+0x78>)
 8001406:	781b      	ldrb	r3, [r3, #0]
 8001408:	b2db      	uxtb	r3, r3
 800140a:	f083 0301 	eor.w	r3, r3, #1
 800140e:	b2db      	uxtb	r3, r3
 8001410:	2b00      	cmp	r3, #0
 8001412:	d006      	beq.n	8001422 <strongBrewMessage+0x52>
	  {
		  printIT(message1, CHAR_TYPE);
 8001414:	f107 0314 	add.w	r3, r7, #20
 8001418:	2100      	movs	r1, #0
 800141a:	4618      	mov	r0, r3
 800141c:	f000 f98a 	bl	8001734 <printIT>
	  }
	  else if(strongBrewCoffee == true)
	  {
		  printIT(message2, CHAR_TYPE);
	  }
}
 8001420:	e009      	b.n	8001436 <strongBrewMessage+0x66>
	  else if(strongBrewCoffee == true)
 8001422:	4b09      	ldr	r3, [pc, #36]	@ (8001448 <strongBrewMessage+0x78>)
 8001424:	781b      	ldrb	r3, [r3, #0]
 8001426:	b2db      	uxtb	r3, r3
 8001428:	2b00      	cmp	r3, #0
 800142a:	d004      	beq.n	8001436 <strongBrewMessage+0x66>
		  printIT(message2, CHAR_TYPE);
 800142c:	463b      	mov	r3, r7
 800142e:	2100      	movs	r1, #0
 8001430:	4618      	mov	r0, r3
 8001432:	f000 f97f 	bl	8001734 <printIT>
}
 8001436:	bf00      	nop
 8001438:	372c      	adds	r7, #44	@ 0x2c
 800143a:	46bd      	mov	sp, r7
 800143c:	bd90      	pop	{r4, r7, pc}
 800143e:	bf00      	nop
 8001440:	080098f8 	.word	0x080098f8
 8001444:	0800990c 	.word	0x0800990c
 8001448:	20000856 	.word	0x20000856

0800144c <brewTypeMessage>:
/**
 * Brew Type Message
 * @param sizeBrew		Size of Brew selected by user
 * */
void brewTypeMessage(uint8_t* sizeBrew)
{
 800144c:	b590      	push	{r4, r7, lr}
 800144e:	b08b      	sub	sp, #44	@ 0x2c
 8001450:	af00      	add	r7, sp, #0
 8001452:	6078      	str	r0, [r7, #4]
	// print options
	char strong[15] = "Strong Brew: ";
 8001454:	4b1a      	ldr	r3, [pc, #104]	@ (80014c0 <brewTypeMessage+0x74>)
 8001456:	f107 0418 	add.w	r4, r7, #24
 800145a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800145c:	c407      	stmia	r4!, {r0, r1, r2}
 800145e:	8023      	strh	r3, [r4, #0]
 8001460:	2300      	movs	r3, #0
 8001462:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
	char normal[15] = "Normal Brew: ";
 8001466:	4b17      	ldr	r3, [pc, #92]	@ (80014c4 <brewTypeMessage+0x78>)
 8001468:	f107 0408 	add.w	r4, r7, #8
 800146c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800146e:	c407      	stmia	r4!, {r0, r1, r2}
 8001470:	8023      	strh	r3, [r4, #0]
 8001472:	2300      	movs	r3, #0
 8001474:	75bb      	strb	r3, [r7, #22]

	if (strongBrewCoffee == true)
 8001476:	4b14      	ldr	r3, [pc, #80]	@ (80014c8 <brewTypeMessage+0x7c>)
 8001478:	781b      	ldrb	r3, [r3, #0]
 800147a:	b2db      	uxtb	r3, r3
 800147c:	2b00      	cmp	r3, #0
 800147e:	d00b      	beq.n	8001498 <brewTypeMessage+0x4c>
	{
		printIT(strong, CHAR_TYPE);
 8001480:	f107 0318 	add.w	r3, r7, #24
 8001484:	2100      	movs	r1, #0
 8001486:	4618      	mov	r0, r3
 8001488:	f000 f954 	bl	8001734 <printIT>
		printIT((void*)&sizeBrew, UINT8_TYPE);
 800148c:	1d3b      	adds	r3, r7, #4
 800148e:	2101      	movs	r1, #1
 8001490:	4618      	mov	r0, r3
 8001492:	f000 f94f 	bl	8001734 <printIT>
 8001496:	e00a      	b.n	80014ae <brewTypeMessage+0x62>
	}
	else
	{
		printIT(normal, CHAR_TYPE);
 8001498:	f107 0308 	add.w	r3, r7, #8
 800149c:	2100      	movs	r1, #0
 800149e:	4618      	mov	r0, r3
 80014a0:	f000 f948 	bl	8001734 <printIT>
		printIT((void*)&sizeBrew, UINT8_TYPE);
 80014a4:	1d3b      	adds	r3, r7, #4
 80014a6:	2101      	movs	r1, #1
 80014a8:	4618      	mov	r0, r3
 80014aa:	f000 f943 	bl	8001734 <printIT>
	}
	printIT("oz\n", CHAR_TYPE);
 80014ae:	2100      	movs	r1, #0
 80014b0:	4806      	ldr	r0, [pc, #24]	@ (80014cc <brewTypeMessage+0x80>)
 80014b2:	f000 f93f 	bl	8001734 <printIT>

}
 80014b6:	bf00      	nop
 80014b8:	372c      	adds	r7, #44	@ 0x2c
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd90      	pop	{r4, r7, pc}
 80014be:	bf00      	nop
 80014c0:	08009924 	.word	0x08009924
 80014c4:	08009934 	.word	0x08009934
 80014c8:	20000856 	.word	0x20000856
 80014cc:	08009920 	.word	0x08009920

080014d0 <waterLevelMessage>:
/**
 * Water Level Message
 * @param waterLevel	Water level updated value
 * */
void waterLevelMessage(uint8_t* waterLevel)
{
 80014d0:	b590      	push	{r4, r7, lr}
 80014d2:	b089      	sub	sp, #36	@ 0x24
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
	// print options
	char message[15] = "Water Level: ";
 80014d8:	4b10      	ldr	r3, [pc, #64]	@ (800151c <waterLevelMessage+0x4c>)
 80014da:	f107 0410 	add.w	r4, r7, #16
 80014de:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80014e0:	c407      	stmia	r4!, {r0, r1, r2}
 80014e2:	8023      	strh	r3, [r4, #0]
 80014e4:	2300      	movs	r3, #0
 80014e6:	77bb      	strb	r3, [r7, #30]
	char newLine[3] = "\n";
 80014e8:	4b0d      	ldr	r3, [pc, #52]	@ (8001520 <waterLevelMessage+0x50>)
 80014ea:	881b      	ldrh	r3, [r3, #0]
 80014ec:	81bb      	strh	r3, [r7, #12]
 80014ee:	2300      	movs	r3, #0
 80014f0:	73bb      	strb	r3, [r7, #14]

	// print
	printIT(message, CHAR_TYPE);
 80014f2:	f107 0310 	add.w	r3, r7, #16
 80014f6:	2100      	movs	r1, #0
 80014f8:	4618      	mov	r0, r3
 80014fa:	f000 f91b 	bl	8001734 <printIT>
	printIT((void*)&waterLevel, UINT8_TYPE);
 80014fe:	1d3b      	adds	r3, r7, #4
 8001500:	2101      	movs	r1, #1
 8001502:	4618      	mov	r0, r3
 8001504:	f000 f916 	bl	8001734 <printIT>
	printIT(newLine, CHAR_TYPE);
 8001508:	f107 030c 	add.w	r3, r7, #12
 800150c:	2100      	movs	r1, #0
 800150e:	4618      	mov	r0, r3
 8001510:	f000 f910 	bl	8001734 <printIT>
}
 8001514:	bf00      	nop
 8001516:	3724      	adds	r7, #36	@ 0x24
 8001518:	46bd      	mov	sp, r7
 800151a:	bd90      	pop	{r4, r7, pc}
 800151c:	08009944 	.word	0x08009944
 8001520:	08009954 	.word	0x08009954

08001524 <updateProgressBar>:
 * Progress Bar Animation updater
 * @param progress		Input Value to print
 * @param oz			Size in oz
 * */
void updateProgressBar(uint8_t progress, uint8_t oz)
{
 8001524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001528:	b089      	sub	sp, #36	@ 0x24
 800152a:	af02      	add	r7, sp, #8
 800152c:	4603      	mov	r3, r0
 800152e:	460a      	mov	r2, r1
 8001530:	71fb      	strb	r3, [r7, #7]
 8001532:	4613      	mov	r3, r2
 8001534:	71bb      	strb	r3, [r7, #6]
 8001536:	466b      	mov	r3, sp
 8001538:	461e      	mov	r6, r3
    const uint8_t barWidth = 40;
 800153a:	2328      	movs	r3, #40	@ 0x28
 800153c:	75bb      	strb	r3, [r7, #22]
    uint8_t completedWidth = barWidth * progress / oz;
 800153e:	7dbb      	ldrb	r3, [r7, #22]
 8001540:	79fa      	ldrb	r2, [r7, #7]
 8001542:	fb03 f202 	mul.w	r2, r3, r2
 8001546:	79bb      	ldrb	r3, [r7, #6]
 8001548:	fb92 f3f3 	sdiv	r3, r2, r3
 800154c:	757b      	strb	r3, [r7, #21]

    char progressBar[barWidth + 1];
 800154e:	7dbb      	ldrb	r3, [r7, #22]
 8001550:	613b      	str	r3, [r7, #16]
 8001552:	7dbb      	ldrb	r3, [r7, #22]
 8001554:	3301      	adds	r3, #1
 8001556:	2200      	movs	r2, #0
 8001558:	4698      	mov	r8, r3
 800155a:	4691      	mov	r9, r2
 800155c:	f04f 0200 	mov.w	r2, #0
 8001560:	f04f 0300 	mov.w	r3, #0
 8001564:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8001568:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800156c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001570:	7dbb      	ldrb	r3, [r7, #22]
 8001572:	3301      	adds	r3, #1
 8001574:	2200      	movs	r2, #0
 8001576:	461c      	mov	r4, r3
 8001578:	4615      	mov	r5, r2
 800157a:	f04f 0200 	mov.w	r2, #0
 800157e:	f04f 0300 	mov.w	r3, #0
 8001582:	00eb      	lsls	r3, r5, #3
 8001584:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001588:	00e2      	lsls	r2, r4, #3
 800158a:	7dbb      	ldrb	r3, [r7, #22]
 800158c:	3301      	adds	r3, #1
 800158e:	3307      	adds	r3, #7
 8001590:	08db      	lsrs	r3, r3, #3
 8001592:	00db      	lsls	r3, r3, #3
 8001594:	ebad 0d03 	sub.w	sp, sp, r3
 8001598:	ab02      	add	r3, sp, #8
 800159a:	3300      	adds	r3, #0
 800159c:	60fb      	str	r3, [r7, #12]
    memset(progressBar, ' ', barWidth);
 800159e:	7dbb      	ldrb	r3, [r7, #22]
 80015a0:	461a      	mov	r2, r3
 80015a2:	2120      	movs	r1, #32
 80015a4:	68f8      	ldr	r0, [r7, #12]
 80015a6:	f007 fbfb 	bl	8008da0 <memset>
    progressBar[barWidth] = '\0';
 80015aa:	7dbb      	ldrb	r3, [r7, #22]
 80015ac:	68fa      	ldr	r2, [r7, #12]
 80015ae:	2100      	movs	r1, #0
 80015b0:	54d1      	strb	r1, [r2, r3]

    for (uint8_t i = 0; i < completedWidth; ++i)
 80015b2:	2300      	movs	r3, #0
 80015b4:	75fb      	strb	r3, [r7, #23]
 80015b6:	e006      	b.n	80015c6 <updateProgressBar+0xa2>
    {
        progressBar[i] = '*';
 80015b8:	7dfb      	ldrb	r3, [r7, #23]
 80015ba:	68fa      	ldr	r2, [r7, #12]
 80015bc:	212a      	movs	r1, #42	@ 0x2a
 80015be:	54d1      	strb	r1, [r2, r3]
    for (uint8_t i = 0; i < completedWidth; ++i)
 80015c0:	7dfb      	ldrb	r3, [r7, #23]
 80015c2:	3301      	adds	r3, #1
 80015c4:	75fb      	strb	r3, [r7, #23]
 80015c6:	7dfa      	ldrb	r2, [r7, #23]
 80015c8:	7d7b      	ldrb	r3, [r7, #21]
 80015ca:	429a      	cmp	r2, r3
 80015cc:	d3f4      	bcc.n	80015b8 <updateProgressBar+0x94>
    }

    snprintf(uart_buffer, sizeof(uart_buffer), "[%s] %d oz\r\n", progressBar, progress);
 80015ce:	79fb      	ldrb	r3, [r7, #7]
 80015d0:	9300      	str	r3, [sp, #0]
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	4a17      	ldr	r2, [pc, #92]	@ (8001634 <updateProgressBar+0x110>)
 80015d6:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 80015da:	4817      	ldr	r0, [pc, #92]	@ (8001638 <updateProgressBar+0x114>)
 80015dc:	f007 fbac 	bl	8008d38 <sniprintf>

    uart_tx_complete = 0;
 80015e0:	4b16      	ldr	r3, [pc, #88]	@ (800163c <updateProgressBar+0x118>)
 80015e2:	2200      	movs	r2, #0
 80015e4:	701a      	strb	r2, [r3, #0]
    if (HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer)) != HAL_OK)
 80015e6:	4814      	ldr	r0, [pc, #80]	@ (8001638 <updateProgressBar+0x114>)
 80015e8:	f7fe fdf2 	bl	80001d0 <strlen>
 80015ec:	4603      	mov	r3, r0
 80015ee:	b29b      	uxth	r3, r3
 80015f0:	461a      	mov	r2, r3
 80015f2:	4911      	ldr	r1, [pc, #68]	@ (8001638 <updateProgressBar+0x114>)
 80015f4:	4812      	ldr	r0, [pc, #72]	@ (8001640 <updateProgressBar+0x11c>)
 80015f6:	f002 fcf3 	bl	8003fe0 <HAL_UART_Transmit_IT>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d00f      	beq.n	8001620 <updateProgressBar+0xfc>
    {
        snprintf(uart_buffer, sizeof(uart_buffer), "ERROR TRANSMITTING!\n");
 8001600:	4a10      	ldr	r2, [pc, #64]	@ (8001644 <updateProgressBar+0x120>)
 8001602:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8001606:	480c      	ldr	r0, [pc, #48]	@ (8001638 <updateProgressBar+0x114>)
 8001608:	f007 fb96 	bl	8008d38 <sniprintf>
        HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer));
 800160c:	480a      	ldr	r0, [pc, #40]	@ (8001638 <updateProgressBar+0x114>)
 800160e:	f7fe fddf 	bl	80001d0 <strlen>
 8001612:	4603      	mov	r3, r0
 8001614:	b29b      	uxth	r3, r3
 8001616:	461a      	mov	r2, r3
 8001618:	4907      	ldr	r1, [pc, #28]	@ (8001638 <updateProgressBar+0x114>)
 800161a:	4809      	ldr	r0, [pc, #36]	@ (8001640 <updateProgressBar+0x11c>)
 800161c:	f002 fce0 	bl	8003fe0 <HAL_UART_Transmit_IT>
    }
    HAL_Delay(20);
 8001620:	2014      	movs	r0, #20
 8001622:	f000 f9d1 	bl	80019c8 <HAL_Delay>
 8001626:	46b5      	mov	sp, r6
}
 8001628:	bf00      	nop
 800162a:	371c      	adds	r7, #28
 800162c:	46bd      	mov	sp, r7
 800162e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001632:	bf00      	nop
 8001634:	08009958 	.word	0x08009958
 8001638:	20000728 	.word	0x20000728
 800163c:	20000000 	.word	0x20000000
 8001640:	200008ac 	.word	0x200008ac
 8001644:	08009968 	.word	0x08009968

08001648 <progressAnimation>:
/**
 * Progress Bar Animation
 * @param size		Input Value to print
 * */
void progressAnimation(uint8_t size)
{
 8001648:	b580      	push	{r7, lr}
 800164a:	b084      	sub	sp, #16
 800164c:	af00      	add	r7, sp, #0
 800164e:	4603      	mov	r3, r0
 8001650:	71fb      	strb	r3, [r7, #7]
	for (int i = 0; i <= size; i++)
 8001652:	2300      	movs	r3, #0
 8001654:	60fb      	str	r3, [r7, #12]
 8001656:	e00c      	b.n	8001672 <progressAnimation+0x2a>
	{
		updateProgressBar(i, size);
 8001658:	68fb      	ldr	r3, [r7, #12]
 800165a:	b2db      	uxtb	r3, r3
 800165c:	79fa      	ldrb	r2, [r7, #7]
 800165e:	4611      	mov	r1, r2
 8001660:	4618      	mov	r0, r3
 8001662:	f7ff ff5f 	bl	8001524 <updateProgressBar>
		osDelay(50);  					// Add delay to simulate progress
 8001666:	2032      	movs	r0, #50	@ 0x32
 8001668:	f003 fe67 	bl	800533a <osDelay>
	for (int i = 0; i <= size; i++)
 800166c:	68fb      	ldr	r3, [r7, #12]
 800166e:	3301      	adds	r3, #1
 8001670:	60fb      	str	r3, [r7, #12]
 8001672:	79fb      	ldrb	r3, [r7, #7]
 8001674:	68fa      	ldr	r2, [r7, #12]
 8001676:	429a      	cmp	r2, r3
 8001678:	ddee      	ble.n	8001658 <progressAnimation+0x10>
	}
}
 800167a:	bf00      	nop
 800167c:	bf00      	nop
 800167e:	3710      	adds	r7, #16
 8001680:	46bd      	mov	sp, r7
 8001682:	bd80      	pop	{r7, pc}

08001684 <enoughWaterCheck>:
/**
 * Check if Coffee Machine has enough water
 * @param coffeeSize	Size of coffee that will be brewed next
 * */
bool enoughWaterCheck(uint8_t coffeeSize)
{
 8001684:	b5b0      	push	{r4, r5, r7, lr}
 8001686:	b09e      	sub	sp, #120	@ 0x78
 8001688:	af00      	add	r7, sp, #0
 800168a:	4603      	mov	r3, r0
 800168c:	71fb      	strb	r3, [r7, #7]
	char message1[50] = "Water Level is too low!!\nAuto-Refilling now...\n";
 800168e:	4b26      	ldr	r3, [pc, #152]	@ (8001728 <enoughWaterCheck+0xa4>)
 8001690:	f107 0440 	add.w	r4, r7, #64	@ 0x40
 8001694:	461d      	mov	r5, r3
 8001696:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001698:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800169a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800169c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800169e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80016a2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80016a6:	2300      	movs	r3, #0
 80016a8:	f8a7 3070 	strh.w	r3, [r7, #112]	@ 0x70
	char message2[55] = "Water Level is full now!\nPlease select Coffee Again\n";
 80016ac:	4b1f      	ldr	r3, [pc, #124]	@ (800172c <enoughWaterCheck+0xa8>)
 80016ae:	f107 0408 	add.w	r4, r7, #8
 80016b2:	461d      	mov	r5, r3
 80016b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80016be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80016c0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80016c4:	6020      	str	r0, [r4, #0]
 80016c6:	3404      	adds	r4, #4
 80016c8:	7021      	strb	r1, [r4, #0]
 80016ca:	f107 033d 	add.w	r3, r7, #61	@ 0x3d
 80016ce:	2200      	movs	r2, #0
 80016d0:	801a      	strh	r2, [r3, #0]

	// Check if we will have enough water after CoffeeSize selection
	if(waterLevel < coffeeSize)
 80016d2:	4b17      	ldr	r3, [pc, #92]	@ (8001730 <enoughWaterCheck+0xac>)
 80016d4:	781b      	ldrb	r3, [r3, #0]
 80016d6:	79fa      	ldrb	r2, [r7, #7]
 80016d8:	429a      	cmp	r2, r3
 80016da:	d91f      	bls.n	800171c <enoughWaterCheck+0x98>
	{
		// Print Message to user
		printIT(message1, CHAR_TYPE);
 80016dc:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80016e0:	2100      	movs	r1, #0
 80016e2:	4618      	mov	r0, r3
 80016e4:	f000 f826 	bl	8001734 <printIT>

		// Auto-Refill Water w/ animation
		for (int i = 0; i <= 40; i++)
 80016e8:	2300      	movs	r3, #0
 80016ea:	677b      	str	r3, [r7, #116]	@ 0x74
 80016ec:	e008      	b.n	8001700 <enoughWaterCheck+0x7c>
		{
		  updateProgressBar(i, 40);
 80016ee:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80016f0:	b2db      	uxtb	r3, r3
 80016f2:	2128      	movs	r1, #40	@ 0x28
 80016f4:	4618      	mov	r0, r3
 80016f6:	f7ff ff15 	bl	8001524 <updateProgressBar>
		for (int i = 0; i <= 40; i++)
 80016fa:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80016fc:	3301      	adds	r3, #1
 80016fe:	677b      	str	r3, [r7, #116]	@ 0x74
 8001700:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8001702:	2b28      	cmp	r3, #40	@ 0x28
 8001704:	ddf3      	ble.n	80016ee <enoughWaterCheck+0x6a>
		}
		waterLevel = FULL_WATER_TANK;
 8001706:	4b0a      	ldr	r3, [pc, #40]	@ (8001730 <enoughWaterCheck+0xac>)
 8001708:	2264      	movs	r2, #100	@ 0x64
 800170a:	701a      	strb	r2, [r3, #0]

		// Print Message to user
		printIT(message2, CHAR_TYPE);
 800170c:	f107 0308 	add.w	r3, r7, #8
 8001710:	2100      	movs	r1, #0
 8001712:	4618      	mov	r0, r3
 8001714:	f000 f80e 	bl	8001734 <printIT>

	    return false;	// wont proceed w/ brew
 8001718:	2300      	movs	r3, #0
 800171a:	e000      	b.n	800171e <enoughWaterCheck+0x9a>
	}
	else
	{
		return true;	// proceed w/ brew
 800171c:	2301      	movs	r3, #1
	}
}
 800171e:	4618      	mov	r0, r3
 8001720:	3778      	adds	r7, #120	@ 0x78
 8001722:	46bd      	mov	sp, r7
 8001724:	bdb0      	pop	{r4, r5, r7, pc}
 8001726:	bf00      	nop
 8001728:	08009980 	.word	0x08009980
 800172c:	080099b4 	.word	0x080099b4
 8001730:	20000001 	.word	0x20000001

08001734 <printIT>:
 * Helper Function for type based printing
 * @param value			Input Value to print
 * @param type			Data Type to handle
 * */
void printIT(void* value, ValueType type)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	b082      	sub	sp, #8
 8001738:	af00      	add	r7, sp, #0
 800173a:	6078      	str	r0, [r7, #4]
 800173c:	460b      	mov	r3, r1
 800173e:	70fb      	strb	r3, [r7, #3]
	// Use buffer based on type of value we want to print
    switch (type)
 8001740:	78fb      	ldrb	r3, [r7, #3]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d002      	beq.n	800174c <printIT+0x18>
 8001746:	2b01      	cmp	r3, #1
 8001748:	d008      	beq.n	800175c <printIT+0x28>
 800174a:	e010      	b.n	800176e <printIT+0x3a>
    {
        case CHAR_TYPE:
            snprintf(uart_buffer, sizeof(uart_buffer), "%s", (char*)value);
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	4a1d      	ldr	r2, [pc, #116]	@ (80017c4 <printIT+0x90>)
 8001750:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8001754:	481c      	ldr	r0, [pc, #112]	@ (80017c8 <printIT+0x94>)
 8001756:	f007 faef 	bl	8008d38 <sniprintf>
            break;
 800175a:	e00f      	b.n	800177c <printIT+0x48>
        case UINT8_TYPE:
            snprintf(uart_buffer, sizeof(uart_buffer), "%u", *(uint8_t*)value);
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	781b      	ldrb	r3, [r3, #0]
 8001760:	4a1a      	ldr	r2, [pc, #104]	@ (80017cc <printIT+0x98>)
 8001762:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8001766:	4818      	ldr	r0, [pc, #96]	@ (80017c8 <printIT+0x94>)
 8001768:	f007 fae6 	bl	8008d38 <sniprintf>
            break;
 800176c:	e006      	b.n	800177c <printIT+0x48>
        default:
            snprintf(uart_buffer, sizeof(uart_buffer), "Unknown type\n");
 800176e:	4a18      	ldr	r2, [pc, #96]	@ (80017d0 <printIT+0x9c>)
 8001770:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8001774:	4814      	ldr	r0, [pc, #80]	@ (80017c8 <printIT+0x94>)
 8001776:	f007 fadf 	bl	8008d38 <sniprintf>
            break;
 800177a:	bf00      	nop
    }

    // UART Print
    uart_tx_complete = 0;
 800177c:	4b15      	ldr	r3, [pc, #84]	@ (80017d4 <printIT+0xa0>)
 800177e:	2200      	movs	r2, #0
 8001780:	701a      	strb	r2, [r3, #0]
    if (HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer)) != HAL_OK)
 8001782:	4811      	ldr	r0, [pc, #68]	@ (80017c8 <printIT+0x94>)
 8001784:	f7fe fd24 	bl	80001d0 <strlen>
 8001788:	4603      	mov	r3, r0
 800178a:	b29b      	uxth	r3, r3
 800178c:	461a      	mov	r2, r3
 800178e:	490e      	ldr	r1, [pc, #56]	@ (80017c8 <printIT+0x94>)
 8001790:	4811      	ldr	r0, [pc, #68]	@ (80017d8 <printIT+0xa4>)
 8001792:	f002 fc25 	bl	8003fe0 <HAL_UART_Transmit_IT>
 8001796:	4603      	mov	r3, r0
 8001798:	2b00      	cmp	r3, #0
 800179a:	d00f      	beq.n	80017bc <printIT+0x88>
    {
        snprintf(uart_buffer, sizeof(uart_buffer), "ERROR TRANSMITTING!\n");
 800179c:	4a0f      	ldr	r2, [pc, #60]	@ (80017dc <printIT+0xa8>)
 800179e:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 80017a2:	4809      	ldr	r0, [pc, #36]	@ (80017c8 <printIT+0x94>)
 80017a4:	f007 fac8 	bl	8008d38 <sniprintf>
        HAL_UART_Transmit_IT(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer));
 80017a8:	4807      	ldr	r0, [pc, #28]	@ (80017c8 <printIT+0x94>)
 80017aa:	f7fe fd11 	bl	80001d0 <strlen>
 80017ae:	4603      	mov	r3, r0
 80017b0:	b29b      	uxth	r3, r3
 80017b2:	461a      	mov	r2, r3
 80017b4:	4904      	ldr	r1, [pc, #16]	@ (80017c8 <printIT+0x94>)
 80017b6:	4808      	ldr	r0, [pc, #32]	@ (80017d8 <printIT+0xa4>)
 80017b8:	f002 fc12 	bl	8003fe0 <HAL_UART_Transmit_IT>
    }
}
 80017bc:	bf00      	nop
 80017be:	3708      	adds	r7, #8
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}
 80017c4:	080099ec 	.word	0x080099ec
 80017c8:	20000728 	.word	0x20000728
 80017cc:	080099f0 	.word	0x080099f0
 80017d0:	080099f4 	.word	0x080099f4
 80017d4:	20000000 	.word	0x20000000
 80017d8:	200008ac 	.word	0x200008ac
 80017dc:	08009968 	.word	0x08009968

080017e0 <ledCtrl>:
 * Green LED Control
 * @param led		LED to control
 * @param mode		LED Mode (On/off/toggle)
 * */
void ledCtrl(uint8_t led, uint8_t mode)
{
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b084      	sub	sp, #16
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	4603      	mov	r3, r0
 80017e8:	460a      	mov	r2, r1
 80017ea:	71fb      	strb	r3, [r7, #7]
 80017ec:	4613      	mov	r3, r2
 80017ee:	71bb      	strb	r3, [r7, #6]
	// Init Port & Pin variables
	GPIO_TypeDef *port = NULL;
 80017f0:	2300      	movs	r3, #0
 80017f2:	60fb      	str	r3, [r7, #12]
	uint16_t pin = 0;
 80017f4:	2300      	movs	r3, #0
 80017f6:	817b      	strh	r3, [r7, #10]

	// Assign LED GPIO port & pin values based on led param
	getLedGpio(led, &port, &pin);
 80017f8:	f107 020a 	add.w	r2, r7, #10
 80017fc:	f107 010c 	add.w	r1, r7, #12
 8001800:	79fb      	ldrb	r3, [r7, #7]
 8001802:	4618      	mov	r0, r3
 8001804:	f000 f824 	bl	8001850 <getLedGpio>

	// Control LED based on mode param
	switch (mode)
 8001808:	79bb      	ldrb	r3, [r7, #6]
 800180a:	2b02      	cmp	r3, #2
 800180c:	d014      	beq.n	8001838 <ledCtrl+0x58>
 800180e:	2b02      	cmp	r3, #2
 8001810:	dc19      	bgt.n	8001846 <ledCtrl+0x66>
 8001812:	2b00      	cmp	r3, #0
 8001814:	d002      	beq.n	800181c <ledCtrl+0x3c>
 8001816:	2b01      	cmp	r3, #1
 8001818:	d007      	beq.n	800182a <ledCtrl+0x4a>
		case LED_TOGGLE:									// Toggle
			HAL_GPIO_TogglePin(port, pin);
			break;

        default:
            break;
 800181a:	e014      	b.n	8001846 <ledCtrl+0x66>
			HAL_GPIO_WritePin(port, pin,GPIO_PIN_RESET);
 800181c:	68fb      	ldr	r3, [r7, #12]
 800181e:	8979      	ldrh	r1, [r7, #10]
 8001820:	2200      	movs	r2, #0
 8001822:	4618      	mov	r0, r3
 8001824:	f000 fc00 	bl	8002028 <HAL_GPIO_WritePin>
			break;
 8001828:	e00e      	b.n	8001848 <ledCtrl+0x68>
			HAL_GPIO_WritePin(port, pin,GPIO_PIN_SET);
 800182a:	68fb      	ldr	r3, [r7, #12]
 800182c:	8979      	ldrh	r1, [r7, #10]
 800182e:	2201      	movs	r2, #1
 8001830:	4618      	mov	r0, r3
 8001832:	f000 fbf9 	bl	8002028 <HAL_GPIO_WritePin>
			break;
 8001836:	e007      	b.n	8001848 <ledCtrl+0x68>
			HAL_GPIO_TogglePin(port, pin);
 8001838:	68fb      	ldr	r3, [r7, #12]
 800183a:	897a      	ldrh	r2, [r7, #10]
 800183c:	4611      	mov	r1, r2
 800183e:	4618      	mov	r0, r3
 8001840:	f000 fc0a 	bl	8002058 <HAL_GPIO_TogglePin>
			break;
 8001844:	e000      	b.n	8001848 <ledCtrl+0x68>
            break;
 8001846:	bf00      	nop
	}
}
 8001848:	bf00      	nop
 800184a:	3710      	adds	r7, #16
 800184c:	46bd      	mov	sp, r7
 800184e:	bd80      	pop	{r7, pc}

08001850 <getLedGpio>:
 * @param led		LED in question
 * @param **port	Pointer to *port of led param
 * @param *pin		Pointer to pin of led param
 * */
void getLedGpio(uint8_t led, GPIO_TypeDef **port, uint16_t *pin)
{
 8001850:	b480      	push	{r7}
 8001852:	b085      	sub	sp, #20
 8001854:	af00      	add	r7, sp, #0
 8001856:	4603      	mov	r3, r0
 8001858:	60b9      	str	r1, [r7, #8]
 800185a:	607a      	str	r2, [r7, #4]
 800185c:	73fb      	strb	r3, [r7, #15]
    *port = NULL;
 800185e:	68bb      	ldr	r3, [r7, #8]
 8001860:	2200      	movs	r2, #0
 8001862:	601a      	str	r2, [r3, #0]
    *pin = 0;
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	2200      	movs	r2, #0
 8001868:	801a      	strh	r2, [r3, #0]

    // Assign port & pin values by reference
    switch (led)
 800186a:	7bfb      	ldrb	r3, [r7, #15]
 800186c:	2b05      	cmp	r3, #5
 800186e:	d83f      	bhi.n	80018f0 <getLedGpio+0xa0>
 8001870:	a201      	add	r2, pc, #4	@ (adr r2, 8001878 <getLedGpio+0x28>)
 8001872:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001876:	bf00      	nop
 8001878:	08001891 	.word	0x08001891
 800187c:	0800189f 	.word	0x0800189f
 8001880:	080018b1 	.word	0x080018b1
 8001884:	080018c1 	.word	0x080018c1
 8001888:	080018d1 	.word	0x080018d1
 800188c:	080018e1 	.word	0x080018e1
    {
        case PWR_LED:									// Power (Green)
            *port = LED_PWR_ON_GPIO_Port;
 8001890:	68bb      	ldr	r3, [r7, #8]
 8001892:	4a1b      	ldr	r2, [pc, #108]	@ (8001900 <getLedGpio+0xb0>)
 8001894:	601a      	str	r2, [r3, #0]
            *pin = LED_PWR_ON_Pin;
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	2202      	movs	r2, #2
 800189a:	801a      	strh	r2, [r3, #0]
            break;
 800189c:	e029      	b.n	80018f2 <getLedGpio+0xa2>

        case STR_LED:									// Strength (Yellow)
            *port = LED_STR_BRW_GPIO_Port;
 800189e:	68bb      	ldr	r3, [r7, #8]
 80018a0:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80018a4:	601a      	str	r2, [r3, #0]
            *pin = LED_STR_BRW_Pin;
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80018ac:	801a      	strh	r2, [r3, #0]
            break;
 80018ae:	e020      	b.n	80018f2 <getLedGpio+0xa2>

        case TVL_LED:									// Traveler Size (Red)
            *port = LED_TRAV_MUG_GPIO_Port;
 80018b0:	68bb      	ldr	r3, [r7, #8]
 80018b2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80018b6:	601a      	str	r2, [r3, #0]
            *pin = LED_TRAV_MUG_Pin;
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	2210      	movs	r2, #16
 80018bc:	801a      	strh	r2, [r3, #0]
            break;
 80018be:	e018      	b.n	80018f2 <getLedGpio+0xa2>

        case LRG_LED:									// Large Size (Red)
            *port = LED_LARG_MUG_GPIO_Port;
 80018c0:	68bb      	ldr	r3, [r7, #8]
 80018c2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80018c6:	601a      	str	r2, [r3, #0]
            *pin = LED_LARG_MUG_Pin;
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	2280      	movs	r2, #128	@ 0x80
 80018cc:	801a      	strh	r2, [r3, #0]
            break;
 80018ce:	e010      	b.n	80018f2 <getLedGpio+0xa2>

        case SMM_LED:									// Small Mug Size (Red)
            *port = LED_SMALL_MUG_GPIO_Port;
 80018d0:	68bb      	ldr	r3, [r7, #8]
 80018d2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80018d6:	601a      	str	r2, [r3, #0]
            *pin = LED_SMALL_MUG_Pin;
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	2240      	movs	r2, #64	@ 0x40
 80018dc:	801a      	strh	r2, [r3, #0]
            break;
 80018de:	e008      	b.n	80018f2 <getLedGpio+0xa2>

        case SMC_LED:									// Small Cup Size (Red)
            *port = LED_SMALL_CUP_GPIO_Port;
 80018e0:	68bb      	ldr	r3, [r7, #8]
 80018e2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80018e6:	601a      	str	r2, [r3, #0]
            *pin = LED_SMALL_CUP_Pin;
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	2220      	movs	r2, #32
 80018ec:	801a      	strh	r2, [r3, #0]
            break;
 80018ee:	e000      	b.n	80018f2 <getLedGpio+0xa2>

        default:
            break;
 80018f0:	bf00      	nop
    }
}
 80018f2:	bf00      	nop
 80018f4:	3714      	adds	r7, #20
 80018f6:	46bd      	mov	sp, r7
 80018f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fc:	4770      	bx	lr
 80018fe:	bf00      	nop
 8001900:	48000400 	.word	0x48000400

08001904 <Reset_Handler>:
 8001904:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800193c <LoopForever+0x2>
 8001908:	f7ff fb46 	bl	8000f98 <SystemInit>
 800190c:	480c      	ldr	r0, [pc, #48]	@ (8001940 <LoopForever+0x6>)
 800190e:	490d      	ldr	r1, [pc, #52]	@ (8001944 <LoopForever+0xa>)
 8001910:	4a0d      	ldr	r2, [pc, #52]	@ (8001948 <LoopForever+0xe>)
 8001912:	2300      	movs	r3, #0
 8001914:	e002      	b.n	800191c <LoopCopyDataInit>

08001916 <CopyDataInit>:
 8001916:	58d4      	ldr	r4, [r2, r3]
 8001918:	50c4      	str	r4, [r0, r3]
 800191a:	3304      	adds	r3, #4

0800191c <LoopCopyDataInit>:
 800191c:	18c4      	adds	r4, r0, r3
 800191e:	428c      	cmp	r4, r1
 8001920:	d3f9      	bcc.n	8001916 <CopyDataInit>
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <LoopForever+0x12>)
 8001924:	4c0a      	ldr	r4, [pc, #40]	@ (8001950 <LoopForever+0x16>)
 8001926:	2300      	movs	r3, #0
 8001928:	e001      	b.n	800192e <LoopFillZerobss>

0800192a <FillZerobss>:
 800192a:	6013      	str	r3, [r2, #0]
 800192c:	3204      	adds	r2, #4

0800192e <LoopFillZerobss>:
 800192e:	42a2      	cmp	r2, r4
 8001930:	d3fb      	bcc.n	800192a <FillZerobss>
 8001932:	f007 fa43 	bl	8008dbc <__libc_init_array>
 8001936:	f7fe fe4f 	bl	80005d8 <main>

0800193a <LoopForever>:
 800193a:	e7fe      	b.n	800193a <LoopForever>
 800193c:	20018000 	.word	0x20018000
 8001940:	20000000 	.word	0x20000000
 8001944:	20000064 	.word	0x20000064
 8001948:	08009ab0 	.word	0x08009ab0
 800194c:	20000064 	.word	0x20000064
 8001950:	2000251c 	.word	0x2000251c

08001954 <ADC1_2_IRQHandler>:
 8001954:	e7fe      	b.n	8001954 <ADC1_2_IRQHandler>

08001956 <HAL_Init>:
 8001956:	b580      	push	{r7, lr}
 8001958:	b082      	sub	sp, #8
 800195a:	af00      	add	r7, sp, #0
 800195c:	2300      	movs	r3, #0
 800195e:	71fb      	strb	r3, [r7, #7]
 8001960:	2003      	movs	r0, #3
 8001962:	f000 f902 	bl	8001b6a <HAL_NVIC_SetPriorityGrouping>
 8001966:	200f      	movs	r0, #15
 8001968:	f7ff f984 	bl	8000c74 <HAL_InitTick>
 800196c:	4603      	mov	r3, r0
 800196e:	2b00      	cmp	r3, #0
 8001970:	d002      	beq.n	8001978 <HAL_Init+0x22>
 8001972:	2301      	movs	r3, #1
 8001974:	71fb      	strb	r3, [r7, #7]
 8001976:	e001      	b.n	800197c <HAL_Init+0x26>
 8001978:	f7ff f890 	bl	8000a9c <HAL_MspInit>
 800197c:	79fb      	ldrb	r3, [r7, #7]
 800197e:	4618      	mov	r0, r3
 8001980:	3708      	adds	r7, #8
 8001982:	46bd      	mov	sp, r7
 8001984:	bd80      	pop	{r7, pc}
	...

08001988 <HAL_IncTick>:
 8001988:	b480      	push	{r7}
 800198a:	af00      	add	r7, sp, #0
 800198c:	4b06      	ldr	r3, [pc, #24]	@ (80019a8 <HAL_IncTick+0x20>)
 800198e:	781b      	ldrb	r3, [r3, #0]
 8001990:	461a      	mov	r2, r3
 8001992:	4b06      	ldr	r3, [pc, #24]	@ (80019ac <HAL_IncTick+0x24>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	4413      	add	r3, r2
 8001998:	4a04      	ldr	r2, [pc, #16]	@ (80019ac <HAL_IncTick+0x24>)
 800199a:	6013      	str	r3, [r2, #0]
 800199c:	bf00      	nop
 800199e:	46bd      	mov	sp, r7
 80019a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019a4:	4770      	bx	lr
 80019a6:	bf00      	nop
 80019a8:	2000000c 	.word	0x2000000c
 80019ac:	200009a8 	.word	0x200009a8

080019b0 <HAL_GetTick>:
 80019b0:	b480      	push	{r7}
 80019b2:	af00      	add	r7, sp, #0
 80019b4:	4b03      	ldr	r3, [pc, #12]	@ (80019c4 <HAL_GetTick+0x14>)
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	4618      	mov	r0, r3
 80019ba:	46bd      	mov	sp, r7
 80019bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c0:	4770      	bx	lr
 80019c2:	bf00      	nop
 80019c4:	200009a8 	.word	0x200009a8

080019c8 <HAL_Delay>:
 80019c8:	b580      	push	{r7, lr}
 80019ca:	b084      	sub	sp, #16
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	6078      	str	r0, [r7, #4]
 80019d0:	f7ff ffee 	bl	80019b0 <HAL_GetTick>
 80019d4:	60b8      	str	r0, [r7, #8]
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	60fb      	str	r3, [r7, #12]
 80019da:	68fb      	ldr	r3, [r7, #12]
 80019dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80019e0:	d005      	beq.n	80019ee <HAL_Delay+0x26>
 80019e2:	4b0a      	ldr	r3, [pc, #40]	@ (8001a0c <HAL_Delay+0x44>)
 80019e4:	781b      	ldrb	r3, [r3, #0]
 80019e6:	461a      	mov	r2, r3
 80019e8:	68fb      	ldr	r3, [r7, #12]
 80019ea:	4413      	add	r3, r2
 80019ec:	60fb      	str	r3, [r7, #12]
 80019ee:	bf00      	nop
 80019f0:	f7ff ffde 	bl	80019b0 <HAL_GetTick>
 80019f4:	4602      	mov	r2, r0
 80019f6:	68bb      	ldr	r3, [r7, #8]
 80019f8:	1ad3      	subs	r3, r2, r3
 80019fa:	68fa      	ldr	r2, [r7, #12]
 80019fc:	429a      	cmp	r2, r3
 80019fe:	d8f7      	bhi.n	80019f0 <HAL_Delay+0x28>
 8001a00:	bf00      	nop
 8001a02:	bf00      	nop
 8001a04:	3710      	adds	r7, #16
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bd80      	pop	{r7, pc}
 8001a0a:	bf00      	nop
 8001a0c:	2000000c 	.word	0x2000000c

08001a10 <__NVIC_SetPriorityGrouping>:
 8001a10:	b480      	push	{r7}
 8001a12:	b085      	sub	sp, #20
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	6078      	str	r0, [r7, #4]
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	f003 0307 	and.w	r3, r3, #7
 8001a1e:	60fb      	str	r3, [r7, #12]
 8001a20:	4b0c      	ldr	r3, [pc, #48]	@ (8001a54 <__NVIC_SetPriorityGrouping+0x44>)
 8001a22:	68db      	ldr	r3, [r3, #12]
 8001a24:	60bb      	str	r3, [r7, #8]
 8001a26:	68ba      	ldr	r2, [r7, #8]
 8001a28:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001a2c:	4013      	ands	r3, r2
 8001a2e:	60bb      	str	r3, [r7, #8]
 8001a30:	68fb      	ldr	r3, [r7, #12]
 8001a32:	021a      	lsls	r2, r3, #8
 8001a34:	68bb      	ldr	r3, [r7, #8]
 8001a36:	4313      	orrs	r3, r2
 8001a38:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001a3c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001a40:	60bb      	str	r3, [r7, #8]
 8001a42:	4a04      	ldr	r2, [pc, #16]	@ (8001a54 <__NVIC_SetPriorityGrouping+0x44>)
 8001a44:	68bb      	ldr	r3, [r7, #8]
 8001a46:	60d3      	str	r3, [r2, #12]
 8001a48:	bf00      	nop
 8001a4a:	3714      	adds	r7, #20
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a52:	4770      	bx	lr
 8001a54:	e000ed00 	.word	0xe000ed00

08001a58 <__NVIC_GetPriorityGrouping>:
 8001a58:	b480      	push	{r7}
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	4b04      	ldr	r3, [pc, #16]	@ (8001a70 <__NVIC_GetPriorityGrouping+0x18>)
 8001a5e:	68db      	ldr	r3, [r3, #12]
 8001a60:	0a1b      	lsrs	r3, r3, #8
 8001a62:	f003 0307 	and.w	r3, r3, #7
 8001a66:	4618      	mov	r0, r3
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6e:	4770      	bx	lr
 8001a70:	e000ed00 	.word	0xe000ed00

08001a74 <__NVIC_EnableIRQ>:
 8001a74:	b480      	push	{r7}
 8001a76:	b083      	sub	sp, #12
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	4603      	mov	r3, r0
 8001a7c:	71fb      	strb	r3, [r7, #7]
 8001a7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	db0b      	blt.n	8001a9e <__NVIC_EnableIRQ+0x2a>
 8001a86:	79fb      	ldrb	r3, [r7, #7]
 8001a88:	f003 021f 	and.w	r2, r3, #31
 8001a8c:	4907      	ldr	r1, [pc, #28]	@ (8001aac <__NVIC_EnableIRQ+0x38>)
 8001a8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a92:	095b      	lsrs	r3, r3, #5
 8001a94:	2001      	movs	r0, #1
 8001a96:	fa00 f202 	lsl.w	r2, r0, r2
 8001a9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a9e:	bf00      	nop
 8001aa0:	370c      	adds	r7, #12
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa8:	4770      	bx	lr
 8001aaa:	bf00      	nop
 8001aac:	e000e100 	.word	0xe000e100

08001ab0 <__NVIC_SetPriority>:
 8001ab0:	b480      	push	{r7}
 8001ab2:	b083      	sub	sp, #12
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	4603      	mov	r3, r0
 8001ab8:	6039      	str	r1, [r7, #0]
 8001aba:	71fb      	strb	r3, [r7, #7]
 8001abc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	db0a      	blt.n	8001ada <__NVIC_SetPriority+0x2a>
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	b2da      	uxtb	r2, r3
 8001ac8:	490c      	ldr	r1, [pc, #48]	@ (8001afc <__NVIC_SetPriority+0x4c>)
 8001aca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ace:	0112      	lsls	r2, r2, #4
 8001ad0:	b2d2      	uxtb	r2, r2
 8001ad2:	440b      	add	r3, r1
 8001ad4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001ad8:	e00a      	b.n	8001af0 <__NVIC_SetPriority+0x40>
 8001ada:	683b      	ldr	r3, [r7, #0]
 8001adc:	b2da      	uxtb	r2, r3
 8001ade:	4908      	ldr	r1, [pc, #32]	@ (8001b00 <__NVIC_SetPriority+0x50>)
 8001ae0:	79fb      	ldrb	r3, [r7, #7]
 8001ae2:	f003 030f 	and.w	r3, r3, #15
 8001ae6:	3b04      	subs	r3, #4
 8001ae8:	0112      	lsls	r2, r2, #4
 8001aea:	b2d2      	uxtb	r2, r2
 8001aec:	440b      	add	r3, r1
 8001aee:	761a      	strb	r2, [r3, #24]
 8001af0:	bf00      	nop
 8001af2:	370c      	adds	r7, #12
 8001af4:	46bd      	mov	sp, r7
 8001af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afa:	4770      	bx	lr
 8001afc:	e000e100 	.word	0xe000e100
 8001b00:	e000ed00 	.word	0xe000ed00

08001b04 <NVIC_EncodePriority>:
 8001b04:	b480      	push	{r7}
 8001b06:	b089      	sub	sp, #36	@ 0x24
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	60f8      	str	r0, [r7, #12]
 8001b0c:	60b9      	str	r1, [r7, #8]
 8001b0e:	607a      	str	r2, [r7, #4]
 8001b10:	68fb      	ldr	r3, [r7, #12]
 8001b12:	f003 0307 	and.w	r3, r3, #7
 8001b16:	61fb      	str	r3, [r7, #28]
 8001b18:	69fb      	ldr	r3, [r7, #28]
 8001b1a:	f1c3 0307 	rsb	r3, r3, #7
 8001b1e:	2b04      	cmp	r3, #4
 8001b20:	bf28      	it	cs
 8001b22:	2304      	movcs	r3, #4
 8001b24:	61bb      	str	r3, [r7, #24]
 8001b26:	69fb      	ldr	r3, [r7, #28]
 8001b28:	3304      	adds	r3, #4
 8001b2a:	2b06      	cmp	r3, #6
 8001b2c:	d902      	bls.n	8001b34 <NVIC_EncodePriority+0x30>
 8001b2e:	69fb      	ldr	r3, [r7, #28]
 8001b30:	3b03      	subs	r3, #3
 8001b32:	e000      	b.n	8001b36 <NVIC_EncodePriority+0x32>
 8001b34:	2300      	movs	r3, #0
 8001b36:	617b      	str	r3, [r7, #20]
 8001b38:	f04f 32ff 	mov.w	r2, #4294967295
 8001b3c:	69bb      	ldr	r3, [r7, #24]
 8001b3e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b42:	43da      	mvns	r2, r3
 8001b44:	68bb      	ldr	r3, [r7, #8]
 8001b46:	401a      	ands	r2, r3
 8001b48:	697b      	ldr	r3, [r7, #20]
 8001b4a:	409a      	lsls	r2, r3
 8001b4c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b50:	697b      	ldr	r3, [r7, #20]
 8001b52:	fa01 f303 	lsl.w	r3, r1, r3
 8001b56:	43d9      	mvns	r1, r3
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	400b      	ands	r3, r1
 8001b5c:	4313      	orrs	r3, r2
 8001b5e:	4618      	mov	r0, r3
 8001b60:	3724      	adds	r7, #36	@ 0x24
 8001b62:	46bd      	mov	sp, r7
 8001b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b68:	4770      	bx	lr

08001b6a <HAL_NVIC_SetPriorityGrouping>:
 8001b6a:	b580      	push	{r7, lr}
 8001b6c:	b082      	sub	sp, #8
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	6078      	str	r0, [r7, #4]
 8001b72:	6878      	ldr	r0, [r7, #4]
 8001b74:	f7ff ff4c 	bl	8001a10 <__NVIC_SetPriorityGrouping>
 8001b78:	bf00      	nop
 8001b7a:	3708      	adds	r7, #8
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	bd80      	pop	{r7, pc}

08001b80 <HAL_NVIC_SetPriority>:
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b086      	sub	sp, #24
 8001b84:	af00      	add	r7, sp, #0
 8001b86:	4603      	mov	r3, r0
 8001b88:	60b9      	str	r1, [r7, #8]
 8001b8a:	607a      	str	r2, [r7, #4]
 8001b8c:	73fb      	strb	r3, [r7, #15]
 8001b8e:	2300      	movs	r3, #0
 8001b90:	617b      	str	r3, [r7, #20]
 8001b92:	f7ff ff61 	bl	8001a58 <__NVIC_GetPriorityGrouping>
 8001b96:	6178      	str	r0, [r7, #20]
 8001b98:	687a      	ldr	r2, [r7, #4]
 8001b9a:	68b9      	ldr	r1, [r7, #8]
 8001b9c:	6978      	ldr	r0, [r7, #20]
 8001b9e:	f7ff ffb1 	bl	8001b04 <NVIC_EncodePriority>
 8001ba2:	4602      	mov	r2, r0
 8001ba4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ba8:	4611      	mov	r1, r2
 8001baa:	4618      	mov	r0, r3
 8001bac:	f7ff ff80 	bl	8001ab0 <__NVIC_SetPriority>
 8001bb0:	bf00      	nop
 8001bb2:	3718      	adds	r7, #24
 8001bb4:	46bd      	mov	sp, r7
 8001bb6:	bd80      	pop	{r7, pc}

08001bb8 <HAL_NVIC_EnableIRQ>:
 8001bb8:	b580      	push	{r7, lr}
 8001bba:	b082      	sub	sp, #8
 8001bbc:	af00      	add	r7, sp, #0
 8001bbe:	4603      	mov	r3, r0
 8001bc0:	71fb      	strb	r3, [r7, #7]
 8001bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f7ff ff54 	bl	8001a74 <__NVIC_EnableIRQ>
 8001bcc:	bf00      	nop
 8001bce:	3708      	adds	r7, #8
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bd80      	pop	{r7, pc}

08001bd4 <HAL_DMA_Abort>:
 8001bd4:	b480      	push	{r7}
 8001bd6:	b085      	sub	sp, #20
 8001bd8:	af00      	add	r7, sp, #0
 8001bda:	6078      	str	r0, [r7, #4]
 8001bdc:	2300      	movs	r3, #0
 8001bde:	73fb      	strb	r3, [r7, #15]
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8001be6:	b2db      	uxtb	r3, r3
 8001be8:	2b02      	cmp	r3, #2
 8001bea:	d008      	beq.n	8001bfe <HAL_DMA_Abort+0x2a>
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	2204      	movs	r2, #4
 8001bf0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001bfa:	2301      	movs	r3, #1
 8001bfc:	e022      	b.n	8001c44 <HAL_DMA_Abort+0x70>
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	681a      	ldr	r2, [r3, #0]
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	681b      	ldr	r3, [r3, #0]
 8001c08:	f022 020e 	bic.w	r2, r2, #14
 8001c0c:	601a      	str	r2, [r3, #0]
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	681a      	ldr	r2, [r3, #0]
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	f022 0201 	bic.w	r2, r2, #1
 8001c1c:	601a      	str	r2, [r3, #0]
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c22:	f003 021c 	and.w	r2, r3, #28
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c2a:	2101      	movs	r1, #1
 8001c2c:	fa01 f202 	lsl.w	r2, r1, r2
 8001c30:	605a      	str	r2, [r3, #4]
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	2201      	movs	r2, #1
 8001c36:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	2200      	movs	r2, #0
 8001c3e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001c42:	7bfb      	ldrb	r3, [r7, #15]
 8001c44:	4618      	mov	r0, r3
 8001c46:	3714      	adds	r7, #20
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4e:	4770      	bx	lr

08001c50 <HAL_DMA_Abort_IT>:
 8001c50:	b580      	push	{r7, lr}
 8001c52:	b084      	sub	sp, #16
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	6078      	str	r0, [r7, #4]
 8001c58:	2300      	movs	r3, #0
 8001c5a:	73fb      	strb	r3, [r7, #15]
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8001c62:	b2db      	uxtb	r3, r3
 8001c64:	2b02      	cmp	r3, #2
 8001c66:	d005      	beq.n	8001c74 <HAL_DMA_Abort_IT+0x24>
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	2204      	movs	r2, #4
 8001c6c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001c6e:	2301      	movs	r3, #1
 8001c70:	73fb      	strb	r3, [r7, #15]
 8001c72:	e029      	b.n	8001cc8 <HAL_DMA_Abort_IT+0x78>
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	681a      	ldr	r2, [r3, #0]
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	f022 020e 	bic.w	r2, r2, #14
 8001c82:	601a      	str	r2, [r3, #0]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	681a      	ldr	r2, [r3, #0]
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	681b      	ldr	r3, [r3, #0]
 8001c8e:	f022 0201 	bic.w	r2, r2, #1
 8001c92:	601a      	str	r2, [r3, #0]
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c98:	f003 021c 	and.w	r2, r3, #28
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ca0:	2101      	movs	r1, #1
 8001ca2:	fa01 f202 	lsl.w	r2, r1, r2
 8001ca6:	605a      	str	r2, [r3, #4]
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	2201      	movs	r2, #1
 8001cac:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d003      	beq.n	8001cc8 <HAL_DMA_Abort_IT+0x78>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001cc4:	6878      	ldr	r0, [r7, #4]
 8001cc6:	4798      	blx	r3
 8001cc8:	7bfb      	ldrb	r3, [r7, #15]
 8001cca:	4618      	mov	r0, r3
 8001ccc:	3710      	adds	r7, #16
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	bd80      	pop	{r7, pc}
	...

08001cd4 <HAL_GPIO_Init>:
 8001cd4:	b480      	push	{r7}
 8001cd6:	b087      	sub	sp, #28
 8001cd8:	af00      	add	r7, sp, #0
 8001cda:	6078      	str	r0, [r7, #4]
 8001cdc:	6039      	str	r1, [r7, #0]
 8001cde:	2300      	movs	r3, #0
 8001ce0:	617b      	str	r3, [r7, #20]
 8001ce2:	e17f      	b.n	8001fe4 <HAL_GPIO_Init+0x310>
 8001ce4:	683b      	ldr	r3, [r7, #0]
 8001ce6:	681a      	ldr	r2, [r3, #0]
 8001ce8:	2101      	movs	r1, #1
 8001cea:	697b      	ldr	r3, [r7, #20]
 8001cec:	fa01 f303 	lsl.w	r3, r1, r3
 8001cf0:	4013      	ands	r3, r2
 8001cf2:	60fb      	str	r3, [r7, #12]
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	f000 8171 	beq.w	8001fde <HAL_GPIO_Init+0x30a>
 8001cfc:	683b      	ldr	r3, [r7, #0]
 8001cfe:	685b      	ldr	r3, [r3, #4]
 8001d00:	f003 0303 	and.w	r3, r3, #3
 8001d04:	2b01      	cmp	r3, #1
 8001d06:	d005      	beq.n	8001d14 <HAL_GPIO_Init+0x40>
 8001d08:	683b      	ldr	r3, [r7, #0]
 8001d0a:	685b      	ldr	r3, [r3, #4]
 8001d0c:	f003 0303 	and.w	r3, r3, #3
 8001d10:	2b02      	cmp	r3, #2
 8001d12:	d130      	bne.n	8001d76 <HAL_GPIO_Init+0xa2>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	689b      	ldr	r3, [r3, #8]
 8001d18:	613b      	str	r3, [r7, #16]
 8001d1a:	697b      	ldr	r3, [r7, #20]
 8001d1c:	005b      	lsls	r3, r3, #1
 8001d1e:	2203      	movs	r2, #3
 8001d20:	fa02 f303 	lsl.w	r3, r2, r3
 8001d24:	43db      	mvns	r3, r3
 8001d26:	693a      	ldr	r2, [r7, #16]
 8001d28:	4013      	ands	r3, r2
 8001d2a:	613b      	str	r3, [r7, #16]
 8001d2c:	683b      	ldr	r3, [r7, #0]
 8001d2e:	68da      	ldr	r2, [r3, #12]
 8001d30:	697b      	ldr	r3, [r7, #20]
 8001d32:	005b      	lsls	r3, r3, #1
 8001d34:	fa02 f303 	lsl.w	r3, r2, r3
 8001d38:	693a      	ldr	r2, [r7, #16]
 8001d3a:	4313      	orrs	r3, r2
 8001d3c:	613b      	str	r3, [r7, #16]
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	693a      	ldr	r2, [r7, #16]
 8001d42:	609a      	str	r2, [r3, #8]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	685b      	ldr	r3, [r3, #4]
 8001d48:	613b      	str	r3, [r7, #16]
 8001d4a:	2201      	movs	r2, #1
 8001d4c:	697b      	ldr	r3, [r7, #20]
 8001d4e:	fa02 f303 	lsl.w	r3, r2, r3
 8001d52:	43db      	mvns	r3, r3
 8001d54:	693a      	ldr	r2, [r7, #16]
 8001d56:	4013      	ands	r3, r2
 8001d58:	613b      	str	r3, [r7, #16]
 8001d5a:	683b      	ldr	r3, [r7, #0]
 8001d5c:	685b      	ldr	r3, [r3, #4]
 8001d5e:	091b      	lsrs	r3, r3, #4
 8001d60:	f003 0201 	and.w	r2, r3, #1
 8001d64:	697b      	ldr	r3, [r7, #20]
 8001d66:	fa02 f303 	lsl.w	r3, r2, r3
 8001d6a:	693a      	ldr	r2, [r7, #16]
 8001d6c:	4313      	orrs	r3, r2
 8001d6e:	613b      	str	r3, [r7, #16]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	693a      	ldr	r2, [r7, #16]
 8001d74:	605a      	str	r2, [r3, #4]
 8001d76:	683b      	ldr	r3, [r7, #0]
 8001d78:	685b      	ldr	r3, [r3, #4]
 8001d7a:	f003 0303 	and.w	r3, r3, #3
 8001d7e:	2b03      	cmp	r3, #3
 8001d80:	d118      	bne.n	8001db4 <HAL_GPIO_Init+0xe0>
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001d86:	613b      	str	r3, [r7, #16]
 8001d88:	2201      	movs	r2, #1
 8001d8a:	697b      	ldr	r3, [r7, #20]
 8001d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8001d90:	43db      	mvns	r3, r3
 8001d92:	693a      	ldr	r2, [r7, #16]
 8001d94:	4013      	ands	r3, r2
 8001d96:	613b      	str	r3, [r7, #16]
 8001d98:	683b      	ldr	r3, [r7, #0]
 8001d9a:	685b      	ldr	r3, [r3, #4]
 8001d9c:	08db      	lsrs	r3, r3, #3
 8001d9e:	f003 0201 	and.w	r2, r3, #1
 8001da2:	697b      	ldr	r3, [r7, #20]
 8001da4:	fa02 f303 	lsl.w	r3, r2, r3
 8001da8:	693a      	ldr	r2, [r7, #16]
 8001daa:	4313      	orrs	r3, r2
 8001dac:	613b      	str	r3, [r7, #16]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	693a      	ldr	r2, [r7, #16]
 8001db2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001db4:	683b      	ldr	r3, [r7, #0]
 8001db6:	685b      	ldr	r3, [r3, #4]
 8001db8:	f003 0303 	and.w	r3, r3, #3
 8001dbc:	2b03      	cmp	r3, #3
 8001dbe:	d017      	beq.n	8001df0 <HAL_GPIO_Init+0x11c>
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	68db      	ldr	r3, [r3, #12]
 8001dc4:	613b      	str	r3, [r7, #16]
 8001dc6:	697b      	ldr	r3, [r7, #20]
 8001dc8:	005b      	lsls	r3, r3, #1
 8001dca:	2203      	movs	r2, #3
 8001dcc:	fa02 f303 	lsl.w	r3, r2, r3
 8001dd0:	43db      	mvns	r3, r3
 8001dd2:	693a      	ldr	r2, [r7, #16]
 8001dd4:	4013      	ands	r3, r2
 8001dd6:	613b      	str	r3, [r7, #16]
 8001dd8:	683b      	ldr	r3, [r7, #0]
 8001dda:	689a      	ldr	r2, [r3, #8]
 8001ddc:	697b      	ldr	r3, [r7, #20]
 8001dde:	005b      	lsls	r3, r3, #1
 8001de0:	fa02 f303 	lsl.w	r3, r2, r3
 8001de4:	693a      	ldr	r2, [r7, #16]
 8001de6:	4313      	orrs	r3, r2
 8001de8:	613b      	str	r3, [r7, #16]
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	693a      	ldr	r2, [r7, #16]
 8001dee:	60da      	str	r2, [r3, #12]
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	685b      	ldr	r3, [r3, #4]
 8001df4:	f003 0303 	and.w	r3, r3, #3
 8001df8:	2b02      	cmp	r3, #2
 8001dfa:	d123      	bne.n	8001e44 <HAL_GPIO_Init+0x170>
 8001dfc:	697b      	ldr	r3, [r7, #20]
 8001dfe:	08da      	lsrs	r2, r3, #3
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	3208      	adds	r2, #8
 8001e04:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e08:	613b      	str	r3, [r7, #16]
 8001e0a:	697b      	ldr	r3, [r7, #20]
 8001e0c:	f003 0307 	and.w	r3, r3, #7
 8001e10:	009b      	lsls	r3, r3, #2
 8001e12:	220f      	movs	r2, #15
 8001e14:	fa02 f303 	lsl.w	r3, r2, r3
 8001e18:	43db      	mvns	r3, r3
 8001e1a:	693a      	ldr	r2, [r7, #16]
 8001e1c:	4013      	ands	r3, r2
 8001e1e:	613b      	str	r3, [r7, #16]
 8001e20:	683b      	ldr	r3, [r7, #0]
 8001e22:	691a      	ldr	r2, [r3, #16]
 8001e24:	697b      	ldr	r3, [r7, #20]
 8001e26:	f003 0307 	and.w	r3, r3, #7
 8001e2a:	009b      	lsls	r3, r3, #2
 8001e2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e30:	693a      	ldr	r2, [r7, #16]
 8001e32:	4313      	orrs	r3, r2
 8001e34:	613b      	str	r3, [r7, #16]
 8001e36:	697b      	ldr	r3, [r7, #20]
 8001e38:	08da      	lsrs	r2, r3, #3
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	3208      	adds	r2, #8
 8001e3e:	6939      	ldr	r1, [r7, #16]
 8001e40:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	613b      	str	r3, [r7, #16]
 8001e4a:	697b      	ldr	r3, [r7, #20]
 8001e4c:	005b      	lsls	r3, r3, #1
 8001e4e:	2203      	movs	r2, #3
 8001e50:	fa02 f303 	lsl.w	r3, r2, r3
 8001e54:	43db      	mvns	r3, r3
 8001e56:	693a      	ldr	r2, [r7, #16]
 8001e58:	4013      	ands	r3, r2
 8001e5a:	613b      	str	r3, [r7, #16]
 8001e5c:	683b      	ldr	r3, [r7, #0]
 8001e5e:	685b      	ldr	r3, [r3, #4]
 8001e60:	f003 0203 	and.w	r2, r3, #3
 8001e64:	697b      	ldr	r3, [r7, #20]
 8001e66:	005b      	lsls	r3, r3, #1
 8001e68:	fa02 f303 	lsl.w	r3, r2, r3
 8001e6c:	693a      	ldr	r2, [r7, #16]
 8001e6e:	4313      	orrs	r3, r2
 8001e70:	613b      	str	r3, [r7, #16]
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	693a      	ldr	r2, [r7, #16]
 8001e76:	601a      	str	r2, [r3, #0]
 8001e78:	683b      	ldr	r3, [r7, #0]
 8001e7a:	685b      	ldr	r3, [r3, #4]
 8001e7c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	f000 80ac 	beq.w	8001fde <HAL_GPIO_Init+0x30a>
 8001e86:	4b5f      	ldr	r3, [pc, #380]	@ (8002004 <HAL_GPIO_Init+0x330>)
 8001e88:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e8a:	4a5e      	ldr	r2, [pc, #376]	@ (8002004 <HAL_GPIO_Init+0x330>)
 8001e8c:	f043 0301 	orr.w	r3, r3, #1
 8001e90:	6613      	str	r3, [r2, #96]	@ 0x60
 8001e92:	4b5c      	ldr	r3, [pc, #368]	@ (8002004 <HAL_GPIO_Init+0x330>)
 8001e94:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e96:	f003 0301 	and.w	r3, r3, #1
 8001e9a:	60bb      	str	r3, [r7, #8]
 8001e9c:	68bb      	ldr	r3, [r7, #8]
 8001e9e:	4a5a      	ldr	r2, [pc, #360]	@ (8002008 <HAL_GPIO_Init+0x334>)
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	089b      	lsrs	r3, r3, #2
 8001ea4:	3302      	adds	r3, #2
 8001ea6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eaa:	613b      	str	r3, [r7, #16]
 8001eac:	697b      	ldr	r3, [r7, #20]
 8001eae:	f003 0303 	and.w	r3, r3, #3
 8001eb2:	009b      	lsls	r3, r3, #2
 8001eb4:	220f      	movs	r2, #15
 8001eb6:	fa02 f303 	lsl.w	r3, r2, r3
 8001eba:	43db      	mvns	r3, r3
 8001ebc:	693a      	ldr	r2, [r7, #16]
 8001ebe:	4013      	ands	r3, r2
 8001ec0:	613b      	str	r3, [r7, #16]
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8001ec8:	d025      	beq.n	8001f16 <HAL_GPIO_Init+0x242>
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	4a4f      	ldr	r2, [pc, #316]	@ (800200c <HAL_GPIO_Init+0x338>)
 8001ece:	4293      	cmp	r3, r2
 8001ed0:	d01f      	beq.n	8001f12 <HAL_GPIO_Init+0x23e>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	4a4e      	ldr	r2, [pc, #312]	@ (8002010 <HAL_GPIO_Init+0x33c>)
 8001ed6:	4293      	cmp	r3, r2
 8001ed8:	d019      	beq.n	8001f0e <HAL_GPIO_Init+0x23a>
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	4a4d      	ldr	r2, [pc, #308]	@ (8002014 <HAL_GPIO_Init+0x340>)
 8001ede:	4293      	cmp	r3, r2
 8001ee0:	d013      	beq.n	8001f0a <HAL_GPIO_Init+0x236>
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	4a4c      	ldr	r2, [pc, #304]	@ (8002018 <HAL_GPIO_Init+0x344>)
 8001ee6:	4293      	cmp	r3, r2
 8001ee8:	d00d      	beq.n	8001f06 <HAL_GPIO_Init+0x232>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	4a4b      	ldr	r2, [pc, #300]	@ (800201c <HAL_GPIO_Init+0x348>)
 8001eee:	4293      	cmp	r3, r2
 8001ef0:	d007      	beq.n	8001f02 <HAL_GPIO_Init+0x22e>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	4a4a      	ldr	r2, [pc, #296]	@ (8002020 <HAL_GPIO_Init+0x34c>)
 8001ef6:	4293      	cmp	r3, r2
 8001ef8:	d101      	bne.n	8001efe <HAL_GPIO_Init+0x22a>
 8001efa:	2306      	movs	r3, #6
 8001efc:	e00c      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001efe:	2307      	movs	r3, #7
 8001f00:	e00a      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f02:	2305      	movs	r3, #5
 8001f04:	e008      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f06:	2304      	movs	r3, #4
 8001f08:	e006      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f0a:	2303      	movs	r3, #3
 8001f0c:	e004      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f0e:	2302      	movs	r3, #2
 8001f10:	e002      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f12:	2301      	movs	r3, #1
 8001f14:	e000      	b.n	8001f18 <HAL_GPIO_Init+0x244>
 8001f16:	2300      	movs	r3, #0
 8001f18:	697a      	ldr	r2, [r7, #20]
 8001f1a:	f002 0203 	and.w	r2, r2, #3
 8001f1e:	0092      	lsls	r2, r2, #2
 8001f20:	4093      	lsls	r3, r2
 8001f22:	693a      	ldr	r2, [r7, #16]
 8001f24:	4313      	orrs	r3, r2
 8001f26:	613b      	str	r3, [r7, #16]
 8001f28:	4937      	ldr	r1, [pc, #220]	@ (8002008 <HAL_GPIO_Init+0x334>)
 8001f2a:	697b      	ldr	r3, [r7, #20]
 8001f2c:	089b      	lsrs	r3, r3, #2
 8001f2e:	3302      	adds	r3, #2
 8001f30:	693a      	ldr	r2, [r7, #16]
 8001f32:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001f36:	4b3b      	ldr	r3, [pc, #236]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001f38:	689b      	ldr	r3, [r3, #8]
 8001f3a:	613b      	str	r3, [r7, #16]
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	43db      	mvns	r3, r3
 8001f40:	693a      	ldr	r2, [r7, #16]
 8001f42:	4013      	ands	r3, r2
 8001f44:	613b      	str	r3, [r7, #16]
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001f4e:	2b00      	cmp	r3, #0
 8001f50:	d003      	beq.n	8001f5a <HAL_GPIO_Init+0x286>
 8001f52:	693a      	ldr	r2, [r7, #16]
 8001f54:	68fb      	ldr	r3, [r7, #12]
 8001f56:	4313      	orrs	r3, r2
 8001f58:	613b      	str	r3, [r7, #16]
 8001f5a:	4a32      	ldr	r2, [pc, #200]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001f5c:	693b      	ldr	r3, [r7, #16]
 8001f5e:	6093      	str	r3, [r2, #8]
 8001f60:	4b30      	ldr	r3, [pc, #192]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001f62:	68db      	ldr	r3, [r3, #12]
 8001f64:	613b      	str	r3, [r7, #16]
 8001f66:	68fb      	ldr	r3, [r7, #12]
 8001f68:	43db      	mvns	r3, r3
 8001f6a:	693a      	ldr	r2, [r7, #16]
 8001f6c:	4013      	ands	r3, r2
 8001f6e:	613b      	str	r3, [r7, #16]
 8001f70:	683b      	ldr	r3, [r7, #0]
 8001f72:	685b      	ldr	r3, [r3, #4]
 8001f74:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001f78:	2b00      	cmp	r3, #0
 8001f7a:	d003      	beq.n	8001f84 <HAL_GPIO_Init+0x2b0>
 8001f7c:	693a      	ldr	r2, [r7, #16]
 8001f7e:	68fb      	ldr	r3, [r7, #12]
 8001f80:	4313      	orrs	r3, r2
 8001f82:	613b      	str	r3, [r7, #16]
 8001f84:	4a27      	ldr	r2, [pc, #156]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001f86:	693b      	ldr	r3, [r7, #16]
 8001f88:	60d3      	str	r3, [r2, #12]
 8001f8a:	4b26      	ldr	r3, [pc, #152]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001f8c:	685b      	ldr	r3, [r3, #4]
 8001f8e:	613b      	str	r3, [r7, #16]
 8001f90:	68fb      	ldr	r3, [r7, #12]
 8001f92:	43db      	mvns	r3, r3
 8001f94:	693a      	ldr	r2, [r7, #16]
 8001f96:	4013      	ands	r3, r2
 8001f98:	613b      	str	r3, [r7, #16]
 8001f9a:	683b      	ldr	r3, [r7, #0]
 8001f9c:	685b      	ldr	r3, [r3, #4]
 8001f9e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001fa2:	2b00      	cmp	r3, #0
 8001fa4:	d003      	beq.n	8001fae <HAL_GPIO_Init+0x2da>
 8001fa6:	693a      	ldr	r2, [r7, #16]
 8001fa8:	68fb      	ldr	r3, [r7, #12]
 8001faa:	4313      	orrs	r3, r2
 8001fac:	613b      	str	r3, [r7, #16]
 8001fae:	4a1d      	ldr	r2, [pc, #116]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001fb0:	693b      	ldr	r3, [r7, #16]
 8001fb2:	6053      	str	r3, [r2, #4]
 8001fb4:	4b1b      	ldr	r3, [pc, #108]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	613b      	str	r3, [r7, #16]
 8001fba:	68fb      	ldr	r3, [r7, #12]
 8001fbc:	43db      	mvns	r3, r3
 8001fbe:	693a      	ldr	r2, [r7, #16]
 8001fc0:	4013      	ands	r3, r2
 8001fc2:	613b      	str	r3, [r7, #16]
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	685b      	ldr	r3, [r3, #4]
 8001fc8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d003      	beq.n	8001fd8 <HAL_GPIO_Init+0x304>
 8001fd0:	693a      	ldr	r2, [r7, #16]
 8001fd2:	68fb      	ldr	r3, [r7, #12]
 8001fd4:	4313      	orrs	r3, r2
 8001fd6:	613b      	str	r3, [r7, #16]
 8001fd8:	4a12      	ldr	r2, [pc, #72]	@ (8002024 <HAL_GPIO_Init+0x350>)
 8001fda:	693b      	ldr	r3, [r7, #16]
 8001fdc:	6013      	str	r3, [r2, #0]
 8001fde:	697b      	ldr	r3, [r7, #20]
 8001fe0:	3301      	adds	r3, #1
 8001fe2:	617b      	str	r3, [r7, #20]
 8001fe4:	683b      	ldr	r3, [r7, #0]
 8001fe6:	681a      	ldr	r2, [r3, #0]
 8001fe8:	697b      	ldr	r3, [r7, #20]
 8001fea:	fa22 f303 	lsr.w	r3, r2, r3
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	f47f ae78 	bne.w	8001ce4 <HAL_GPIO_Init+0x10>
 8001ff4:	bf00      	nop
 8001ff6:	bf00      	nop
 8001ff8:	371c      	adds	r7, #28
 8001ffa:	46bd      	mov	sp, r7
 8001ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002000:	4770      	bx	lr
 8002002:	bf00      	nop
 8002004:	40021000 	.word	0x40021000
 8002008:	40010000 	.word	0x40010000
 800200c:	48000400 	.word	0x48000400
 8002010:	48000800 	.word	0x48000800
 8002014:	48000c00 	.word	0x48000c00
 8002018:	48001000 	.word	0x48001000
 800201c:	48001400 	.word	0x48001400
 8002020:	48001800 	.word	0x48001800
 8002024:	40010400 	.word	0x40010400

08002028 <HAL_GPIO_WritePin>:
 8002028:	b480      	push	{r7}
 800202a:	b083      	sub	sp, #12
 800202c:	af00      	add	r7, sp, #0
 800202e:	6078      	str	r0, [r7, #4]
 8002030:	460b      	mov	r3, r1
 8002032:	807b      	strh	r3, [r7, #2]
 8002034:	4613      	mov	r3, r2
 8002036:	707b      	strb	r3, [r7, #1]
 8002038:	787b      	ldrb	r3, [r7, #1]
 800203a:	2b00      	cmp	r3, #0
 800203c:	d003      	beq.n	8002046 <HAL_GPIO_WritePin+0x1e>
 800203e:	887a      	ldrh	r2, [r7, #2]
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	619a      	str	r2, [r3, #24]
 8002044:	e002      	b.n	800204c <HAL_GPIO_WritePin+0x24>
 8002046:	887a      	ldrh	r2, [r7, #2]
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	629a      	str	r2, [r3, #40]	@ 0x28
 800204c:	bf00      	nop
 800204e:	370c      	adds	r7, #12
 8002050:	46bd      	mov	sp, r7
 8002052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002056:	4770      	bx	lr

08002058 <HAL_GPIO_TogglePin>:
 8002058:	b480      	push	{r7}
 800205a:	b085      	sub	sp, #20
 800205c:	af00      	add	r7, sp, #0
 800205e:	6078      	str	r0, [r7, #4]
 8002060:	460b      	mov	r3, r1
 8002062:	807b      	strh	r3, [r7, #2]
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	695b      	ldr	r3, [r3, #20]
 8002068:	60fb      	str	r3, [r7, #12]
 800206a:	887a      	ldrh	r2, [r7, #2]
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	4013      	ands	r3, r2
 8002070:	041a      	lsls	r2, r3, #16
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	43d9      	mvns	r1, r3
 8002076:	887b      	ldrh	r3, [r7, #2]
 8002078:	400b      	ands	r3, r1
 800207a:	431a      	orrs	r2, r3
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	619a      	str	r2, [r3, #24]
 8002080:	bf00      	nop
 8002082:	3714      	adds	r7, #20
 8002084:	46bd      	mov	sp, r7
 8002086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800208a:	4770      	bx	lr

0800208c <HAL_GPIO_EXTI_IRQHandler>:
 800208c:	b580      	push	{r7, lr}
 800208e:	b082      	sub	sp, #8
 8002090:	af00      	add	r7, sp, #0
 8002092:	4603      	mov	r3, r0
 8002094:	80fb      	strh	r3, [r7, #6]
 8002096:	4b08      	ldr	r3, [pc, #32]	@ (80020b8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002098:	695a      	ldr	r2, [r3, #20]
 800209a:	88fb      	ldrh	r3, [r7, #6]
 800209c:	4013      	ands	r3, r2
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d006      	beq.n	80020b0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80020a2:	4a05      	ldr	r2, [pc, #20]	@ (80020b8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80020a4:	88fb      	ldrh	r3, [r7, #6]
 80020a6:	6153      	str	r3, [r2, #20]
 80020a8:	88fb      	ldrh	r3, [r7, #6]
 80020aa:	4618      	mov	r0, r3
 80020ac:	f000 f806 	bl	80020bc <HAL_GPIO_EXTI_Callback>
 80020b0:	bf00      	nop
 80020b2:	3708      	adds	r7, #8
 80020b4:	46bd      	mov	sp, r7
 80020b6:	bd80      	pop	{r7, pc}
 80020b8:	40010400 	.word	0x40010400

080020bc <HAL_GPIO_EXTI_Callback>:
 80020bc:	b480      	push	{r7}
 80020be:	b083      	sub	sp, #12
 80020c0:	af00      	add	r7, sp, #0
 80020c2:	4603      	mov	r3, r0
 80020c4:	80fb      	strh	r3, [r7, #6]
 80020c6:	bf00      	nop
 80020c8:	370c      	adds	r7, #12
 80020ca:	46bd      	mov	sp, r7
 80020cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d0:	4770      	bx	lr

080020d2 <HAL_I2C_Init>:
 80020d2:	b580      	push	{r7, lr}
 80020d4:	b082      	sub	sp, #8
 80020d6:	af00      	add	r7, sp, #0
 80020d8:	6078      	str	r0, [r7, #4]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	2b00      	cmp	r3, #0
 80020de:	d101      	bne.n	80020e4 <HAL_I2C_Init+0x12>
 80020e0:	2301      	movs	r3, #1
 80020e2:	e08d      	b.n	8002200 <HAL_I2C_Init+0x12e>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80020ea:	b2db      	uxtb	r3, r3
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d106      	bne.n	80020fe <HAL_I2C_Init+0x2c>
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	2200      	movs	r2, #0
 80020f4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80020f8:	6878      	ldr	r0, [r7, #4]
 80020fa:	f7fe fcf7 	bl	8000aec <HAL_I2C_MspInit>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	2224      	movs	r2, #36	@ 0x24
 8002102:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	681a      	ldr	r2, [r3, #0]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	f022 0201 	bic.w	r2, r2, #1
 8002114:	601a      	str	r2, [r3, #0]
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	685a      	ldr	r2, [r3, #4]
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002122:	611a      	str	r2, [r3, #16]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	689a      	ldr	r2, [r3, #8]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002132:	609a      	str	r2, [r3, #8]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	68db      	ldr	r3, [r3, #12]
 8002138:	2b01      	cmp	r3, #1
 800213a:	d107      	bne.n	800214c <HAL_I2C_Init+0x7a>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	689a      	ldr	r2, [r3, #8]
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002148:	609a      	str	r2, [r3, #8]
 800214a:	e006      	b.n	800215a <HAL_I2C_Init+0x88>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	689a      	ldr	r2, [r3, #8]
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8002158:	609a      	str	r2, [r3, #8]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	68db      	ldr	r3, [r3, #12]
 800215e:	2b02      	cmp	r3, #2
 8002160:	d108      	bne.n	8002174 <HAL_I2C_Init+0xa2>
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	685a      	ldr	r2, [r3, #4]
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	681b      	ldr	r3, [r3, #0]
 800216c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002170:	605a      	str	r2, [r3, #4]
 8002172:	e007      	b.n	8002184 <HAL_I2C_Init+0xb2>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	685a      	ldr	r2, [r3, #4]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002182:	605a      	str	r2, [r3, #4]
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	685b      	ldr	r3, [r3, #4]
 800218a:	687a      	ldr	r2, [r7, #4]
 800218c:	6812      	ldr	r2, [r2, #0]
 800218e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002192:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002196:	6053      	str	r3, [r2, #4]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	68da      	ldr	r2, [r3, #12]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80021a6:	60da      	str	r2, [r3, #12]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	691a      	ldr	r2, [r3, #16]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	695b      	ldr	r3, [r3, #20]
 80021b0:	ea42 0103 	orr.w	r1, r2, r3
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	699b      	ldr	r3, [r3, #24]
 80021b8:	021a      	lsls	r2, r3, #8
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	430a      	orrs	r2, r1
 80021c0:	60da      	str	r2, [r3, #12]
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	69d9      	ldr	r1, [r3, #28]
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	6a1a      	ldr	r2, [r3, #32]
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	430a      	orrs	r2, r1
 80021d0:	601a      	str	r2, [r3, #0]
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	681a      	ldr	r2, [r3, #0]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f042 0201 	orr.w	r2, r2, #1
 80021e0:	601a      	str	r2, [r3, #0]
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	2200      	movs	r2, #0
 80021e6:	645a      	str	r2, [r3, #68]	@ 0x44
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	2220      	movs	r2, #32
 80021ec:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	2200      	movs	r2, #0
 80021f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	2200      	movs	r2, #0
 80021fa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80021fe:	2300      	movs	r3, #0
 8002200:	4618      	mov	r0, r3
 8002202:	3708      	adds	r7, #8
 8002204:	46bd      	mov	sp, r7
 8002206:	bd80      	pop	{r7, pc}

08002208 <HAL_I2CEx_ConfigAnalogFilter>:
 8002208:	b480      	push	{r7}
 800220a:	b083      	sub	sp, #12
 800220c:	af00      	add	r7, sp, #0
 800220e:	6078      	str	r0, [r7, #4]
 8002210:	6039      	str	r1, [r7, #0]
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002218:	b2db      	uxtb	r3, r3
 800221a:	2b20      	cmp	r3, #32
 800221c:	d138      	bne.n	8002290 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002224:	2b01      	cmp	r3, #1
 8002226:	d101      	bne.n	800222c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8002228:	2302      	movs	r3, #2
 800222a:	e032      	b.n	8002292 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	2201      	movs	r2, #1
 8002230:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2224      	movs	r2, #36	@ 0x24
 8002238:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	681b      	ldr	r3, [r3, #0]
 8002240:	681a      	ldr	r2, [r3, #0]
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	f022 0201 	bic.w	r2, r2, #1
 800224a:	601a      	str	r2, [r3, #0]
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	681a      	ldr	r2, [r3, #0]
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800225a:	601a      	str	r2, [r3, #0]
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	6819      	ldr	r1, [r3, #0]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	683a      	ldr	r2, [r7, #0]
 8002268:	430a      	orrs	r2, r1
 800226a:	601a      	str	r2, [r3, #0]
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	681a      	ldr	r2, [r3, #0]
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	f042 0201 	orr.w	r2, r2, #1
 800227a:	601a      	str	r2, [r3, #0]
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	2220      	movs	r2, #32
 8002280:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	2200      	movs	r2, #0
 8002288:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800228c:	2300      	movs	r3, #0
 800228e:	e000      	b.n	8002292 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8002290:	2302      	movs	r3, #2
 8002292:	4618      	mov	r0, r3
 8002294:	370c      	adds	r7, #12
 8002296:	46bd      	mov	sp, r7
 8002298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800229c:	4770      	bx	lr

0800229e <HAL_I2CEx_ConfigDigitalFilter>:
 800229e:	b480      	push	{r7}
 80022a0:	b085      	sub	sp, #20
 80022a2:	af00      	add	r7, sp, #0
 80022a4:	6078      	str	r0, [r7, #4]
 80022a6:	6039      	str	r1, [r7, #0]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80022ae:	b2db      	uxtb	r3, r3
 80022b0:	2b20      	cmp	r3, #32
 80022b2:	d139      	bne.n	8002328 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80022ba:	2b01      	cmp	r3, #1
 80022bc:	d101      	bne.n	80022c2 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80022be:	2302      	movs	r3, #2
 80022c0:	e033      	b.n	800232a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	2201      	movs	r2, #1
 80022c6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	2224      	movs	r2, #36	@ 0x24
 80022ce:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	681a      	ldr	r2, [r3, #0]
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	f022 0201 	bic.w	r2, r2, #1
 80022e0:	601a      	str	r2, [r3, #0]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	60fb      	str	r3, [r7, #12]
 80022ea:	68fb      	ldr	r3, [r7, #12]
 80022ec:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80022f0:	60fb      	str	r3, [r7, #12]
 80022f2:	683b      	ldr	r3, [r7, #0]
 80022f4:	021b      	lsls	r3, r3, #8
 80022f6:	68fa      	ldr	r2, [r7, #12]
 80022f8:	4313      	orrs	r3, r2
 80022fa:	60fb      	str	r3, [r7, #12]
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	68fa      	ldr	r2, [r7, #12]
 8002302:	601a      	str	r2, [r3, #0]
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	681a      	ldr	r2, [r3, #0]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	f042 0201 	orr.w	r2, r2, #1
 8002312:	601a      	str	r2, [r3, #0]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	2220      	movs	r2, #32
 8002318:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	2200      	movs	r2, #0
 8002320:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002324:	2300      	movs	r3, #0
 8002326:	e000      	b.n	800232a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002328:	2302      	movs	r3, #2
 800232a:	4618      	mov	r0, r3
 800232c:	3714      	adds	r7, #20
 800232e:	46bd      	mov	sp, r7
 8002330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002334:	4770      	bx	lr
	...

08002338 <HAL_PWREx_GetVoltageRange>:
 8002338:	b480      	push	{r7}
 800233a:	af00      	add	r7, sp, #0
 800233c:	4b04      	ldr	r3, [pc, #16]	@ (8002350 <HAL_PWREx_GetVoltageRange+0x18>)
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002344:	4618      	mov	r0, r3
 8002346:	46bd      	mov	sp, r7
 8002348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800234c:	4770      	bx	lr
 800234e:	bf00      	nop
 8002350:	40007000 	.word	0x40007000

08002354 <HAL_PWREx_ControlVoltageScaling>:
 8002354:	b480      	push	{r7}
 8002356:	b085      	sub	sp, #20
 8002358:	af00      	add	r7, sp, #0
 800235a:	6078      	str	r0, [r7, #4]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002362:	d130      	bne.n	80023c6 <HAL_PWREx_ControlVoltageScaling+0x72>
 8002364:	4b23      	ldr	r3, [pc, #140]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800236c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002370:	d038      	beq.n	80023e4 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002372:	4b20      	ldr	r3, [pc, #128]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 800237a:	4a1e      	ldr	r2, [pc, #120]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800237c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002380:	6013      	str	r3, [r2, #0]
 8002382:	4b1d      	ldr	r3, [pc, #116]	@ (80023f8 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	2232      	movs	r2, #50	@ 0x32
 8002388:	fb02 f303 	mul.w	r3, r2, r3
 800238c:	4a1b      	ldr	r2, [pc, #108]	@ (80023fc <HAL_PWREx_ControlVoltageScaling+0xa8>)
 800238e:	fba2 2303 	umull	r2, r3, r2, r3
 8002392:	0c9b      	lsrs	r3, r3, #18
 8002394:	3301      	adds	r3, #1
 8002396:	60fb      	str	r3, [r7, #12]
 8002398:	e002      	b.n	80023a0 <HAL_PWREx_ControlVoltageScaling+0x4c>
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	3b01      	subs	r3, #1
 800239e:	60fb      	str	r3, [r7, #12]
 80023a0:	4b14      	ldr	r3, [pc, #80]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80023a2:	695b      	ldr	r3, [r3, #20]
 80023a4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023a8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80023ac:	d102      	bne.n	80023b4 <HAL_PWREx_ControlVoltageScaling+0x60>
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d1f2      	bne.n	800239a <HAL_PWREx_ControlVoltageScaling+0x46>
 80023b4:	4b0f      	ldr	r3, [pc, #60]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80023b6:	695b      	ldr	r3, [r3, #20]
 80023b8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023bc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80023c0:	d110      	bne.n	80023e4 <HAL_PWREx_ControlVoltageScaling+0x90>
 80023c2:	2303      	movs	r3, #3
 80023c4:	e00f      	b.n	80023e6 <HAL_PWREx_ControlVoltageScaling+0x92>
 80023c6:	4b0b      	ldr	r3, [pc, #44]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80023ce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80023d2:	d007      	beq.n	80023e4 <HAL_PWREx_ControlVoltageScaling+0x90>
 80023d4:	4b07      	ldr	r3, [pc, #28]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80023dc:	4a05      	ldr	r2, [pc, #20]	@ (80023f4 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80023de:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80023e2:	6013      	str	r3, [r2, #0]
 80023e4:	2300      	movs	r3, #0
 80023e6:	4618      	mov	r0, r3
 80023e8:	3714      	adds	r7, #20
 80023ea:	46bd      	mov	sp, r7
 80023ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f0:	4770      	bx	lr
 80023f2:	bf00      	nop
 80023f4:	40007000 	.word	0x40007000
 80023f8:	20000004 	.word	0x20000004
 80023fc:	431bde83 	.word	0x431bde83

08002400 <HAL_RCC_OscConfig>:
 8002400:	b580      	push	{r7, lr}
 8002402:	b088      	sub	sp, #32
 8002404:	af00      	add	r7, sp, #0
 8002406:	6078      	str	r0, [r7, #4]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	2b00      	cmp	r3, #0
 800240c:	d101      	bne.n	8002412 <HAL_RCC_OscConfig+0x12>
 800240e:	2301      	movs	r3, #1
 8002410:	e3ca      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002412:	4b97      	ldr	r3, [pc, #604]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002414:	689b      	ldr	r3, [r3, #8]
 8002416:	f003 030c 	and.w	r3, r3, #12
 800241a:	61bb      	str	r3, [r7, #24]
 800241c:	4b94      	ldr	r3, [pc, #592]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800241e:	68db      	ldr	r3, [r3, #12]
 8002420:	f003 0303 	and.w	r3, r3, #3
 8002424:	617b      	str	r3, [r7, #20]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	f003 0310 	and.w	r3, r3, #16
 800242e:	2b00      	cmp	r3, #0
 8002430:	f000 80e4 	beq.w	80025fc <HAL_RCC_OscConfig+0x1fc>
 8002434:	69bb      	ldr	r3, [r7, #24]
 8002436:	2b00      	cmp	r3, #0
 8002438:	d007      	beq.n	800244a <HAL_RCC_OscConfig+0x4a>
 800243a:	69bb      	ldr	r3, [r7, #24]
 800243c:	2b0c      	cmp	r3, #12
 800243e:	f040 808b 	bne.w	8002558 <HAL_RCC_OscConfig+0x158>
 8002442:	697b      	ldr	r3, [r7, #20]
 8002444:	2b01      	cmp	r3, #1
 8002446:	f040 8087 	bne.w	8002558 <HAL_RCC_OscConfig+0x158>
 800244a:	4b89      	ldr	r3, [pc, #548]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	f003 0302 	and.w	r3, r3, #2
 8002452:	2b00      	cmp	r3, #0
 8002454:	d005      	beq.n	8002462 <HAL_RCC_OscConfig+0x62>
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	699b      	ldr	r3, [r3, #24]
 800245a:	2b00      	cmp	r3, #0
 800245c:	d101      	bne.n	8002462 <HAL_RCC_OscConfig+0x62>
 800245e:	2301      	movs	r3, #1
 8002460:	e3a2      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	6a1a      	ldr	r2, [r3, #32]
 8002466:	4b82      	ldr	r3, [pc, #520]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	f003 0308 	and.w	r3, r3, #8
 800246e:	2b00      	cmp	r3, #0
 8002470:	d004      	beq.n	800247c <HAL_RCC_OscConfig+0x7c>
 8002472:	4b7f      	ldr	r3, [pc, #508]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800247a:	e005      	b.n	8002488 <HAL_RCC_OscConfig+0x88>
 800247c:	4b7c      	ldr	r3, [pc, #496]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800247e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002482:	091b      	lsrs	r3, r3, #4
 8002484:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002488:	4293      	cmp	r3, r2
 800248a:	d223      	bcs.n	80024d4 <HAL_RCC_OscConfig+0xd4>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	6a1b      	ldr	r3, [r3, #32]
 8002490:	4618      	mov	r0, r3
 8002492:	f000 fd87 	bl	8002fa4 <RCC_SetFlashLatencyFromMSIRange>
 8002496:	4603      	mov	r3, r0
 8002498:	2b00      	cmp	r3, #0
 800249a:	d001      	beq.n	80024a0 <HAL_RCC_OscConfig+0xa0>
 800249c:	2301      	movs	r3, #1
 800249e:	e383      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80024a0:	4b73      	ldr	r3, [pc, #460]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4a72      	ldr	r2, [pc, #456]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024a6:	f043 0308 	orr.w	r3, r3, #8
 80024aa:	6013      	str	r3, [r2, #0]
 80024ac:	4b70      	ldr	r3, [pc, #448]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	6a1b      	ldr	r3, [r3, #32]
 80024b8:	496d      	ldr	r1, [pc, #436]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024ba:	4313      	orrs	r3, r2
 80024bc:	600b      	str	r3, [r1, #0]
 80024be:	4b6c      	ldr	r3, [pc, #432]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024c0:	685b      	ldr	r3, [r3, #4]
 80024c2:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	69db      	ldr	r3, [r3, #28]
 80024ca:	021b      	lsls	r3, r3, #8
 80024cc:	4968      	ldr	r1, [pc, #416]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024ce:	4313      	orrs	r3, r2
 80024d0:	604b      	str	r3, [r1, #4]
 80024d2:	e025      	b.n	8002520 <HAL_RCC_OscConfig+0x120>
 80024d4:	4b66      	ldr	r3, [pc, #408]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	4a65      	ldr	r2, [pc, #404]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024da:	f043 0308 	orr.w	r3, r3, #8
 80024de:	6013      	str	r3, [r2, #0]
 80024e0:	4b63      	ldr	r3, [pc, #396]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	6a1b      	ldr	r3, [r3, #32]
 80024ec:	4960      	ldr	r1, [pc, #384]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024ee:	4313      	orrs	r3, r2
 80024f0:	600b      	str	r3, [r1, #0]
 80024f2:	4b5f      	ldr	r3, [pc, #380]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80024f4:	685b      	ldr	r3, [r3, #4]
 80024f6:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	69db      	ldr	r3, [r3, #28]
 80024fe:	021b      	lsls	r3, r3, #8
 8002500:	495b      	ldr	r1, [pc, #364]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002502:	4313      	orrs	r3, r2
 8002504:	604b      	str	r3, [r1, #4]
 8002506:	69bb      	ldr	r3, [r7, #24]
 8002508:	2b00      	cmp	r3, #0
 800250a:	d109      	bne.n	8002520 <HAL_RCC_OscConfig+0x120>
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	6a1b      	ldr	r3, [r3, #32]
 8002510:	4618      	mov	r0, r3
 8002512:	f000 fd47 	bl	8002fa4 <RCC_SetFlashLatencyFromMSIRange>
 8002516:	4603      	mov	r3, r0
 8002518:	2b00      	cmp	r3, #0
 800251a:	d001      	beq.n	8002520 <HAL_RCC_OscConfig+0x120>
 800251c:	2301      	movs	r3, #1
 800251e:	e343      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002520:	f000 fc4a 	bl	8002db8 <HAL_RCC_GetSysClockFreq>
 8002524:	4602      	mov	r2, r0
 8002526:	4b52      	ldr	r3, [pc, #328]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002528:	689b      	ldr	r3, [r3, #8]
 800252a:	091b      	lsrs	r3, r3, #4
 800252c:	f003 030f 	and.w	r3, r3, #15
 8002530:	4950      	ldr	r1, [pc, #320]	@ (8002674 <HAL_RCC_OscConfig+0x274>)
 8002532:	5ccb      	ldrb	r3, [r1, r3]
 8002534:	f003 031f 	and.w	r3, r3, #31
 8002538:	fa22 f303 	lsr.w	r3, r2, r3
 800253c:	4a4e      	ldr	r2, [pc, #312]	@ (8002678 <HAL_RCC_OscConfig+0x278>)
 800253e:	6013      	str	r3, [r2, #0]
 8002540:	4b4e      	ldr	r3, [pc, #312]	@ (800267c <HAL_RCC_OscConfig+0x27c>)
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	4618      	mov	r0, r3
 8002546:	f7fe fb95 	bl	8000c74 <HAL_InitTick>
 800254a:	4603      	mov	r3, r0
 800254c:	73fb      	strb	r3, [r7, #15]
 800254e:	7bfb      	ldrb	r3, [r7, #15]
 8002550:	2b00      	cmp	r3, #0
 8002552:	d052      	beq.n	80025fa <HAL_RCC_OscConfig+0x1fa>
 8002554:	7bfb      	ldrb	r3, [r7, #15]
 8002556:	e327      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	699b      	ldr	r3, [r3, #24]
 800255c:	2b00      	cmp	r3, #0
 800255e:	d032      	beq.n	80025c6 <HAL_RCC_OscConfig+0x1c6>
 8002560:	4b43      	ldr	r3, [pc, #268]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	4a42      	ldr	r2, [pc, #264]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002566:	f043 0301 	orr.w	r3, r3, #1
 800256a:	6013      	str	r3, [r2, #0]
 800256c:	f7ff fa20 	bl	80019b0 <HAL_GetTick>
 8002570:	6138      	str	r0, [r7, #16]
 8002572:	e008      	b.n	8002586 <HAL_RCC_OscConfig+0x186>
 8002574:	f7ff fa1c 	bl	80019b0 <HAL_GetTick>
 8002578:	4602      	mov	r2, r0
 800257a:	693b      	ldr	r3, [r7, #16]
 800257c:	1ad3      	subs	r3, r2, r3
 800257e:	2b02      	cmp	r3, #2
 8002580:	d901      	bls.n	8002586 <HAL_RCC_OscConfig+0x186>
 8002582:	2303      	movs	r3, #3
 8002584:	e310      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002586:	4b3a      	ldr	r3, [pc, #232]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	f003 0302 	and.w	r3, r3, #2
 800258e:	2b00      	cmp	r3, #0
 8002590:	d0f0      	beq.n	8002574 <HAL_RCC_OscConfig+0x174>
 8002592:	4b37      	ldr	r3, [pc, #220]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	4a36      	ldr	r2, [pc, #216]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002598:	f043 0308 	orr.w	r3, r3, #8
 800259c:	6013      	str	r3, [r2, #0]
 800259e:	4b34      	ldr	r3, [pc, #208]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	6a1b      	ldr	r3, [r3, #32]
 80025aa:	4931      	ldr	r1, [pc, #196]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025ac:	4313      	orrs	r3, r2
 80025ae:	600b      	str	r3, [r1, #0]
 80025b0:	4b2f      	ldr	r3, [pc, #188]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025b2:	685b      	ldr	r3, [r3, #4]
 80025b4:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	69db      	ldr	r3, [r3, #28]
 80025bc:	021b      	lsls	r3, r3, #8
 80025be:	492c      	ldr	r1, [pc, #176]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025c0:	4313      	orrs	r3, r2
 80025c2:	604b      	str	r3, [r1, #4]
 80025c4:	e01a      	b.n	80025fc <HAL_RCC_OscConfig+0x1fc>
 80025c6:	4b2a      	ldr	r3, [pc, #168]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	4a29      	ldr	r2, [pc, #164]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025cc:	f023 0301 	bic.w	r3, r3, #1
 80025d0:	6013      	str	r3, [r2, #0]
 80025d2:	f7ff f9ed 	bl	80019b0 <HAL_GetTick>
 80025d6:	6138      	str	r0, [r7, #16]
 80025d8:	e008      	b.n	80025ec <HAL_RCC_OscConfig+0x1ec>
 80025da:	f7ff f9e9 	bl	80019b0 <HAL_GetTick>
 80025de:	4602      	mov	r2, r0
 80025e0:	693b      	ldr	r3, [r7, #16]
 80025e2:	1ad3      	subs	r3, r2, r3
 80025e4:	2b02      	cmp	r3, #2
 80025e6:	d901      	bls.n	80025ec <HAL_RCC_OscConfig+0x1ec>
 80025e8:	2303      	movs	r3, #3
 80025ea:	e2dd      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80025ec:	4b20      	ldr	r3, [pc, #128]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	f003 0302 	and.w	r3, r3, #2
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d1f0      	bne.n	80025da <HAL_RCC_OscConfig+0x1da>
 80025f8:	e000      	b.n	80025fc <HAL_RCC_OscConfig+0x1fc>
 80025fa:	bf00      	nop
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	f003 0301 	and.w	r3, r3, #1
 8002604:	2b00      	cmp	r3, #0
 8002606:	d074      	beq.n	80026f2 <HAL_RCC_OscConfig+0x2f2>
 8002608:	69bb      	ldr	r3, [r7, #24]
 800260a:	2b08      	cmp	r3, #8
 800260c:	d005      	beq.n	800261a <HAL_RCC_OscConfig+0x21a>
 800260e:	69bb      	ldr	r3, [r7, #24]
 8002610:	2b0c      	cmp	r3, #12
 8002612:	d10e      	bne.n	8002632 <HAL_RCC_OscConfig+0x232>
 8002614:	697b      	ldr	r3, [r7, #20]
 8002616:	2b03      	cmp	r3, #3
 8002618:	d10b      	bne.n	8002632 <HAL_RCC_OscConfig+0x232>
 800261a:	4b15      	ldr	r3, [pc, #84]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002622:	2b00      	cmp	r3, #0
 8002624:	d064      	beq.n	80026f0 <HAL_RCC_OscConfig+0x2f0>
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	685b      	ldr	r3, [r3, #4]
 800262a:	2b00      	cmp	r3, #0
 800262c:	d160      	bne.n	80026f0 <HAL_RCC_OscConfig+0x2f0>
 800262e:	2301      	movs	r3, #1
 8002630:	e2ba      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	685b      	ldr	r3, [r3, #4]
 8002636:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800263a:	d106      	bne.n	800264a <HAL_RCC_OscConfig+0x24a>
 800263c:	4b0c      	ldr	r3, [pc, #48]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	4a0b      	ldr	r2, [pc, #44]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002642:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002646:	6013      	str	r3, [r2, #0]
 8002648:	e026      	b.n	8002698 <HAL_RCC_OscConfig+0x298>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	685b      	ldr	r3, [r3, #4]
 800264e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002652:	d115      	bne.n	8002680 <HAL_RCC_OscConfig+0x280>
 8002654:	4b06      	ldr	r3, [pc, #24]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	4a05      	ldr	r2, [pc, #20]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 800265a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800265e:	6013      	str	r3, [r2, #0]
 8002660:	4b03      	ldr	r3, [pc, #12]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	4a02      	ldr	r2, [pc, #8]	@ (8002670 <HAL_RCC_OscConfig+0x270>)
 8002666:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800266a:	6013      	str	r3, [r2, #0]
 800266c:	e014      	b.n	8002698 <HAL_RCC_OscConfig+0x298>
 800266e:	bf00      	nop
 8002670:	40021000 	.word	0x40021000
 8002674:	08009a24 	.word	0x08009a24
 8002678:	20000004 	.word	0x20000004
 800267c:	20000008 	.word	0x20000008
 8002680:	4ba0      	ldr	r3, [pc, #640]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	4a9f      	ldr	r2, [pc, #636]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002686:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800268a:	6013      	str	r3, [r2, #0]
 800268c:	4b9d      	ldr	r3, [pc, #628]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800268e:	681b      	ldr	r3, [r3, #0]
 8002690:	4a9c      	ldr	r2, [pc, #624]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002692:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002696:	6013      	str	r3, [r2, #0]
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	685b      	ldr	r3, [r3, #4]
 800269c:	2b00      	cmp	r3, #0
 800269e:	d013      	beq.n	80026c8 <HAL_RCC_OscConfig+0x2c8>
 80026a0:	f7ff f986 	bl	80019b0 <HAL_GetTick>
 80026a4:	6138      	str	r0, [r7, #16]
 80026a6:	e008      	b.n	80026ba <HAL_RCC_OscConfig+0x2ba>
 80026a8:	f7ff f982 	bl	80019b0 <HAL_GetTick>
 80026ac:	4602      	mov	r2, r0
 80026ae:	693b      	ldr	r3, [r7, #16]
 80026b0:	1ad3      	subs	r3, r2, r3
 80026b2:	2b64      	cmp	r3, #100	@ 0x64
 80026b4:	d901      	bls.n	80026ba <HAL_RCC_OscConfig+0x2ba>
 80026b6:	2303      	movs	r3, #3
 80026b8:	e276      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80026ba:	4b92      	ldr	r3, [pc, #584]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d0f0      	beq.n	80026a8 <HAL_RCC_OscConfig+0x2a8>
 80026c6:	e014      	b.n	80026f2 <HAL_RCC_OscConfig+0x2f2>
 80026c8:	f7ff f972 	bl	80019b0 <HAL_GetTick>
 80026cc:	6138      	str	r0, [r7, #16]
 80026ce:	e008      	b.n	80026e2 <HAL_RCC_OscConfig+0x2e2>
 80026d0:	f7ff f96e 	bl	80019b0 <HAL_GetTick>
 80026d4:	4602      	mov	r2, r0
 80026d6:	693b      	ldr	r3, [r7, #16]
 80026d8:	1ad3      	subs	r3, r2, r3
 80026da:	2b64      	cmp	r3, #100	@ 0x64
 80026dc:	d901      	bls.n	80026e2 <HAL_RCC_OscConfig+0x2e2>
 80026de:	2303      	movs	r3, #3
 80026e0:	e262      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80026e2:	4b88      	ldr	r3, [pc, #544]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	d1f0      	bne.n	80026d0 <HAL_RCC_OscConfig+0x2d0>
 80026ee:	e000      	b.n	80026f2 <HAL_RCC_OscConfig+0x2f2>
 80026f0:	bf00      	nop
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	f003 0302 	and.w	r3, r3, #2
 80026fa:	2b00      	cmp	r3, #0
 80026fc:	d060      	beq.n	80027c0 <HAL_RCC_OscConfig+0x3c0>
 80026fe:	69bb      	ldr	r3, [r7, #24]
 8002700:	2b04      	cmp	r3, #4
 8002702:	d005      	beq.n	8002710 <HAL_RCC_OscConfig+0x310>
 8002704:	69bb      	ldr	r3, [r7, #24]
 8002706:	2b0c      	cmp	r3, #12
 8002708:	d119      	bne.n	800273e <HAL_RCC_OscConfig+0x33e>
 800270a:	697b      	ldr	r3, [r7, #20]
 800270c:	2b02      	cmp	r3, #2
 800270e:	d116      	bne.n	800273e <HAL_RCC_OscConfig+0x33e>
 8002710:	4b7c      	ldr	r3, [pc, #496]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002718:	2b00      	cmp	r3, #0
 800271a:	d005      	beq.n	8002728 <HAL_RCC_OscConfig+0x328>
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	68db      	ldr	r3, [r3, #12]
 8002720:	2b00      	cmp	r3, #0
 8002722:	d101      	bne.n	8002728 <HAL_RCC_OscConfig+0x328>
 8002724:	2301      	movs	r3, #1
 8002726:	e23f      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002728:	4b76      	ldr	r3, [pc, #472]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800272a:	685b      	ldr	r3, [r3, #4]
 800272c:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	691b      	ldr	r3, [r3, #16]
 8002734:	061b      	lsls	r3, r3, #24
 8002736:	4973      	ldr	r1, [pc, #460]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002738:	4313      	orrs	r3, r2
 800273a:	604b      	str	r3, [r1, #4]
 800273c:	e040      	b.n	80027c0 <HAL_RCC_OscConfig+0x3c0>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	68db      	ldr	r3, [r3, #12]
 8002742:	2b00      	cmp	r3, #0
 8002744:	d023      	beq.n	800278e <HAL_RCC_OscConfig+0x38e>
 8002746:	4b6f      	ldr	r3, [pc, #444]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002748:	681b      	ldr	r3, [r3, #0]
 800274a:	4a6e      	ldr	r2, [pc, #440]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800274c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002750:	6013      	str	r3, [r2, #0]
 8002752:	f7ff f92d 	bl	80019b0 <HAL_GetTick>
 8002756:	6138      	str	r0, [r7, #16]
 8002758:	e008      	b.n	800276c <HAL_RCC_OscConfig+0x36c>
 800275a:	f7ff f929 	bl	80019b0 <HAL_GetTick>
 800275e:	4602      	mov	r2, r0
 8002760:	693b      	ldr	r3, [r7, #16]
 8002762:	1ad3      	subs	r3, r2, r3
 8002764:	2b02      	cmp	r3, #2
 8002766:	d901      	bls.n	800276c <HAL_RCC_OscConfig+0x36c>
 8002768:	2303      	movs	r3, #3
 800276a:	e21d      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 800276c:	4b65      	ldr	r3, [pc, #404]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002774:	2b00      	cmp	r3, #0
 8002776:	d0f0      	beq.n	800275a <HAL_RCC_OscConfig+0x35a>
 8002778:	4b62      	ldr	r3, [pc, #392]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800277a:	685b      	ldr	r3, [r3, #4]
 800277c:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	691b      	ldr	r3, [r3, #16]
 8002784:	061b      	lsls	r3, r3, #24
 8002786:	495f      	ldr	r1, [pc, #380]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002788:	4313      	orrs	r3, r2
 800278a:	604b      	str	r3, [r1, #4]
 800278c:	e018      	b.n	80027c0 <HAL_RCC_OscConfig+0x3c0>
 800278e:	4b5d      	ldr	r3, [pc, #372]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	4a5c      	ldr	r2, [pc, #368]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002794:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002798:	6013      	str	r3, [r2, #0]
 800279a:	f7ff f909 	bl	80019b0 <HAL_GetTick>
 800279e:	6138      	str	r0, [r7, #16]
 80027a0:	e008      	b.n	80027b4 <HAL_RCC_OscConfig+0x3b4>
 80027a2:	f7ff f905 	bl	80019b0 <HAL_GetTick>
 80027a6:	4602      	mov	r2, r0
 80027a8:	693b      	ldr	r3, [r7, #16]
 80027aa:	1ad3      	subs	r3, r2, r3
 80027ac:	2b02      	cmp	r3, #2
 80027ae:	d901      	bls.n	80027b4 <HAL_RCC_OscConfig+0x3b4>
 80027b0:	2303      	movs	r3, #3
 80027b2:	e1f9      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80027b4:	4b53      	ldr	r3, [pc, #332]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d1f0      	bne.n	80027a2 <HAL_RCC_OscConfig+0x3a2>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	f003 0308 	and.w	r3, r3, #8
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d03c      	beq.n	8002846 <HAL_RCC_OscConfig+0x446>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	695b      	ldr	r3, [r3, #20]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d01c      	beq.n	800280e <HAL_RCC_OscConfig+0x40e>
 80027d4:	4b4b      	ldr	r3, [pc, #300]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80027d6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80027da:	4a4a      	ldr	r2, [pc, #296]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80027dc:	f043 0301 	orr.w	r3, r3, #1
 80027e0:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80027e4:	f7ff f8e4 	bl	80019b0 <HAL_GetTick>
 80027e8:	6138      	str	r0, [r7, #16]
 80027ea:	e008      	b.n	80027fe <HAL_RCC_OscConfig+0x3fe>
 80027ec:	f7ff f8e0 	bl	80019b0 <HAL_GetTick>
 80027f0:	4602      	mov	r2, r0
 80027f2:	693b      	ldr	r3, [r7, #16]
 80027f4:	1ad3      	subs	r3, r2, r3
 80027f6:	2b02      	cmp	r3, #2
 80027f8:	d901      	bls.n	80027fe <HAL_RCC_OscConfig+0x3fe>
 80027fa:	2303      	movs	r3, #3
 80027fc:	e1d4      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80027fe:	4b41      	ldr	r3, [pc, #260]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002800:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002804:	f003 0302 	and.w	r3, r3, #2
 8002808:	2b00      	cmp	r3, #0
 800280a:	d0ef      	beq.n	80027ec <HAL_RCC_OscConfig+0x3ec>
 800280c:	e01b      	b.n	8002846 <HAL_RCC_OscConfig+0x446>
 800280e:	4b3d      	ldr	r3, [pc, #244]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002810:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002814:	4a3b      	ldr	r2, [pc, #236]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002816:	f023 0301 	bic.w	r3, r3, #1
 800281a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800281e:	f7ff f8c7 	bl	80019b0 <HAL_GetTick>
 8002822:	6138      	str	r0, [r7, #16]
 8002824:	e008      	b.n	8002838 <HAL_RCC_OscConfig+0x438>
 8002826:	f7ff f8c3 	bl	80019b0 <HAL_GetTick>
 800282a:	4602      	mov	r2, r0
 800282c:	693b      	ldr	r3, [r7, #16]
 800282e:	1ad3      	subs	r3, r2, r3
 8002830:	2b02      	cmp	r3, #2
 8002832:	d901      	bls.n	8002838 <HAL_RCC_OscConfig+0x438>
 8002834:	2303      	movs	r3, #3
 8002836:	e1b7      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002838:	4b32      	ldr	r3, [pc, #200]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800283a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800283e:	f003 0302 	and.w	r3, r3, #2
 8002842:	2b00      	cmp	r3, #0
 8002844:	d1ef      	bne.n	8002826 <HAL_RCC_OscConfig+0x426>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	f003 0304 	and.w	r3, r3, #4
 800284e:	2b00      	cmp	r3, #0
 8002850:	f000 80a6 	beq.w	80029a0 <HAL_RCC_OscConfig+0x5a0>
 8002854:	2300      	movs	r3, #0
 8002856:	77fb      	strb	r3, [r7, #31]
 8002858:	4b2a      	ldr	r3, [pc, #168]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800285a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800285c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002860:	2b00      	cmp	r3, #0
 8002862:	d10d      	bne.n	8002880 <HAL_RCC_OscConfig+0x480>
 8002864:	4b27      	ldr	r3, [pc, #156]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002866:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002868:	4a26      	ldr	r2, [pc, #152]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 800286a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800286e:	6593      	str	r3, [r2, #88]	@ 0x58
 8002870:	4b24      	ldr	r3, [pc, #144]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 8002872:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002874:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002878:	60bb      	str	r3, [r7, #8]
 800287a:	68bb      	ldr	r3, [r7, #8]
 800287c:	2301      	movs	r3, #1
 800287e:	77fb      	strb	r3, [r7, #31]
 8002880:	4b21      	ldr	r3, [pc, #132]	@ (8002908 <HAL_RCC_OscConfig+0x508>)
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002888:	2b00      	cmp	r3, #0
 800288a:	d118      	bne.n	80028be <HAL_RCC_OscConfig+0x4be>
 800288c:	4b1e      	ldr	r3, [pc, #120]	@ (8002908 <HAL_RCC_OscConfig+0x508>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a1d      	ldr	r2, [pc, #116]	@ (8002908 <HAL_RCC_OscConfig+0x508>)
 8002892:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002896:	6013      	str	r3, [r2, #0]
 8002898:	f7ff f88a 	bl	80019b0 <HAL_GetTick>
 800289c:	6138      	str	r0, [r7, #16]
 800289e:	e008      	b.n	80028b2 <HAL_RCC_OscConfig+0x4b2>
 80028a0:	f7ff f886 	bl	80019b0 <HAL_GetTick>
 80028a4:	4602      	mov	r2, r0
 80028a6:	693b      	ldr	r3, [r7, #16]
 80028a8:	1ad3      	subs	r3, r2, r3
 80028aa:	2b02      	cmp	r3, #2
 80028ac:	d901      	bls.n	80028b2 <HAL_RCC_OscConfig+0x4b2>
 80028ae:	2303      	movs	r3, #3
 80028b0:	e17a      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 80028b2:	4b15      	ldr	r3, [pc, #84]	@ (8002908 <HAL_RCC_OscConfig+0x508>)
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d0f0      	beq.n	80028a0 <HAL_RCC_OscConfig+0x4a0>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	689b      	ldr	r3, [r3, #8]
 80028c2:	2b01      	cmp	r3, #1
 80028c4:	d108      	bne.n	80028d8 <HAL_RCC_OscConfig+0x4d8>
 80028c6:	4b0f      	ldr	r3, [pc, #60]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028c8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80028cc:	4a0d      	ldr	r2, [pc, #52]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028ce:	f043 0301 	orr.w	r3, r3, #1
 80028d2:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80028d6:	e029      	b.n	800292c <HAL_RCC_OscConfig+0x52c>
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	689b      	ldr	r3, [r3, #8]
 80028dc:	2b05      	cmp	r3, #5
 80028de:	d115      	bne.n	800290c <HAL_RCC_OscConfig+0x50c>
 80028e0:	4b08      	ldr	r3, [pc, #32]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80028e6:	4a07      	ldr	r2, [pc, #28]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028e8:	f043 0304 	orr.w	r3, r3, #4
 80028ec:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80028f0:	4b04      	ldr	r3, [pc, #16]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80028f6:	4a03      	ldr	r2, [pc, #12]	@ (8002904 <HAL_RCC_OscConfig+0x504>)
 80028f8:	f043 0301 	orr.w	r3, r3, #1
 80028fc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002900:	e014      	b.n	800292c <HAL_RCC_OscConfig+0x52c>
 8002902:	bf00      	nop
 8002904:	40021000 	.word	0x40021000
 8002908:	40007000 	.word	0x40007000
 800290c:	4b9c      	ldr	r3, [pc, #624]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 800290e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002912:	4a9b      	ldr	r2, [pc, #620]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002914:	f023 0301 	bic.w	r3, r3, #1
 8002918:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800291c:	4b98      	ldr	r3, [pc, #608]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 800291e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002922:	4a97      	ldr	r2, [pc, #604]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002924:	f023 0304 	bic.w	r3, r3, #4
 8002928:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	689b      	ldr	r3, [r3, #8]
 8002930:	2b00      	cmp	r3, #0
 8002932:	d016      	beq.n	8002962 <HAL_RCC_OscConfig+0x562>
 8002934:	f7ff f83c 	bl	80019b0 <HAL_GetTick>
 8002938:	6138      	str	r0, [r7, #16]
 800293a:	e00a      	b.n	8002952 <HAL_RCC_OscConfig+0x552>
 800293c:	f7ff f838 	bl	80019b0 <HAL_GetTick>
 8002940:	4602      	mov	r2, r0
 8002942:	693b      	ldr	r3, [r7, #16]
 8002944:	1ad3      	subs	r3, r2, r3
 8002946:	f241 3288 	movw	r2, #5000	@ 0x1388
 800294a:	4293      	cmp	r3, r2
 800294c:	d901      	bls.n	8002952 <HAL_RCC_OscConfig+0x552>
 800294e:	2303      	movs	r3, #3
 8002950:	e12a      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002952:	4b8b      	ldr	r3, [pc, #556]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002954:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002958:	f003 0302 	and.w	r3, r3, #2
 800295c:	2b00      	cmp	r3, #0
 800295e:	d0ed      	beq.n	800293c <HAL_RCC_OscConfig+0x53c>
 8002960:	e015      	b.n	800298e <HAL_RCC_OscConfig+0x58e>
 8002962:	f7ff f825 	bl	80019b0 <HAL_GetTick>
 8002966:	6138      	str	r0, [r7, #16]
 8002968:	e00a      	b.n	8002980 <HAL_RCC_OscConfig+0x580>
 800296a:	f7ff f821 	bl	80019b0 <HAL_GetTick>
 800296e:	4602      	mov	r2, r0
 8002970:	693b      	ldr	r3, [r7, #16]
 8002972:	1ad3      	subs	r3, r2, r3
 8002974:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002978:	4293      	cmp	r3, r2
 800297a:	d901      	bls.n	8002980 <HAL_RCC_OscConfig+0x580>
 800297c:	2303      	movs	r3, #3
 800297e:	e113      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002980:	4b7f      	ldr	r3, [pc, #508]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002982:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002986:	f003 0302 	and.w	r3, r3, #2
 800298a:	2b00      	cmp	r3, #0
 800298c:	d1ed      	bne.n	800296a <HAL_RCC_OscConfig+0x56a>
 800298e:	7ffb      	ldrb	r3, [r7, #31]
 8002990:	2b01      	cmp	r3, #1
 8002992:	d105      	bne.n	80029a0 <HAL_RCC_OscConfig+0x5a0>
 8002994:	4b7a      	ldr	r3, [pc, #488]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002996:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002998:	4a79      	ldr	r2, [pc, #484]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 800299a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800299e:	6593      	str	r3, [r2, #88]	@ 0x58
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029a4:	2b00      	cmp	r3, #0
 80029a6:	f000 80fe 	beq.w	8002ba6 <HAL_RCC_OscConfig+0x7a6>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029ae:	2b02      	cmp	r3, #2
 80029b0:	f040 80d0 	bne.w	8002b54 <HAL_RCC_OscConfig+0x754>
 80029b4:	4b72      	ldr	r3, [pc, #456]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 80029b6:	68db      	ldr	r3, [r3, #12]
 80029b8:	617b      	str	r3, [r7, #20]
 80029ba:	697b      	ldr	r3, [r7, #20]
 80029bc:	f003 0203 	and.w	r2, r3, #3
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029c4:	429a      	cmp	r2, r3
 80029c6:	d130      	bne.n	8002a2a <HAL_RCC_OscConfig+0x62a>
 80029c8:	697b      	ldr	r3, [r7, #20]
 80029ca:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029d2:	3b01      	subs	r3, #1
 80029d4:	011b      	lsls	r3, r3, #4
 80029d6:	429a      	cmp	r2, r3
 80029d8:	d127      	bne.n	8002a2a <HAL_RCC_OscConfig+0x62a>
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80029e4:	021b      	lsls	r3, r3, #8
 80029e6:	429a      	cmp	r2, r3
 80029e8:	d11f      	bne.n	8002a2a <HAL_RCC_OscConfig+0x62a>
 80029ea:	697b      	ldr	r3, [r7, #20]
 80029ec:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029f0:	687a      	ldr	r2, [r7, #4]
 80029f2:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80029f4:	2a07      	cmp	r2, #7
 80029f6:	bf14      	ite	ne
 80029f8:	2201      	movne	r2, #1
 80029fa:	2200      	moveq	r2, #0
 80029fc:	b2d2      	uxtb	r2, r2
 80029fe:	4293      	cmp	r3, r2
 8002a00:	d113      	bne.n	8002a2a <HAL_RCC_OscConfig+0x62a>
 8002a02:	697b      	ldr	r3, [r7, #20]
 8002a04:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002a0c:	085b      	lsrs	r3, r3, #1
 8002a0e:	3b01      	subs	r3, #1
 8002a10:	055b      	lsls	r3, r3, #21
 8002a12:	429a      	cmp	r2, r3
 8002a14:	d109      	bne.n	8002a2a <HAL_RCC_OscConfig+0x62a>
 8002a16:	697b      	ldr	r3, [r7, #20]
 8002a18:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a20:	085b      	lsrs	r3, r3, #1
 8002a22:	3b01      	subs	r3, #1
 8002a24:	065b      	lsls	r3, r3, #25
 8002a26:	429a      	cmp	r2, r3
 8002a28:	d06e      	beq.n	8002b08 <HAL_RCC_OscConfig+0x708>
 8002a2a:	69bb      	ldr	r3, [r7, #24]
 8002a2c:	2b0c      	cmp	r3, #12
 8002a2e:	d069      	beq.n	8002b04 <HAL_RCC_OscConfig+0x704>
 8002a30:	4b53      	ldr	r3, [pc, #332]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d105      	bne.n	8002a48 <HAL_RCC_OscConfig+0x648>
 8002a3c:	4b50      	ldr	r3, [pc, #320]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a44:	2b00      	cmp	r3, #0
 8002a46:	d001      	beq.n	8002a4c <HAL_RCC_OscConfig+0x64c>
 8002a48:	2301      	movs	r3, #1
 8002a4a:	e0ad      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002a4c:	4b4c      	ldr	r3, [pc, #304]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	4a4b      	ldr	r2, [pc, #300]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a52:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002a56:	6013      	str	r3, [r2, #0]
 8002a58:	f7fe ffaa 	bl	80019b0 <HAL_GetTick>
 8002a5c:	6138      	str	r0, [r7, #16]
 8002a5e:	e008      	b.n	8002a72 <HAL_RCC_OscConfig+0x672>
 8002a60:	f7fe ffa6 	bl	80019b0 <HAL_GetTick>
 8002a64:	4602      	mov	r2, r0
 8002a66:	693b      	ldr	r3, [r7, #16]
 8002a68:	1ad3      	subs	r3, r2, r3
 8002a6a:	2b02      	cmp	r3, #2
 8002a6c:	d901      	bls.n	8002a72 <HAL_RCC_OscConfig+0x672>
 8002a6e:	2303      	movs	r3, #3
 8002a70:	e09a      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002a72:	4b43      	ldr	r3, [pc, #268]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d1f0      	bne.n	8002a60 <HAL_RCC_OscConfig+0x660>
 8002a7e:	4b40      	ldr	r3, [pc, #256]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002a80:	68da      	ldr	r2, [r3, #12]
 8002a82:	4b40      	ldr	r3, [pc, #256]	@ (8002b84 <HAL_RCC_OscConfig+0x784>)
 8002a84:	4013      	ands	r3, r2
 8002a86:	687a      	ldr	r2, [r7, #4]
 8002a88:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002a8a:	687a      	ldr	r2, [r7, #4]
 8002a8c:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002a8e:	3a01      	subs	r2, #1
 8002a90:	0112      	lsls	r2, r2, #4
 8002a92:	4311      	orrs	r1, r2
 8002a94:	687a      	ldr	r2, [r7, #4]
 8002a96:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8002a98:	0212      	lsls	r2, r2, #8
 8002a9a:	4311      	orrs	r1, r2
 8002a9c:	687a      	ldr	r2, [r7, #4]
 8002a9e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002aa0:	0852      	lsrs	r2, r2, #1
 8002aa2:	3a01      	subs	r2, #1
 8002aa4:	0552      	lsls	r2, r2, #21
 8002aa6:	4311      	orrs	r1, r2
 8002aa8:	687a      	ldr	r2, [r7, #4]
 8002aaa:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8002aac:	0852      	lsrs	r2, r2, #1
 8002aae:	3a01      	subs	r2, #1
 8002ab0:	0652      	lsls	r2, r2, #25
 8002ab2:	4311      	orrs	r1, r2
 8002ab4:	687a      	ldr	r2, [r7, #4]
 8002ab6:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8002ab8:	0912      	lsrs	r2, r2, #4
 8002aba:	0452      	lsls	r2, r2, #17
 8002abc:	430a      	orrs	r2, r1
 8002abe:	4930      	ldr	r1, [pc, #192]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002ac0:	4313      	orrs	r3, r2
 8002ac2:	60cb      	str	r3, [r1, #12]
 8002ac4:	4b2e      	ldr	r3, [pc, #184]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	4a2d      	ldr	r2, [pc, #180]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002aca:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002ace:	6013      	str	r3, [r2, #0]
 8002ad0:	4b2b      	ldr	r3, [pc, #172]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002ad2:	68db      	ldr	r3, [r3, #12]
 8002ad4:	4a2a      	ldr	r2, [pc, #168]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002ad6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002ada:	60d3      	str	r3, [r2, #12]
 8002adc:	f7fe ff68 	bl	80019b0 <HAL_GetTick>
 8002ae0:	6138      	str	r0, [r7, #16]
 8002ae2:	e008      	b.n	8002af6 <HAL_RCC_OscConfig+0x6f6>
 8002ae4:	f7fe ff64 	bl	80019b0 <HAL_GetTick>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	693b      	ldr	r3, [r7, #16]
 8002aec:	1ad3      	subs	r3, r2, r3
 8002aee:	2b02      	cmp	r3, #2
 8002af0:	d901      	bls.n	8002af6 <HAL_RCC_OscConfig+0x6f6>
 8002af2:	2303      	movs	r3, #3
 8002af4:	e058      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002af6:	4b22      	ldr	r3, [pc, #136]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d0f0      	beq.n	8002ae4 <HAL_RCC_OscConfig+0x6e4>
 8002b02:	e050      	b.n	8002ba6 <HAL_RCC_OscConfig+0x7a6>
 8002b04:	2301      	movs	r3, #1
 8002b06:	e04f      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002b08:	4b1d      	ldr	r3, [pc, #116]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002b10:	2b00      	cmp	r3, #0
 8002b12:	d148      	bne.n	8002ba6 <HAL_RCC_OscConfig+0x7a6>
 8002b14:	4b1a      	ldr	r3, [pc, #104]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	4a19      	ldr	r2, [pc, #100]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b1a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002b1e:	6013      	str	r3, [r2, #0]
 8002b20:	4b17      	ldr	r3, [pc, #92]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b22:	68db      	ldr	r3, [r3, #12]
 8002b24:	4a16      	ldr	r2, [pc, #88]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b26:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002b2a:	60d3      	str	r3, [r2, #12]
 8002b2c:	f7fe ff40 	bl	80019b0 <HAL_GetTick>
 8002b30:	6138      	str	r0, [r7, #16]
 8002b32:	e008      	b.n	8002b46 <HAL_RCC_OscConfig+0x746>
 8002b34:	f7fe ff3c 	bl	80019b0 <HAL_GetTick>
 8002b38:	4602      	mov	r2, r0
 8002b3a:	693b      	ldr	r3, [r7, #16]
 8002b3c:	1ad3      	subs	r3, r2, r3
 8002b3e:	2b02      	cmp	r3, #2
 8002b40:	d901      	bls.n	8002b46 <HAL_RCC_OscConfig+0x746>
 8002b42:	2303      	movs	r3, #3
 8002b44:	e030      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002b46:	4b0e      	ldr	r3, [pc, #56]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d0f0      	beq.n	8002b34 <HAL_RCC_OscConfig+0x734>
 8002b52:	e028      	b.n	8002ba6 <HAL_RCC_OscConfig+0x7a6>
 8002b54:	69bb      	ldr	r3, [r7, #24]
 8002b56:	2b0c      	cmp	r3, #12
 8002b58:	d023      	beq.n	8002ba2 <HAL_RCC_OscConfig+0x7a2>
 8002b5a:	4b09      	ldr	r3, [pc, #36]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	4a08      	ldr	r2, [pc, #32]	@ (8002b80 <HAL_RCC_OscConfig+0x780>)
 8002b60:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002b64:	6013      	str	r3, [r2, #0]
 8002b66:	f7fe ff23 	bl	80019b0 <HAL_GetTick>
 8002b6a:	6138      	str	r0, [r7, #16]
 8002b6c:	e00c      	b.n	8002b88 <HAL_RCC_OscConfig+0x788>
 8002b6e:	f7fe ff1f 	bl	80019b0 <HAL_GetTick>
 8002b72:	4602      	mov	r2, r0
 8002b74:	693b      	ldr	r3, [r7, #16]
 8002b76:	1ad3      	subs	r3, r2, r3
 8002b78:	2b02      	cmp	r3, #2
 8002b7a:	d905      	bls.n	8002b88 <HAL_RCC_OscConfig+0x788>
 8002b7c:	2303      	movs	r3, #3
 8002b7e:	e013      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002b80:	40021000 	.word	0x40021000
 8002b84:	f99d808c 	.word	0xf99d808c
 8002b88:	4b09      	ldr	r3, [pc, #36]	@ (8002bb0 <HAL_RCC_OscConfig+0x7b0>)
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002b90:	2b00      	cmp	r3, #0
 8002b92:	d1ec      	bne.n	8002b6e <HAL_RCC_OscConfig+0x76e>
 8002b94:	4b06      	ldr	r3, [pc, #24]	@ (8002bb0 <HAL_RCC_OscConfig+0x7b0>)
 8002b96:	68da      	ldr	r2, [r3, #12]
 8002b98:	4905      	ldr	r1, [pc, #20]	@ (8002bb0 <HAL_RCC_OscConfig+0x7b0>)
 8002b9a:	4b06      	ldr	r3, [pc, #24]	@ (8002bb4 <HAL_RCC_OscConfig+0x7b4>)
 8002b9c:	4013      	ands	r3, r2
 8002b9e:	60cb      	str	r3, [r1, #12]
 8002ba0:	e001      	b.n	8002ba6 <HAL_RCC_OscConfig+0x7a6>
 8002ba2:	2301      	movs	r3, #1
 8002ba4:	e000      	b.n	8002ba8 <HAL_RCC_OscConfig+0x7a8>
 8002ba6:	2300      	movs	r3, #0
 8002ba8:	4618      	mov	r0, r3
 8002baa:	3720      	adds	r7, #32
 8002bac:	46bd      	mov	sp, r7
 8002bae:	bd80      	pop	{r7, pc}
 8002bb0:	40021000 	.word	0x40021000
 8002bb4:	feeefffc 	.word	0xfeeefffc

08002bb8 <HAL_RCC_ClockConfig>:
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	b084      	sub	sp, #16
 8002bbc:	af00      	add	r7, sp, #0
 8002bbe:	6078      	str	r0, [r7, #4]
 8002bc0:	6039      	str	r1, [r7, #0]
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d101      	bne.n	8002bcc <HAL_RCC_ClockConfig+0x14>
 8002bc8:	2301      	movs	r3, #1
 8002bca:	e0e7      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002bcc:	4b75      	ldr	r3, [pc, #468]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	f003 0307 	and.w	r3, r3, #7
 8002bd4:	683a      	ldr	r2, [r7, #0]
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	d910      	bls.n	8002bfc <HAL_RCC_ClockConfig+0x44>
 8002bda:	4b72      	ldr	r3, [pc, #456]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	f023 0207 	bic.w	r2, r3, #7
 8002be2:	4970      	ldr	r1, [pc, #448]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002be4:	683b      	ldr	r3, [r7, #0]
 8002be6:	4313      	orrs	r3, r2
 8002be8:	600b      	str	r3, [r1, #0]
 8002bea:	4b6e      	ldr	r3, [pc, #440]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f003 0307 	and.w	r3, r3, #7
 8002bf2:	683a      	ldr	r2, [r7, #0]
 8002bf4:	429a      	cmp	r2, r3
 8002bf6:	d001      	beq.n	8002bfc <HAL_RCC_ClockConfig+0x44>
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	e0cf      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	f003 0302 	and.w	r3, r3, #2
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d010      	beq.n	8002c2a <HAL_RCC_ClockConfig+0x72>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	689a      	ldr	r2, [r3, #8]
 8002c0c:	4b66      	ldr	r3, [pc, #408]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c0e:	689b      	ldr	r3, [r3, #8]
 8002c10:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002c14:	429a      	cmp	r2, r3
 8002c16:	d908      	bls.n	8002c2a <HAL_RCC_ClockConfig+0x72>
 8002c18:	4b63      	ldr	r3, [pc, #396]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c1a:	689b      	ldr	r3, [r3, #8]
 8002c1c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	689b      	ldr	r3, [r3, #8]
 8002c24:	4960      	ldr	r1, [pc, #384]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c26:	4313      	orrs	r3, r2
 8002c28:	608b      	str	r3, [r1, #8]
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	f003 0301 	and.w	r3, r3, #1
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d04c      	beq.n	8002cd0 <HAL_RCC_ClockConfig+0x118>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	2b03      	cmp	r3, #3
 8002c3c:	d107      	bne.n	8002c4e <HAL_RCC_ClockConfig+0x96>
 8002c3e:	4b5a      	ldr	r3, [pc, #360]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d121      	bne.n	8002c8e <HAL_RCC_ClockConfig+0xd6>
 8002c4a:	2301      	movs	r3, #1
 8002c4c:	e0a6      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	685b      	ldr	r3, [r3, #4]
 8002c52:	2b02      	cmp	r3, #2
 8002c54:	d107      	bne.n	8002c66 <HAL_RCC_ClockConfig+0xae>
 8002c56:	4b54      	ldr	r3, [pc, #336]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d115      	bne.n	8002c8e <HAL_RCC_ClockConfig+0xd6>
 8002c62:	2301      	movs	r3, #1
 8002c64:	e09a      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	685b      	ldr	r3, [r3, #4]
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d107      	bne.n	8002c7e <HAL_RCC_ClockConfig+0xc6>
 8002c6e:	4b4e      	ldr	r3, [pc, #312]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	f003 0302 	and.w	r3, r3, #2
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d109      	bne.n	8002c8e <HAL_RCC_ClockConfig+0xd6>
 8002c7a:	2301      	movs	r3, #1
 8002c7c:	e08e      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002c7e:	4b4a      	ldr	r3, [pc, #296]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d101      	bne.n	8002c8e <HAL_RCC_ClockConfig+0xd6>
 8002c8a:	2301      	movs	r3, #1
 8002c8c:	e086      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002c8e:	4b46      	ldr	r3, [pc, #280]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c90:	689b      	ldr	r3, [r3, #8]
 8002c92:	f023 0203 	bic.w	r2, r3, #3
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	685b      	ldr	r3, [r3, #4]
 8002c9a:	4943      	ldr	r1, [pc, #268]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002c9c:	4313      	orrs	r3, r2
 8002c9e:	608b      	str	r3, [r1, #8]
 8002ca0:	f7fe fe86 	bl	80019b0 <HAL_GetTick>
 8002ca4:	60f8      	str	r0, [r7, #12]
 8002ca6:	e00a      	b.n	8002cbe <HAL_RCC_ClockConfig+0x106>
 8002ca8:	f7fe fe82 	bl	80019b0 <HAL_GetTick>
 8002cac:	4602      	mov	r2, r0
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	1ad3      	subs	r3, r2, r3
 8002cb2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002cb6:	4293      	cmp	r3, r2
 8002cb8:	d901      	bls.n	8002cbe <HAL_RCC_ClockConfig+0x106>
 8002cba:	2303      	movs	r3, #3
 8002cbc:	e06e      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002cbe:	4b3a      	ldr	r3, [pc, #232]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002cc0:	689b      	ldr	r3, [r3, #8]
 8002cc2:	f003 020c 	and.w	r2, r3, #12
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	685b      	ldr	r3, [r3, #4]
 8002cca:	009b      	lsls	r3, r3, #2
 8002ccc:	429a      	cmp	r2, r3
 8002cce:	d1eb      	bne.n	8002ca8 <HAL_RCC_ClockConfig+0xf0>
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	f003 0302 	and.w	r3, r3, #2
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d010      	beq.n	8002cfe <HAL_RCC_ClockConfig+0x146>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	689a      	ldr	r2, [r3, #8]
 8002ce0:	4b31      	ldr	r3, [pc, #196]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002ce2:	689b      	ldr	r3, [r3, #8]
 8002ce4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002ce8:	429a      	cmp	r2, r3
 8002cea:	d208      	bcs.n	8002cfe <HAL_RCC_ClockConfig+0x146>
 8002cec:	4b2e      	ldr	r3, [pc, #184]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002cee:	689b      	ldr	r3, [r3, #8]
 8002cf0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	689b      	ldr	r3, [r3, #8]
 8002cf8:	492b      	ldr	r1, [pc, #172]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002cfa:	4313      	orrs	r3, r2
 8002cfc:	608b      	str	r3, [r1, #8]
 8002cfe:	4b29      	ldr	r3, [pc, #164]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	f003 0307 	and.w	r3, r3, #7
 8002d06:	683a      	ldr	r2, [r7, #0]
 8002d08:	429a      	cmp	r2, r3
 8002d0a:	d210      	bcs.n	8002d2e <HAL_RCC_ClockConfig+0x176>
 8002d0c:	4b25      	ldr	r3, [pc, #148]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	f023 0207 	bic.w	r2, r3, #7
 8002d14:	4923      	ldr	r1, [pc, #140]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002d16:	683b      	ldr	r3, [r7, #0]
 8002d18:	4313      	orrs	r3, r2
 8002d1a:	600b      	str	r3, [r1, #0]
 8002d1c:	4b21      	ldr	r3, [pc, #132]	@ (8002da4 <HAL_RCC_ClockConfig+0x1ec>)
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	f003 0307 	and.w	r3, r3, #7
 8002d24:	683a      	ldr	r2, [r7, #0]
 8002d26:	429a      	cmp	r2, r3
 8002d28:	d001      	beq.n	8002d2e <HAL_RCC_ClockConfig+0x176>
 8002d2a:	2301      	movs	r3, #1
 8002d2c:	e036      	b.n	8002d9c <HAL_RCC_ClockConfig+0x1e4>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	f003 0304 	and.w	r3, r3, #4
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d008      	beq.n	8002d4c <HAL_RCC_ClockConfig+0x194>
 8002d3a:	4b1b      	ldr	r3, [pc, #108]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002d3c:	689b      	ldr	r3, [r3, #8]
 8002d3e:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	68db      	ldr	r3, [r3, #12]
 8002d46:	4918      	ldr	r1, [pc, #96]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002d48:	4313      	orrs	r3, r2
 8002d4a:	608b      	str	r3, [r1, #8]
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	f003 0308 	and.w	r3, r3, #8
 8002d54:	2b00      	cmp	r3, #0
 8002d56:	d009      	beq.n	8002d6c <HAL_RCC_ClockConfig+0x1b4>
 8002d58:	4b13      	ldr	r3, [pc, #76]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002d5a:	689b      	ldr	r3, [r3, #8]
 8002d5c:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	691b      	ldr	r3, [r3, #16]
 8002d64:	00db      	lsls	r3, r3, #3
 8002d66:	4910      	ldr	r1, [pc, #64]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002d68:	4313      	orrs	r3, r2
 8002d6a:	608b      	str	r3, [r1, #8]
 8002d6c:	f000 f824 	bl	8002db8 <HAL_RCC_GetSysClockFreq>
 8002d70:	4602      	mov	r2, r0
 8002d72:	4b0d      	ldr	r3, [pc, #52]	@ (8002da8 <HAL_RCC_ClockConfig+0x1f0>)
 8002d74:	689b      	ldr	r3, [r3, #8]
 8002d76:	091b      	lsrs	r3, r3, #4
 8002d78:	f003 030f 	and.w	r3, r3, #15
 8002d7c:	490b      	ldr	r1, [pc, #44]	@ (8002dac <HAL_RCC_ClockConfig+0x1f4>)
 8002d7e:	5ccb      	ldrb	r3, [r1, r3]
 8002d80:	f003 031f 	and.w	r3, r3, #31
 8002d84:	fa22 f303 	lsr.w	r3, r2, r3
 8002d88:	4a09      	ldr	r2, [pc, #36]	@ (8002db0 <HAL_RCC_ClockConfig+0x1f8>)
 8002d8a:	6013      	str	r3, [r2, #0]
 8002d8c:	4b09      	ldr	r3, [pc, #36]	@ (8002db4 <HAL_RCC_ClockConfig+0x1fc>)
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	4618      	mov	r0, r3
 8002d92:	f7fd ff6f 	bl	8000c74 <HAL_InitTick>
 8002d96:	4603      	mov	r3, r0
 8002d98:	72fb      	strb	r3, [r7, #11]
 8002d9a:	7afb      	ldrb	r3, [r7, #11]
 8002d9c:	4618      	mov	r0, r3
 8002d9e:	3710      	adds	r7, #16
 8002da0:	46bd      	mov	sp, r7
 8002da2:	bd80      	pop	{r7, pc}
 8002da4:	40022000 	.word	0x40022000
 8002da8:	40021000 	.word	0x40021000
 8002dac:	08009a24 	.word	0x08009a24
 8002db0:	20000004 	.word	0x20000004
 8002db4:	20000008 	.word	0x20000008

08002db8 <HAL_RCC_GetSysClockFreq>:
 8002db8:	b480      	push	{r7}
 8002dba:	b089      	sub	sp, #36	@ 0x24
 8002dbc:	af00      	add	r7, sp, #0
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	61fb      	str	r3, [r7, #28]
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	61bb      	str	r3, [r7, #24]
 8002dc6:	4b3e      	ldr	r3, [pc, #248]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002dc8:	689b      	ldr	r3, [r3, #8]
 8002dca:	f003 030c 	and.w	r3, r3, #12
 8002dce:	613b      	str	r3, [r7, #16]
 8002dd0:	4b3b      	ldr	r3, [pc, #236]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002dd2:	68db      	ldr	r3, [r3, #12]
 8002dd4:	f003 0303 	and.w	r3, r3, #3
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	693b      	ldr	r3, [r7, #16]
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d005      	beq.n	8002dec <HAL_RCC_GetSysClockFreq+0x34>
 8002de0:	693b      	ldr	r3, [r7, #16]
 8002de2:	2b0c      	cmp	r3, #12
 8002de4:	d121      	bne.n	8002e2a <HAL_RCC_GetSysClockFreq+0x72>
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	2b01      	cmp	r3, #1
 8002dea:	d11e      	bne.n	8002e2a <HAL_RCC_GetSysClockFreq+0x72>
 8002dec:	4b34      	ldr	r3, [pc, #208]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	f003 0308 	and.w	r3, r3, #8
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d107      	bne.n	8002e08 <HAL_RCC_GetSysClockFreq+0x50>
 8002df8:	4b31      	ldr	r3, [pc, #196]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002dfa:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002dfe:	0a1b      	lsrs	r3, r3, #8
 8002e00:	f003 030f 	and.w	r3, r3, #15
 8002e04:	61fb      	str	r3, [r7, #28]
 8002e06:	e005      	b.n	8002e14 <HAL_RCC_GetSysClockFreq+0x5c>
 8002e08:	4b2d      	ldr	r3, [pc, #180]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	091b      	lsrs	r3, r3, #4
 8002e0e:	f003 030f 	and.w	r3, r3, #15
 8002e12:	61fb      	str	r3, [r7, #28]
 8002e14:	4a2b      	ldr	r2, [pc, #172]	@ (8002ec4 <HAL_RCC_GetSysClockFreq+0x10c>)
 8002e16:	69fb      	ldr	r3, [r7, #28]
 8002e18:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e1c:	61fb      	str	r3, [r7, #28]
 8002e1e:	693b      	ldr	r3, [r7, #16]
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d10d      	bne.n	8002e40 <HAL_RCC_GetSysClockFreq+0x88>
 8002e24:	69fb      	ldr	r3, [r7, #28]
 8002e26:	61bb      	str	r3, [r7, #24]
 8002e28:	e00a      	b.n	8002e40 <HAL_RCC_GetSysClockFreq+0x88>
 8002e2a:	693b      	ldr	r3, [r7, #16]
 8002e2c:	2b04      	cmp	r3, #4
 8002e2e:	d102      	bne.n	8002e36 <HAL_RCC_GetSysClockFreq+0x7e>
 8002e30:	4b25      	ldr	r3, [pc, #148]	@ (8002ec8 <HAL_RCC_GetSysClockFreq+0x110>)
 8002e32:	61bb      	str	r3, [r7, #24]
 8002e34:	e004      	b.n	8002e40 <HAL_RCC_GetSysClockFreq+0x88>
 8002e36:	693b      	ldr	r3, [r7, #16]
 8002e38:	2b08      	cmp	r3, #8
 8002e3a:	d101      	bne.n	8002e40 <HAL_RCC_GetSysClockFreq+0x88>
 8002e3c:	4b23      	ldr	r3, [pc, #140]	@ (8002ecc <HAL_RCC_GetSysClockFreq+0x114>)
 8002e3e:	61bb      	str	r3, [r7, #24]
 8002e40:	693b      	ldr	r3, [r7, #16]
 8002e42:	2b0c      	cmp	r3, #12
 8002e44:	d134      	bne.n	8002eb0 <HAL_RCC_GetSysClockFreq+0xf8>
 8002e46:	4b1e      	ldr	r3, [pc, #120]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002e48:	68db      	ldr	r3, [r3, #12]
 8002e4a:	f003 0303 	and.w	r3, r3, #3
 8002e4e:	60bb      	str	r3, [r7, #8]
 8002e50:	68bb      	ldr	r3, [r7, #8]
 8002e52:	2b02      	cmp	r3, #2
 8002e54:	d003      	beq.n	8002e5e <HAL_RCC_GetSysClockFreq+0xa6>
 8002e56:	68bb      	ldr	r3, [r7, #8]
 8002e58:	2b03      	cmp	r3, #3
 8002e5a:	d003      	beq.n	8002e64 <HAL_RCC_GetSysClockFreq+0xac>
 8002e5c:	e005      	b.n	8002e6a <HAL_RCC_GetSysClockFreq+0xb2>
 8002e5e:	4b1a      	ldr	r3, [pc, #104]	@ (8002ec8 <HAL_RCC_GetSysClockFreq+0x110>)
 8002e60:	617b      	str	r3, [r7, #20]
 8002e62:	e005      	b.n	8002e70 <HAL_RCC_GetSysClockFreq+0xb8>
 8002e64:	4b19      	ldr	r3, [pc, #100]	@ (8002ecc <HAL_RCC_GetSysClockFreq+0x114>)
 8002e66:	617b      	str	r3, [r7, #20]
 8002e68:	e002      	b.n	8002e70 <HAL_RCC_GetSysClockFreq+0xb8>
 8002e6a:	69fb      	ldr	r3, [r7, #28]
 8002e6c:	617b      	str	r3, [r7, #20]
 8002e6e:	bf00      	nop
 8002e70:	4b13      	ldr	r3, [pc, #76]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002e72:	68db      	ldr	r3, [r3, #12]
 8002e74:	091b      	lsrs	r3, r3, #4
 8002e76:	f003 0307 	and.w	r3, r3, #7
 8002e7a:	3301      	adds	r3, #1
 8002e7c:	607b      	str	r3, [r7, #4]
 8002e7e:	4b10      	ldr	r3, [pc, #64]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002e80:	68db      	ldr	r3, [r3, #12]
 8002e82:	0a1b      	lsrs	r3, r3, #8
 8002e84:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002e88:	697a      	ldr	r2, [r7, #20]
 8002e8a:	fb03 f202 	mul.w	r2, r3, r2
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e94:	617b      	str	r3, [r7, #20]
 8002e96:	4b0a      	ldr	r3, [pc, #40]	@ (8002ec0 <HAL_RCC_GetSysClockFreq+0x108>)
 8002e98:	68db      	ldr	r3, [r3, #12]
 8002e9a:	0e5b      	lsrs	r3, r3, #25
 8002e9c:	f003 0303 	and.w	r3, r3, #3
 8002ea0:	3301      	adds	r3, #1
 8002ea2:	005b      	lsls	r3, r3, #1
 8002ea4:	603b      	str	r3, [r7, #0]
 8002ea6:	697a      	ldr	r2, [r7, #20]
 8002ea8:	683b      	ldr	r3, [r7, #0]
 8002eaa:	fbb2 f3f3 	udiv	r3, r2, r3
 8002eae:	61bb      	str	r3, [r7, #24]
 8002eb0:	69bb      	ldr	r3, [r7, #24]
 8002eb2:	4618      	mov	r0, r3
 8002eb4:	3724      	adds	r7, #36	@ 0x24
 8002eb6:	46bd      	mov	sp, r7
 8002eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ebc:	4770      	bx	lr
 8002ebe:	bf00      	nop
 8002ec0:	40021000 	.word	0x40021000
 8002ec4:	08009a3c 	.word	0x08009a3c
 8002ec8:	00f42400 	.word	0x00f42400
 8002ecc:	007a1200 	.word	0x007a1200

08002ed0 <HAL_RCC_GetHCLKFreq>:
 8002ed0:	b480      	push	{r7}
 8002ed2:	af00      	add	r7, sp, #0
 8002ed4:	4b03      	ldr	r3, [pc, #12]	@ (8002ee4 <HAL_RCC_GetHCLKFreq+0x14>)
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	4618      	mov	r0, r3
 8002eda:	46bd      	mov	sp, r7
 8002edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee0:	4770      	bx	lr
 8002ee2:	bf00      	nop
 8002ee4:	20000004 	.word	0x20000004

08002ee8 <HAL_RCC_GetPCLK1Freq>:
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	af00      	add	r7, sp, #0
 8002eec:	f7ff fff0 	bl	8002ed0 <HAL_RCC_GetHCLKFreq>
 8002ef0:	4602      	mov	r2, r0
 8002ef2:	4b06      	ldr	r3, [pc, #24]	@ (8002f0c <HAL_RCC_GetPCLK1Freq+0x24>)
 8002ef4:	689b      	ldr	r3, [r3, #8]
 8002ef6:	0a1b      	lsrs	r3, r3, #8
 8002ef8:	f003 0307 	and.w	r3, r3, #7
 8002efc:	4904      	ldr	r1, [pc, #16]	@ (8002f10 <HAL_RCC_GetPCLK1Freq+0x28>)
 8002efe:	5ccb      	ldrb	r3, [r1, r3]
 8002f00:	f003 031f 	and.w	r3, r3, #31
 8002f04:	fa22 f303 	lsr.w	r3, r2, r3
 8002f08:	4618      	mov	r0, r3
 8002f0a:	bd80      	pop	{r7, pc}
 8002f0c:	40021000 	.word	0x40021000
 8002f10:	08009a34 	.word	0x08009a34

08002f14 <HAL_RCC_GetPCLK2Freq>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	af00      	add	r7, sp, #0
 8002f18:	f7ff ffda 	bl	8002ed0 <HAL_RCC_GetHCLKFreq>
 8002f1c:	4602      	mov	r2, r0
 8002f1e:	4b06      	ldr	r3, [pc, #24]	@ (8002f38 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002f20:	689b      	ldr	r3, [r3, #8]
 8002f22:	0adb      	lsrs	r3, r3, #11
 8002f24:	f003 0307 	and.w	r3, r3, #7
 8002f28:	4904      	ldr	r1, [pc, #16]	@ (8002f3c <HAL_RCC_GetPCLK2Freq+0x28>)
 8002f2a:	5ccb      	ldrb	r3, [r1, r3]
 8002f2c:	f003 031f 	and.w	r3, r3, #31
 8002f30:	fa22 f303 	lsr.w	r3, r2, r3
 8002f34:	4618      	mov	r0, r3
 8002f36:	bd80      	pop	{r7, pc}
 8002f38:	40021000 	.word	0x40021000
 8002f3c:	08009a34 	.word	0x08009a34

08002f40 <HAL_RCC_GetClockConfig>:
 8002f40:	b480      	push	{r7}
 8002f42:	b083      	sub	sp, #12
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
 8002f48:	6039      	str	r1, [r7, #0]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	220f      	movs	r2, #15
 8002f4e:	601a      	str	r2, [r3, #0]
 8002f50:	4b12      	ldr	r3, [pc, #72]	@ (8002f9c <HAL_RCC_GetClockConfig+0x5c>)
 8002f52:	689b      	ldr	r3, [r3, #8]
 8002f54:	f003 0203 	and.w	r2, r3, #3
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	605a      	str	r2, [r3, #4]
 8002f5c:	4b0f      	ldr	r3, [pc, #60]	@ (8002f9c <HAL_RCC_GetClockConfig+0x5c>)
 8002f5e:	689b      	ldr	r3, [r3, #8]
 8002f60:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	609a      	str	r2, [r3, #8]
 8002f68:	4b0c      	ldr	r3, [pc, #48]	@ (8002f9c <HAL_RCC_GetClockConfig+0x5c>)
 8002f6a:	689b      	ldr	r3, [r3, #8]
 8002f6c:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	60da      	str	r2, [r3, #12]
 8002f74:	4b09      	ldr	r3, [pc, #36]	@ (8002f9c <HAL_RCC_GetClockConfig+0x5c>)
 8002f76:	689b      	ldr	r3, [r3, #8]
 8002f78:	08db      	lsrs	r3, r3, #3
 8002f7a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	611a      	str	r2, [r3, #16]
 8002f82:	4b07      	ldr	r3, [pc, #28]	@ (8002fa0 <HAL_RCC_GetClockConfig+0x60>)
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	f003 0207 	and.w	r2, r3, #7
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	601a      	str	r2, [r3, #0]
 8002f8e:	bf00      	nop
 8002f90:	370c      	adds	r7, #12
 8002f92:	46bd      	mov	sp, r7
 8002f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f98:	4770      	bx	lr
 8002f9a:	bf00      	nop
 8002f9c:	40021000 	.word	0x40021000
 8002fa0:	40022000 	.word	0x40022000

08002fa4 <RCC_SetFlashLatencyFromMSIRange>:
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b086      	sub	sp, #24
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
 8002fac:	2300      	movs	r3, #0
 8002fae:	613b      	str	r3, [r7, #16]
 8002fb0:	4b2a      	ldr	r3, [pc, #168]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fb2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fb4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d003      	beq.n	8002fc4 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8002fbc:	f7ff f9bc 	bl	8002338 <HAL_PWREx_GetVoltageRange>
 8002fc0:	6178      	str	r0, [r7, #20]
 8002fc2:	e014      	b.n	8002fee <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8002fc4:	4b25      	ldr	r3, [pc, #148]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fc6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fc8:	4a24      	ldr	r2, [pc, #144]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002fce:	6593      	str	r3, [r2, #88]	@ 0x58
 8002fd0:	4b22      	ldr	r3, [pc, #136]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fd2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fd4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002fd8:	60fb      	str	r3, [r7, #12]
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	f7ff f9ac 	bl	8002338 <HAL_PWREx_GetVoltageRange>
 8002fe0:	6178      	str	r0, [r7, #20]
 8002fe2:	4b1e      	ldr	r3, [pc, #120]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fe4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fe6:	4a1d      	ldr	r2, [pc, #116]	@ (800305c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002fe8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002fec:	6593      	str	r3, [r2, #88]	@ 0x58
 8002fee:	697b      	ldr	r3, [r7, #20]
 8002ff0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002ff4:	d10b      	bne.n	800300e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	2b80      	cmp	r3, #128	@ 0x80
 8002ffa:	d919      	bls.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2ba0      	cmp	r3, #160	@ 0xa0
 8003000:	d902      	bls.n	8003008 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8003002:	2302      	movs	r3, #2
 8003004:	613b      	str	r3, [r7, #16]
 8003006:	e013      	b.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003008:	2301      	movs	r3, #1
 800300a:	613b      	str	r3, [r7, #16]
 800300c:	e010      	b.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	2b80      	cmp	r3, #128	@ 0x80
 8003012:	d902      	bls.n	800301a <RCC_SetFlashLatencyFromMSIRange+0x76>
 8003014:	2303      	movs	r3, #3
 8003016:	613b      	str	r3, [r7, #16]
 8003018:	e00a      	b.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	2b80      	cmp	r3, #128	@ 0x80
 800301e:	d102      	bne.n	8003026 <RCC_SetFlashLatencyFromMSIRange+0x82>
 8003020:	2302      	movs	r3, #2
 8003022:	613b      	str	r3, [r7, #16]
 8003024:	e004      	b.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	2b70      	cmp	r3, #112	@ 0x70
 800302a:	d101      	bne.n	8003030 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800302c:	2301      	movs	r3, #1
 800302e:	613b      	str	r3, [r7, #16]
 8003030:	4b0b      	ldr	r3, [pc, #44]	@ (8003060 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	f023 0207 	bic.w	r2, r3, #7
 8003038:	4909      	ldr	r1, [pc, #36]	@ (8003060 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800303a:	693b      	ldr	r3, [r7, #16]
 800303c:	4313      	orrs	r3, r2
 800303e:	600b      	str	r3, [r1, #0]
 8003040:	4b07      	ldr	r3, [pc, #28]	@ (8003060 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	f003 0307 	and.w	r3, r3, #7
 8003048:	693a      	ldr	r2, [r7, #16]
 800304a:	429a      	cmp	r2, r3
 800304c:	d001      	beq.n	8003052 <RCC_SetFlashLatencyFromMSIRange+0xae>
 800304e:	2301      	movs	r3, #1
 8003050:	e000      	b.n	8003054 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8003052:	2300      	movs	r3, #0
 8003054:	4618      	mov	r0, r3
 8003056:	3718      	adds	r7, #24
 8003058:	46bd      	mov	sp, r7
 800305a:	bd80      	pop	{r7, pc}
 800305c:	40021000 	.word	0x40021000
 8003060:	40022000 	.word	0x40022000

08003064 <HAL_RCCEx_PeriphCLKConfig>:
 8003064:	b580      	push	{r7, lr}
 8003066:	b086      	sub	sp, #24
 8003068:	af00      	add	r7, sp, #0
 800306a:	6078      	str	r0, [r7, #4]
 800306c:	2300      	movs	r3, #0
 800306e:	74fb      	strb	r3, [r7, #19]
 8003070:	2300      	movs	r3, #0
 8003072:	74bb      	strb	r3, [r7, #18]
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800307c:	2b00      	cmp	r3, #0
 800307e:	d041      	beq.n	8003104 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003084:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8003088:	d02a      	beq.n	80030e0 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800308a:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800308e:	d824      	bhi.n	80030da <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003090:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003094:	d008      	beq.n	80030a8 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8003096:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800309a:	d81e      	bhi.n	80030da <HAL_RCCEx_PeriphCLKConfig+0x76>
 800309c:	2b00      	cmp	r3, #0
 800309e:	d00a      	beq.n	80030b6 <HAL_RCCEx_PeriphCLKConfig+0x52>
 80030a0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80030a4:	d010      	beq.n	80030c8 <HAL_RCCEx_PeriphCLKConfig+0x64>
 80030a6:	e018      	b.n	80030da <HAL_RCCEx_PeriphCLKConfig+0x76>
 80030a8:	4b86      	ldr	r3, [pc, #536]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80030aa:	68db      	ldr	r3, [r3, #12]
 80030ac:	4a85      	ldr	r2, [pc, #532]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80030ae:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80030b2:	60d3      	str	r3, [r2, #12]
 80030b4:	e015      	b.n	80030e2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	3304      	adds	r3, #4
 80030ba:	2100      	movs	r1, #0
 80030bc:	4618      	mov	r0, r3
 80030be:	f000 fabb 	bl	8003638 <RCCEx_PLLSAI1_Config>
 80030c2:	4603      	mov	r3, r0
 80030c4:	74fb      	strb	r3, [r7, #19]
 80030c6:	e00c      	b.n	80030e2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	3320      	adds	r3, #32
 80030cc:	2100      	movs	r1, #0
 80030ce:	4618      	mov	r0, r3
 80030d0:	f000 fba6 	bl	8003820 <RCCEx_PLLSAI2_Config>
 80030d4:	4603      	mov	r3, r0
 80030d6:	74fb      	strb	r3, [r7, #19]
 80030d8:	e003      	b.n	80030e2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80030da:	2301      	movs	r3, #1
 80030dc:	74fb      	strb	r3, [r7, #19]
 80030de:	e000      	b.n	80030e2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80030e0:	bf00      	nop
 80030e2:	7cfb      	ldrb	r3, [r7, #19]
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d10b      	bne.n	8003100 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 80030e8:	4b76      	ldr	r3, [pc, #472]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80030ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80030ee:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80030f6:	4973      	ldr	r1, [pc, #460]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80030f8:	4313      	orrs	r3, r2
 80030fa:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80030fe:	e001      	b.n	8003104 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003100:	7cfb      	ldrb	r3, [r7, #19]
 8003102:	74bb      	strb	r3, [r7, #18]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800310c:	2b00      	cmp	r3, #0
 800310e:	d041      	beq.n	8003194 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003114:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003118:	d02a      	beq.n	8003170 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800311a:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800311e:	d824      	bhi.n	800316a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003120:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003124:	d008      	beq.n	8003138 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003126:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800312a:	d81e      	bhi.n	800316a <HAL_RCCEx_PeriphCLKConfig+0x106>
 800312c:	2b00      	cmp	r3, #0
 800312e:	d00a      	beq.n	8003146 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8003130:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003134:	d010      	beq.n	8003158 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003136:	e018      	b.n	800316a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003138:	4b62      	ldr	r3, [pc, #392]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800313a:	68db      	ldr	r3, [r3, #12]
 800313c:	4a61      	ldr	r2, [pc, #388]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800313e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003142:	60d3      	str	r3, [r2, #12]
 8003144:	e015      	b.n	8003172 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	3304      	adds	r3, #4
 800314a:	2100      	movs	r1, #0
 800314c:	4618      	mov	r0, r3
 800314e:	f000 fa73 	bl	8003638 <RCCEx_PLLSAI1_Config>
 8003152:	4603      	mov	r3, r0
 8003154:	74fb      	strb	r3, [r7, #19]
 8003156:	e00c      	b.n	8003172 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	3320      	adds	r3, #32
 800315c:	2100      	movs	r1, #0
 800315e:	4618      	mov	r0, r3
 8003160:	f000 fb5e 	bl	8003820 <RCCEx_PLLSAI2_Config>
 8003164:	4603      	mov	r3, r0
 8003166:	74fb      	strb	r3, [r7, #19]
 8003168:	e003      	b.n	8003172 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800316a:	2301      	movs	r3, #1
 800316c:	74fb      	strb	r3, [r7, #19]
 800316e:	e000      	b.n	8003172 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003170:	bf00      	nop
 8003172:	7cfb      	ldrb	r3, [r7, #19]
 8003174:	2b00      	cmp	r3, #0
 8003176:	d10b      	bne.n	8003190 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8003178:	4b52      	ldr	r3, [pc, #328]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800317a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800317e:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003186:	494f      	ldr	r1, [pc, #316]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003188:	4313      	orrs	r3, r2
 800318a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800318e:	e001      	b.n	8003194 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8003190:	7cfb      	ldrb	r3, [r7, #19]
 8003192:	74bb      	strb	r3, [r7, #18]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800319c:	2b00      	cmp	r3, #0
 800319e:	f000 80a0 	beq.w	80032e2 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80031a2:	2300      	movs	r3, #0
 80031a4:	747b      	strb	r3, [r7, #17]
 80031a6:	4b47      	ldr	r3, [pc, #284]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80031a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80031aa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d101      	bne.n	80031b6 <HAL_RCCEx_PeriphCLKConfig+0x152>
 80031b2:	2301      	movs	r3, #1
 80031b4:	e000      	b.n	80031b8 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80031b6:	2300      	movs	r3, #0
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d00d      	beq.n	80031d8 <HAL_RCCEx_PeriphCLKConfig+0x174>
 80031bc:	4b41      	ldr	r3, [pc, #260]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80031be:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80031c0:	4a40      	ldr	r2, [pc, #256]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80031c2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80031c6:	6593      	str	r3, [r2, #88]	@ 0x58
 80031c8:	4b3e      	ldr	r3, [pc, #248]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80031ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80031cc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80031d0:	60bb      	str	r3, [r7, #8]
 80031d2:	68bb      	ldr	r3, [r7, #8]
 80031d4:	2301      	movs	r3, #1
 80031d6:	747b      	strb	r3, [r7, #17]
 80031d8:	4b3b      	ldr	r3, [pc, #236]	@ (80032c8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	4a3a      	ldr	r2, [pc, #232]	@ (80032c8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80031de:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80031e2:	6013      	str	r3, [r2, #0]
 80031e4:	f7fe fbe4 	bl	80019b0 <HAL_GetTick>
 80031e8:	60f8      	str	r0, [r7, #12]
 80031ea:	e009      	b.n	8003200 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80031ec:	f7fe fbe0 	bl	80019b0 <HAL_GetTick>
 80031f0:	4602      	mov	r2, r0
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	1ad3      	subs	r3, r2, r3
 80031f6:	2b02      	cmp	r3, #2
 80031f8:	d902      	bls.n	8003200 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80031fa:	2303      	movs	r3, #3
 80031fc:	74fb      	strb	r3, [r7, #19]
 80031fe:	e005      	b.n	800320c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8003200:	4b31      	ldr	r3, [pc, #196]	@ (80032c8 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003208:	2b00      	cmp	r3, #0
 800320a:	d0ef      	beq.n	80031ec <HAL_RCCEx_PeriphCLKConfig+0x188>
 800320c:	7cfb      	ldrb	r3, [r7, #19]
 800320e:	2b00      	cmp	r3, #0
 8003210:	d15c      	bne.n	80032cc <HAL_RCCEx_PeriphCLKConfig+0x268>
 8003212:	4b2c      	ldr	r3, [pc, #176]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003214:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003218:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800321c:	617b      	str	r3, [r7, #20]
 800321e:	697b      	ldr	r3, [r7, #20]
 8003220:	2b00      	cmp	r3, #0
 8003222:	d01f      	beq.n	8003264 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800322a:	697a      	ldr	r2, [r7, #20]
 800322c:	429a      	cmp	r2, r3
 800322e:	d019      	beq.n	8003264 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003230:	4b24      	ldr	r3, [pc, #144]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003232:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003236:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800323a:	617b      	str	r3, [r7, #20]
 800323c:	4b21      	ldr	r3, [pc, #132]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800323e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003242:	4a20      	ldr	r2, [pc, #128]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003244:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003248:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800324c:	4b1d      	ldr	r3, [pc, #116]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800324e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003252:	4a1c      	ldr	r2, [pc, #112]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003254:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003258:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800325c:	4a19      	ldr	r2, [pc, #100]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800325e:	697b      	ldr	r3, [r7, #20]
 8003260:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8003264:	697b      	ldr	r3, [r7, #20]
 8003266:	f003 0301 	and.w	r3, r3, #1
 800326a:	2b00      	cmp	r3, #0
 800326c:	d016      	beq.n	800329c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800326e:	f7fe fb9f 	bl	80019b0 <HAL_GetTick>
 8003272:	60f8      	str	r0, [r7, #12]
 8003274:	e00b      	b.n	800328e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8003276:	f7fe fb9b 	bl	80019b0 <HAL_GetTick>
 800327a:	4602      	mov	r2, r0
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	1ad3      	subs	r3, r2, r3
 8003280:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003284:	4293      	cmp	r3, r2
 8003286:	d902      	bls.n	800328e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8003288:	2303      	movs	r3, #3
 800328a:	74fb      	strb	r3, [r7, #19]
 800328c:	e006      	b.n	800329c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800328e:	4b0d      	ldr	r3, [pc, #52]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003290:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003294:	f003 0302 	and.w	r3, r3, #2
 8003298:	2b00      	cmp	r3, #0
 800329a:	d0ec      	beq.n	8003276 <HAL_RCCEx_PeriphCLKConfig+0x212>
 800329c:	7cfb      	ldrb	r3, [r7, #19]
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d10c      	bne.n	80032bc <HAL_RCCEx_PeriphCLKConfig+0x258>
 80032a2:	4b08      	ldr	r3, [pc, #32]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80032a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80032a8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80032b2:	4904      	ldr	r1, [pc, #16]	@ (80032c4 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80032b4:	4313      	orrs	r3, r2
 80032b6:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80032ba:	e009      	b.n	80032d0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 80032bc:	7cfb      	ldrb	r3, [r7, #19]
 80032be:	74bb      	strb	r3, [r7, #18]
 80032c0:	e006      	b.n	80032d0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 80032c2:	bf00      	nop
 80032c4:	40021000 	.word	0x40021000
 80032c8:	40007000 	.word	0x40007000
 80032cc:	7cfb      	ldrb	r3, [r7, #19]
 80032ce:	74bb      	strb	r3, [r7, #18]
 80032d0:	7c7b      	ldrb	r3, [r7, #17]
 80032d2:	2b01      	cmp	r3, #1
 80032d4:	d105      	bne.n	80032e2 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80032d6:	4b9e      	ldr	r3, [pc, #632]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80032d8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032da:	4a9d      	ldr	r2, [pc, #628]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80032dc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80032e0:	6593      	str	r3, [r2, #88]	@ 0x58
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	f003 0301 	and.w	r3, r3, #1
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d00a      	beq.n	8003304 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 80032ee:	4b98      	ldr	r3, [pc, #608]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80032f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80032f4:	f023 0203 	bic.w	r2, r3, #3
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80032fc:	4994      	ldr	r1, [pc, #592]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80032fe:	4313      	orrs	r3, r2
 8003300:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	f003 0302 	and.w	r3, r3, #2
 800330c:	2b00      	cmp	r3, #0
 800330e:	d00a      	beq.n	8003326 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 8003310:	4b8f      	ldr	r3, [pc, #572]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003312:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003316:	f023 020c 	bic.w	r2, r3, #12
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800331e:	498c      	ldr	r1, [pc, #560]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003320:	4313      	orrs	r3, r2
 8003322:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f003 0304 	and.w	r3, r3, #4
 800332e:	2b00      	cmp	r3, #0
 8003330:	d00a      	beq.n	8003348 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8003332:	4b87      	ldr	r3, [pc, #540]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003334:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003338:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003340:	4983      	ldr	r1, [pc, #524]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003342:	4313      	orrs	r3, r2
 8003344:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	f003 0308 	and.w	r3, r3, #8
 8003350:	2b00      	cmp	r3, #0
 8003352:	d00a      	beq.n	800336a <HAL_RCCEx_PeriphCLKConfig+0x306>
 8003354:	4b7e      	ldr	r3, [pc, #504]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003356:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800335a:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003362:	497b      	ldr	r1, [pc, #492]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003364:	4313      	orrs	r3, r2
 8003366:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f003 0310 	and.w	r3, r3, #16
 8003372:	2b00      	cmp	r3, #0
 8003374:	d00a      	beq.n	800338c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8003376:	4b76      	ldr	r3, [pc, #472]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003378:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800337c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003384:	4972      	ldr	r1, [pc, #456]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003386:	4313      	orrs	r3, r2
 8003388:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	f003 0320 	and.w	r3, r3, #32
 8003394:	2b00      	cmp	r3, #0
 8003396:	d00a      	beq.n	80033ae <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8003398:	4b6d      	ldr	r3, [pc, #436]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800339a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800339e:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80033a6:	496a      	ldr	r1, [pc, #424]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80033a8:	4313      	orrs	r3, r2
 80033aa:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d00a      	beq.n	80033d0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80033ba:	4b65      	ldr	r3, [pc, #404]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80033bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80033c0:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033c8:	4961      	ldr	r1, [pc, #388]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80033ca:	4313      	orrs	r3, r2
 80033cc:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80033d8:	2b00      	cmp	r3, #0
 80033da:	d00a      	beq.n	80033f2 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 80033dc:	4b5c      	ldr	r3, [pc, #368]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80033de:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80033e2:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80033ea:	4959      	ldr	r1, [pc, #356]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80033ec:	4313      	orrs	r3, r2
 80033ee:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80033fa:	2b00      	cmp	r3, #0
 80033fc:	d00a      	beq.n	8003414 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 80033fe:	4b54      	ldr	r3, [pc, #336]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003400:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003404:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800340c:	4950      	ldr	r1, [pc, #320]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800340e:	4313      	orrs	r3, r2
 8003410:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800341c:	2b00      	cmp	r3, #0
 800341e:	d00a      	beq.n	8003436 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8003420:	4b4b      	ldr	r3, [pc, #300]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003422:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003426:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800342e:	4948      	ldr	r1, [pc, #288]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003430:	4313      	orrs	r3, r2
 8003432:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800343e:	2b00      	cmp	r3, #0
 8003440:	d00a      	beq.n	8003458 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8003442:	4b43      	ldr	r3, [pc, #268]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003444:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003448:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003450:	493f      	ldr	r1, [pc, #252]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003452:	4313      	orrs	r3, r2
 8003454:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003460:	2b00      	cmp	r3, #0
 8003462:	d028      	beq.n	80034b6 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003464:	4b3a      	ldr	r3, [pc, #232]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003466:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800346a:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003472:	4937      	ldr	r1, [pc, #220]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003474:	4313      	orrs	r3, r2
 8003476:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800347e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003482:	d106      	bne.n	8003492 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003484:	4b32      	ldr	r3, [pc, #200]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003486:	68db      	ldr	r3, [r3, #12]
 8003488:	4a31      	ldr	r2, [pc, #196]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800348a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800348e:	60d3      	str	r3, [r2, #12]
 8003490:	e011      	b.n	80034b6 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003496:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800349a:	d10c      	bne.n	80034b6 <HAL_RCCEx_PeriphCLKConfig+0x452>
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	3304      	adds	r3, #4
 80034a0:	2101      	movs	r1, #1
 80034a2:	4618      	mov	r0, r3
 80034a4:	f000 f8c8 	bl	8003638 <RCCEx_PLLSAI1_Config>
 80034a8:	4603      	mov	r3, r0
 80034aa:	74fb      	strb	r3, [r7, #19]
 80034ac:	7cfb      	ldrb	r3, [r7, #19]
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d001      	beq.n	80034b6 <HAL_RCCEx_PeriphCLKConfig+0x452>
 80034b2:	7cfb      	ldrb	r3, [r7, #19]
 80034b4:	74bb      	strb	r3, [r7, #18]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80034be:	2b00      	cmp	r3, #0
 80034c0:	d028      	beq.n	8003514 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80034c2:	4b23      	ldr	r3, [pc, #140]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80034c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80034c8:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80034d0:	491f      	ldr	r1, [pc, #124]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80034d2:	4313      	orrs	r3, r2
 80034d4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80034dc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80034e0:	d106      	bne.n	80034f0 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80034e2:	4b1b      	ldr	r3, [pc, #108]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80034e4:	68db      	ldr	r3, [r3, #12]
 80034e6:	4a1a      	ldr	r2, [pc, #104]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80034e8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80034ec:	60d3      	str	r3, [r2, #12]
 80034ee:	e011      	b.n	8003514 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80034f4:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80034f8:	d10c      	bne.n	8003514 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	3304      	adds	r3, #4
 80034fe:	2101      	movs	r1, #1
 8003500:	4618      	mov	r0, r3
 8003502:	f000 f899 	bl	8003638 <RCCEx_PLLSAI1_Config>
 8003506:	4603      	mov	r3, r0
 8003508:	74fb      	strb	r3, [r7, #19]
 800350a:	7cfb      	ldrb	r3, [r7, #19]
 800350c:	2b00      	cmp	r3, #0
 800350e:	d001      	beq.n	8003514 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8003510:	7cfb      	ldrb	r3, [r7, #19]
 8003512:	74bb      	strb	r3, [r7, #18]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800351c:	2b00      	cmp	r3, #0
 800351e:	d02b      	beq.n	8003578 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003520:	4b0b      	ldr	r3, [pc, #44]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003522:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003526:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800352e:	4908      	ldr	r1, [pc, #32]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003530:	4313      	orrs	r3, r2
 8003532:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800353a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800353e:	d109      	bne.n	8003554 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8003540:	4b03      	ldr	r3, [pc, #12]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003542:	68db      	ldr	r3, [r3, #12]
 8003544:	4a02      	ldr	r2, [pc, #8]	@ (8003550 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8003546:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800354a:	60d3      	str	r3, [r2, #12]
 800354c:	e014      	b.n	8003578 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800354e:	bf00      	nop
 8003550:	40021000 	.word	0x40021000
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003558:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800355c:	d10c      	bne.n	8003578 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	3304      	adds	r3, #4
 8003562:	2101      	movs	r1, #1
 8003564:	4618      	mov	r0, r3
 8003566:	f000 f867 	bl	8003638 <RCCEx_PLLSAI1_Config>
 800356a:	4603      	mov	r3, r0
 800356c:	74fb      	strb	r3, [r7, #19]
 800356e:	7cfb      	ldrb	r3, [r7, #19]
 8003570:	2b00      	cmp	r3, #0
 8003572:	d001      	beq.n	8003578 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8003574:	7cfb      	ldrb	r3, [r7, #19]
 8003576:	74bb      	strb	r3, [r7, #18]
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003580:	2b00      	cmp	r3, #0
 8003582:	d02f      	beq.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8003584:	4b2b      	ldr	r3, [pc, #172]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003586:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800358a:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003592:	4928      	ldr	r1, [pc, #160]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003594:	4313      	orrs	r3, r2
 8003596:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800359e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80035a2:	d10d      	bne.n	80035c0 <HAL_RCCEx_PeriphCLKConfig+0x55c>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	3304      	adds	r3, #4
 80035a8:	2102      	movs	r1, #2
 80035aa:	4618      	mov	r0, r3
 80035ac:	f000 f844 	bl	8003638 <RCCEx_PLLSAI1_Config>
 80035b0:	4603      	mov	r3, r0
 80035b2:	74fb      	strb	r3, [r7, #19]
 80035b4:	7cfb      	ldrb	r3, [r7, #19]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d014      	beq.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 80035ba:	7cfb      	ldrb	r3, [r7, #19]
 80035bc:	74bb      	strb	r3, [r7, #18]
 80035be:	e011      	b.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80035c4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80035c8:	d10c      	bne.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	3320      	adds	r3, #32
 80035ce:	2102      	movs	r1, #2
 80035d0:	4618      	mov	r0, r3
 80035d2:	f000 f925 	bl	8003820 <RCCEx_PLLSAI2_Config>
 80035d6:	4603      	mov	r3, r0
 80035d8:	74fb      	strb	r3, [r7, #19]
 80035da:	7cfb      	ldrb	r3, [r7, #19]
 80035dc:	2b00      	cmp	r3, #0
 80035de:	d001      	beq.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x580>
 80035e0:	7cfb      	ldrb	r3, [r7, #19]
 80035e2:	74bb      	strb	r3, [r7, #18]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d00a      	beq.n	8003606 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 80035f0:	4b10      	ldr	r3, [pc, #64]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80035f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80035f6:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80035fe:	490d      	ldr	r1, [pc, #52]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003600:	4313      	orrs	r3, r2
 8003602:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800360e:	2b00      	cmp	r3, #0
 8003610:	d00b      	beq.n	800362a <HAL_RCCEx_PeriphCLKConfig+0x5c6>
 8003612:	4b08      	ldr	r3, [pc, #32]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003614:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003618:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003622:	4904      	ldr	r1, [pc, #16]	@ (8003634 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8003624:	4313      	orrs	r3, r2
 8003626:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800362a:	7cbb      	ldrb	r3, [r7, #18]
 800362c:	4618      	mov	r0, r3
 800362e:	3718      	adds	r7, #24
 8003630:	46bd      	mov	sp, r7
 8003632:	bd80      	pop	{r7, pc}
 8003634:	40021000 	.word	0x40021000

08003638 <RCCEx_PLLSAI1_Config>:
 8003638:	b580      	push	{r7, lr}
 800363a:	b084      	sub	sp, #16
 800363c:	af00      	add	r7, sp, #0
 800363e:	6078      	str	r0, [r7, #4]
 8003640:	6039      	str	r1, [r7, #0]
 8003642:	2300      	movs	r3, #0
 8003644:	73fb      	strb	r3, [r7, #15]
 8003646:	4b75      	ldr	r3, [pc, #468]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003648:	68db      	ldr	r3, [r3, #12]
 800364a:	f003 0303 	and.w	r3, r3, #3
 800364e:	2b00      	cmp	r3, #0
 8003650:	d018      	beq.n	8003684 <RCCEx_PLLSAI1_Config+0x4c>
 8003652:	4b72      	ldr	r3, [pc, #456]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003654:	68db      	ldr	r3, [r3, #12]
 8003656:	f003 0203 	and.w	r2, r3, #3
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	429a      	cmp	r2, r3
 8003660:	d10d      	bne.n	800367e <RCCEx_PLLSAI1_Config+0x46>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	681b      	ldr	r3, [r3, #0]
 8003666:	2b00      	cmp	r3, #0
 8003668:	d009      	beq.n	800367e <RCCEx_PLLSAI1_Config+0x46>
 800366a:	4b6c      	ldr	r3, [pc, #432]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800366c:	68db      	ldr	r3, [r3, #12]
 800366e:	091b      	lsrs	r3, r3, #4
 8003670:	f003 0307 	and.w	r3, r3, #7
 8003674:	1c5a      	adds	r2, r3, #1
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	685b      	ldr	r3, [r3, #4]
 800367a:	429a      	cmp	r2, r3
 800367c:	d047      	beq.n	800370e <RCCEx_PLLSAI1_Config+0xd6>
 800367e:	2301      	movs	r3, #1
 8003680:	73fb      	strb	r3, [r7, #15]
 8003682:	e044      	b.n	800370e <RCCEx_PLLSAI1_Config+0xd6>
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	2b03      	cmp	r3, #3
 800368a:	d018      	beq.n	80036be <RCCEx_PLLSAI1_Config+0x86>
 800368c:	2b03      	cmp	r3, #3
 800368e:	d825      	bhi.n	80036dc <RCCEx_PLLSAI1_Config+0xa4>
 8003690:	2b01      	cmp	r3, #1
 8003692:	d002      	beq.n	800369a <RCCEx_PLLSAI1_Config+0x62>
 8003694:	2b02      	cmp	r3, #2
 8003696:	d009      	beq.n	80036ac <RCCEx_PLLSAI1_Config+0x74>
 8003698:	e020      	b.n	80036dc <RCCEx_PLLSAI1_Config+0xa4>
 800369a:	4b60      	ldr	r3, [pc, #384]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	f003 0302 	and.w	r3, r3, #2
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	d11d      	bne.n	80036e2 <RCCEx_PLLSAI1_Config+0xaa>
 80036a6:	2301      	movs	r3, #1
 80036a8:	73fb      	strb	r3, [r7, #15]
 80036aa:	e01a      	b.n	80036e2 <RCCEx_PLLSAI1_Config+0xaa>
 80036ac:	4b5b      	ldr	r3, [pc, #364]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80036b4:	2b00      	cmp	r3, #0
 80036b6:	d116      	bne.n	80036e6 <RCCEx_PLLSAI1_Config+0xae>
 80036b8:	2301      	movs	r3, #1
 80036ba:	73fb      	strb	r3, [r7, #15]
 80036bc:	e013      	b.n	80036e6 <RCCEx_PLLSAI1_Config+0xae>
 80036be:	4b57      	ldr	r3, [pc, #348]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d10f      	bne.n	80036ea <RCCEx_PLLSAI1_Config+0xb2>
 80036ca:	4b54      	ldr	r3, [pc, #336]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d109      	bne.n	80036ea <RCCEx_PLLSAI1_Config+0xb2>
 80036d6:	2301      	movs	r3, #1
 80036d8:	73fb      	strb	r3, [r7, #15]
 80036da:	e006      	b.n	80036ea <RCCEx_PLLSAI1_Config+0xb2>
 80036dc:	2301      	movs	r3, #1
 80036de:	73fb      	strb	r3, [r7, #15]
 80036e0:	e004      	b.n	80036ec <RCCEx_PLLSAI1_Config+0xb4>
 80036e2:	bf00      	nop
 80036e4:	e002      	b.n	80036ec <RCCEx_PLLSAI1_Config+0xb4>
 80036e6:	bf00      	nop
 80036e8:	e000      	b.n	80036ec <RCCEx_PLLSAI1_Config+0xb4>
 80036ea:	bf00      	nop
 80036ec:	7bfb      	ldrb	r3, [r7, #15]
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d10d      	bne.n	800370e <RCCEx_PLLSAI1_Config+0xd6>
 80036f2:	4b4a      	ldr	r3, [pc, #296]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80036f4:	68db      	ldr	r3, [r3, #12]
 80036f6:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	6819      	ldr	r1, [r3, #0]
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	685b      	ldr	r3, [r3, #4]
 8003702:	3b01      	subs	r3, #1
 8003704:	011b      	lsls	r3, r3, #4
 8003706:	430b      	orrs	r3, r1
 8003708:	4944      	ldr	r1, [pc, #272]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800370a:	4313      	orrs	r3, r2
 800370c:	60cb      	str	r3, [r1, #12]
 800370e:	7bfb      	ldrb	r3, [r7, #15]
 8003710:	2b00      	cmp	r3, #0
 8003712:	d17d      	bne.n	8003810 <RCCEx_PLLSAI1_Config+0x1d8>
 8003714:	4b41      	ldr	r3, [pc, #260]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	4a40      	ldr	r2, [pc, #256]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800371a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800371e:	6013      	str	r3, [r2, #0]
 8003720:	f7fe f946 	bl	80019b0 <HAL_GetTick>
 8003724:	60b8      	str	r0, [r7, #8]
 8003726:	e009      	b.n	800373c <RCCEx_PLLSAI1_Config+0x104>
 8003728:	f7fe f942 	bl	80019b0 <HAL_GetTick>
 800372c:	4602      	mov	r2, r0
 800372e:	68bb      	ldr	r3, [r7, #8]
 8003730:	1ad3      	subs	r3, r2, r3
 8003732:	2b02      	cmp	r3, #2
 8003734:	d902      	bls.n	800373c <RCCEx_PLLSAI1_Config+0x104>
 8003736:	2303      	movs	r3, #3
 8003738:	73fb      	strb	r3, [r7, #15]
 800373a:	e005      	b.n	8003748 <RCCEx_PLLSAI1_Config+0x110>
 800373c:	4b37      	ldr	r3, [pc, #220]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003744:	2b00      	cmp	r3, #0
 8003746:	d1ef      	bne.n	8003728 <RCCEx_PLLSAI1_Config+0xf0>
 8003748:	7bfb      	ldrb	r3, [r7, #15]
 800374a:	2b00      	cmp	r3, #0
 800374c:	d160      	bne.n	8003810 <RCCEx_PLLSAI1_Config+0x1d8>
 800374e:	683b      	ldr	r3, [r7, #0]
 8003750:	2b00      	cmp	r3, #0
 8003752:	d111      	bne.n	8003778 <RCCEx_PLLSAI1_Config+0x140>
 8003754:	4b31      	ldr	r3, [pc, #196]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003756:	691b      	ldr	r3, [r3, #16]
 8003758:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 800375c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003760:	687a      	ldr	r2, [r7, #4]
 8003762:	6892      	ldr	r2, [r2, #8]
 8003764:	0211      	lsls	r1, r2, #8
 8003766:	687a      	ldr	r2, [r7, #4]
 8003768:	68d2      	ldr	r2, [r2, #12]
 800376a:	0912      	lsrs	r2, r2, #4
 800376c:	0452      	lsls	r2, r2, #17
 800376e:	430a      	orrs	r2, r1
 8003770:	492a      	ldr	r1, [pc, #168]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003772:	4313      	orrs	r3, r2
 8003774:	610b      	str	r3, [r1, #16]
 8003776:	e027      	b.n	80037c8 <RCCEx_PLLSAI1_Config+0x190>
 8003778:	683b      	ldr	r3, [r7, #0]
 800377a:	2b01      	cmp	r3, #1
 800377c:	d112      	bne.n	80037a4 <RCCEx_PLLSAI1_Config+0x16c>
 800377e:	4b27      	ldr	r3, [pc, #156]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003780:	691b      	ldr	r3, [r3, #16]
 8003782:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8003786:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 800378a:	687a      	ldr	r2, [r7, #4]
 800378c:	6892      	ldr	r2, [r2, #8]
 800378e:	0211      	lsls	r1, r2, #8
 8003790:	687a      	ldr	r2, [r7, #4]
 8003792:	6912      	ldr	r2, [r2, #16]
 8003794:	0852      	lsrs	r2, r2, #1
 8003796:	3a01      	subs	r2, #1
 8003798:	0552      	lsls	r2, r2, #21
 800379a:	430a      	orrs	r2, r1
 800379c:	491f      	ldr	r1, [pc, #124]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800379e:	4313      	orrs	r3, r2
 80037a0:	610b      	str	r3, [r1, #16]
 80037a2:	e011      	b.n	80037c8 <RCCEx_PLLSAI1_Config+0x190>
 80037a4:	4b1d      	ldr	r3, [pc, #116]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80037a6:	691b      	ldr	r3, [r3, #16]
 80037a8:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 80037ac:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80037b0:	687a      	ldr	r2, [r7, #4]
 80037b2:	6892      	ldr	r2, [r2, #8]
 80037b4:	0211      	lsls	r1, r2, #8
 80037b6:	687a      	ldr	r2, [r7, #4]
 80037b8:	6952      	ldr	r2, [r2, #20]
 80037ba:	0852      	lsrs	r2, r2, #1
 80037bc:	3a01      	subs	r2, #1
 80037be:	0652      	lsls	r2, r2, #25
 80037c0:	430a      	orrs	r2, r1
 80037c2:	4916      	ldr	r1, [pc, #88]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80037c4:	4313      	orrs	r3, r2
 80037c6:	610b      	str	r3, [r1, #16]
 80037c8:	4b14      	ldr	r3, [pc, #80]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	4a13      	ldr	r2, [pc, #76]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80037ce:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80037d2:	6013      	str	r3, [r2, #0]
 80037d4:	f7fe f8ec 	bl	80019b0 <HAL_GetTick>
 80037d8:	60b8      	str	r0, [r7, #8]
 80037da:	e009      	b.n	80037f0 <RCCEx_PLLSAI1_Config+0x1b8>
 80037dc:	f7fe f8e8 	bl	80019b0 <HAL_GetTick>
 80037e0:	4602      	mov	r2, r0
 80037e2:	68bb      	ldr	r3, [r7, #8]
 80037e4:	1ad3      	subs	r3, r2, r3
 80037e6:	2b02      	cmp	r3, #2
 80037e8:	d902      	bls.n	80037f0 <RCCEx_PLLSAI1_Config+0x1b8>
 80037ea:	2303      	movs	r3, #3
 80037ec:	73fb      	strb	r3, [r7, #15]
 80037ee:	e005      	b.n	80037fc <RCCEx_PLLSAI1_Config+0x1c4>
 80037f0:	4b0a      	ldr	r3, [pc, #40]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d0ef      	beq.n	80037dc <RCCEx_PLLSAI1_Config+0x1a4>
 80037fc:	7bfb      	ldrb	r3, [r7, #15]
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d106      	bne.n	8003810 <RCCEx_PLLSAI1_Config+0x1d8>
 8003802:	4b06      	ldr	r3, [pc, #24]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 8003804:	691a      	ldr	r2, [r3, #16]
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	699b      	ldr	r3, [r3, #24]
 800380a:	4904      	ldr	r1, [pc, #16]	@ (800381c <RCCEx_PLLSAI1_Config+0x1e4>)
 800380c:	4313      	orrs	r3, r2
 800380e:	610b      	str	r3, [r1, #16]
 8003810:	7bfb      	ldrb	r3, [r7, #15]
 8003812:	4618      	mov	r0, r3
 8003814:	3710      	adds	r7, #16
 8003816:	46bd      	mov	sp, r7
 8003818:	bd80      	pop	{r7, pc}
 800381a:	bf00      	nop
 800381c:	40021000 	.word	0x40021000

08003820 <RCCEx_PLLSAI2_Config>:
 8003820:	b580      	push	{r7, lr}
 8003822:	b084      	sub	sp, #16
 8003824:	af00      	add	r7, sp, #0
 8003826:	6078      	str	r0, [r7, #4]
 8003828:	6039      	str	r1, [r7, #0]
 800382a:	2300      	movs	r3, #0
 800382c:	73fb      	strb	r3, [r7, #15]
 800382e:	4b6a      	ldr	r3, [pc, #424]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003830:	68db      	ldr	r3, [r3, #12]
 8003832:	f003 0303 	and.w	r3, r3, #3
 8003836:	2b00      	cmp	r3, #0
 8003838:	d018      	beq.n	800386c <RCCEx_PLLSAI2_Config+0x4c>
 800383a:	4b67      	ldr	r3, [pc, #412]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800383c:	68db      	ldr	r3, [r3, #12]
 800383e:	f003 0203 	and.w	r2, r3, #3
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	429a      	cmp	r2, r3
 8003848:	d10d      	bne.n	8003866 <RCCEx_PLLSAI2_Config+0x46>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	2b00      	cmp	r3, #0
 8003850:	d009      	beq.n	8003866 <RCCEx_PLLSAI2_Config+0x46>
 8003852:	4b61      	ldr	r3, [pc, #388]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003854:	68db      	ldr	r3, [r3, #12]
 8003856:	091b      	lsrs	r3, r3, #4
 8003858:	f003 0307 	and.w	r3, r3, #7
 800385c:	1c5a      	adds	r2, r3, #1
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	685b      	ldr	r3, [r3, #4]
 8003862:	429a      	cmp	r2, r3
 8003864:	d047      	beq.n	80038f6 <RCCEx_PLLSAI2_Config+0xd6>
 8003866:	2301      	movs	r3, #1
 8003868:	73fb      	strb	r3, [r7, #15]
 800386a:	e044      	b.n	80038f6 <RCCEx_PLLSAI2_Config+0xd6>
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	2b03      	cmp	r3, #3
 8003872:	d018      	beq.n	80038a6 <RCCEx_PLLSAI2_Config+0x86>
 8003874:	2b03      	cmp	r3, #3
 8003876:	d825      	bhi.n	80038c4 <RCCEx_PLLSAI2_Config+0xa4>
 8003878:	2b01      	cmp	r3, #1
 800387a:	d002      	beq.n	8003882 <RCCEx_PLLSAI2_Config+0x62>
 800387c:	2b02      	cmp	r3, #2
 800387e:	d009      	beq.n	8003894 <RCCEx_PLLSAI2_Config+0x74>
 8003880:	e020      	b.n	80038c4 <RCCEx_PLLSAI2_Config+0xa4>
 8003882:	4b55      	ldr	r3, [pc, #340]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	f003 0302 	and.w	r3, r3, #2
 800388a:	2b00      	cmp	r3, #0
 800388c:	d11d      	bne.n	80038ca <RCCEx_PLLSAI2_Config+0xaa>
 800388e:	2301      	movs	r3, #1
 8003890:	73fb      	strb	r3, [r7, #15]
 8003892:	e01a      	b.n	80038ca <RCCEx_PLLSAI2_Config+0xaa>
 8003894:	4b50      	ldr	r3, [pc, #320]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800389c:	2b00      	cmp	r3, #0
 800389e:	d116      	bne.n	80038ce <RCCEx_PLLSAI2_Config+0xae>
 80038a0:	2301      	movs	r3, #1
 80038a2:	73fb      	strb	r3, [r7, #15]
 80038a4:	e013      	b.n	80038ce <RCCEx_PLLSAI2_Config+0xae>
 80038a6:	4b4c      	ldr	r3, [pc, #304]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d10f      	bne.n	80038d2 <RCCEx_PLLSAI2_Config+0xb2>
 80038b2:	4b49      	ldr	r3, [pc, #292]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d109      	bne.n	80038d2 <RCCEx_PLLSAI2_Config+0xb2>
 80038be:	2301      	movs	r3, #1
 80038c0:	73fb      	strb	r3, [r7, #15]
 80038c2:	e006      	b.n	80038d2 <RCCEx_PLLSAI2_Config+0xb2>
 80038c4:	2301      	movs	r3, #1
 80038c6:	73fb      	strb	r3, [r7, #15]
 80038c8:	e004      	b.n	80038d4 <RCCEx_PLLSAI2_Config+0xb4>
 80038ca:	bf00      	nop
 80038cc:	e002      	b.n	80038d4 <RCCEx_PLLSAI2_Config+0xb4>
 80038ce:	bf00      	nop
 80038d0:	e000      	b.n	80038d4 <RCCEx_PLLSAI2_Config+0xb4>
 80038d2:	bf00      	nop
 80038d4:	7bfb      	ldrb	r3, [r7, #15]
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d10d      	bne.n	80038f6 <RCCEx_PLLSAI2_Config+0xd6>
 80038da:	4b3f      	ldr	r3, [pc, #252]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80038dc:	68db      	ldr	r3, [r3, #12]
 80038de:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	6819      	ldr	r1, [r3, #0]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	685b      	ldr	r3, [r3, #4]
 80038ea:	3b01      	subs	r3, #1
 80038ec:	011b      	lsls	r3, r3, #4
 80038ee:	430b      	orrs	r3, r1
 80038f0:	4939      	ldr	r1, [pc, #228]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80038f2:	4313      	orrs	r3, r2
 80038f4:	60cb      	str	r3, [r1, #12]
 80038f6:	7bfb      	ldrb	r3, [r7, #15]
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d167      	bne.n	80039cc <RCCEx_PLLSAI2_Config+0x1ac>
 80038fc:	4b36      	ldr	r3, [pc, #216]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	4a35      	ldr	r2, [pc, #212]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003902:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003906:	6013      	str	r3, [r2, #0]
 8003908:	f7fe f852 	bl	80019b0 <HAL_GetTick>
 800390c:	60b8      	str	r0, [r7, #8]
 800390e:	e009      	b.n	8003924 <RCCEx_PLLSAI2_Config+0x104>
 8003910:	f7fe f84e 	bl	80019b0 <HAL_GetTick>
 8003914:	4602      	mov	r2, r0
 8003916:	68bb      	ldr	r3, [r7, #8]
 8003918:	1ad3      	subs	r3, r2, r3
 800391a:	2b02      	cmp	r3, #2
 800391c:	d902      	bls.n	8003924 <RCCEx_PLLSAI2_Config+0x104>
 800391e:	2303      	movs	r3, #3
 8003920:	73fb      	strb	r3, [r7, #15]
 8003922:	e005      	b.n	8003930 <RCCEx_PLLSAI2_Config+0x110>
 8003924:	4b2c      	ldr	r3, [pc, #176]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800392c:	2b00      	cmp	r3, #0
 800392e:	d1ef      	bne.n	8003910 <RCCEx_PLLSAI2_Config+0xf0>
 8003930:	7bfb      	ldrb	r3, [r7, #15]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d14a      	bne.n	80039cc <RCCEx_PLLSAI2_Config+0x1ac>
 8003936:	683b      	ldr	r3, [r7, #0]
 8003938:	2b00      	cmp	r3, #0
 800393a:	d111      	bne.n	8003960 <RCCEx_PLLSAI2_Config+0x140>
 800393c:	4b26      	ldr	r3, [pc, #152]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800393e:	695b      	ldr	r3, [r3, #20]
 8003940:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8003944:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003948:	687a      	ldr	r2, [r7, #4]
 800394a:	6892      	ldr	r2, [r2, #8]
 800394c:	0211      	lsls	r1, r2, #8
 800394e:	687a      	ldr	r2, [r7, #4]
 8003950:	68d2      	ldr	r2, [r2, #12]
 8003952:	0912      	lsrs	r2, r2, #4
 8003954:	0452      	lsls	r2, r2, #17
 8003956:	430a      	orrs	r2, r1
 8003958:	491f      	ldr	r1, [pc, #124]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800395a:	4313      	orrs	r3, r2
 800395c:	614b      	str	r3, [r1, #20]
 800395e:	e011      	b.n	8003984 <RCCEx_PLLSAI2_Config+0x164>
 8003960:	4b1d      	ldr	r3, [pc, #116]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003962:	695b      	ldr	r3, [r3, #20]
 8003964:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003968:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 800396c:	687a      	ldr	r2, [r7, #4]
 800396e:	6892      	ldr	r2, [r2, #8]
 8003970:	0211      	lsls	r1, r2, #8
 8003972:	687a      	ldr	r2, [r7, #4]
 8003974:	6912      	ldr	r2, [r2, #16]
 8003976:	0852      	lsrs	r2, r2, #1
 8003978:	3a01      	subs	r2, #1
 800397a:	0652      	lsls	r2, r2, #25
 800397c:	430a      	orrs	r2, r1
 800397e:	4916      	ldr	r1, [pc, #88]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003980:	4313      	orrs	r3, r2
 8003982:	614b      	str	r3, [r1, #20]
 8003984:	4b14      	ldr	r3, [pc, #80]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	4a13      	ldr	r2, [pc, #76]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 800398a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800398e:	6013      	str	r3, [r2, #0]
 8003990:	f7fe f80e 	bl	80019b0 <HAL_GetTick>
 8003994:	60b8      	str	r0, [r7, #8]
 8003996:	e009      	b.n	80039ac <RCCEx_PLLSAI2_Config+0x18c>
 8003998:	f7fe f80a 	bl	80019b0 <HAL_GetTick>
 800399c:	4602      	mov	r2, r0
 800399e:	68bb      	ldr	r3, [r7, #8]
 80039a0:	1ad3      	subs	r3, r2, r3
 80039a2:	2b02      	cmp	r3, #2
 80039a4:	d902      	bls.n	80039ac <RCCEx_PLLSAI2_Config+0x18c>
 80039a6:	2303      	movs	r3, #3
 80039a8:	73fb      	strb	r3, [r7, #15]
 80039aa:	e005      	b.n	80039b8 <RCCEx_PLLSAI2_Config+0x198>
 80039ac:	4b0a      	ldr	r3, [pc, #40]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d0ef      	beq.n	8003998 <RCCEx_PLLSAI2_Config+0x178>
 80039b8:	7bfb      	ldrb	r3, [r7, #15]
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d106      	bne.n	80039cc <RCCEx_PLLSAI2_Config+0x1ac>
 80039be:	4b06      	ldr	r3, [pc, #24]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80039c0:	695a      	ldr	r2, [r3, #20]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	695b      	ldr	r3, [r3, #20]
 80039c6:	4904      	ldr	r1, [pc, #16]	@ (80039d8 <RCCEx_PLLSAI2_Config+0x1b8>)
 80039c8:	4313      	orrs	r3, r2
 80039ca:	614b      	str	r3, [r1, #20]
 80039cc:	7bfb      	ldrb	r3, [r7, #15]
 80039ce:	4618      	mov	r0, r3
 80039d0:	3710      	adds	r7, #16
 80039d2:	46bd      	mov	sp, r7
 80039d4:	bd80      	pop	{r7, pc}
 80039d6:	bf00      	nop
 80039d8:	40021000 	.word	0x40021000

080039dc <HAL_TIM_Base_Init>:
 80039dc:	b580      	push	{r7, lr}
 80039de:	b082      	sub	sp, #8
 80039e0:	af00      	add	r7, sp, #0
 80039e2:	6078      	str	r0, [r7, #4]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d101      	bne.n	80039ee <HAL_TIM_Base_Init+0x12>
 80039ea:	2301      	movs	r3, #1
 80039ec:	e049      	b.n	8003a82 <HAL_TIM_Base_Init+0xa6>
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80039f4:	b2db      	uxtb	r3, r3
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d106      	bne.n	8003a08 <HAL_TIM_Base_Init+0x2c>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	2200      	movs	r2, #0
 80039fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a02:	6878      	ldr	r0, [r7, #4]
 8003a04:	f000 f841 	bl	8003a8a <HAL_TIM_Base_MspInit>
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	2202      	movs	r2, #2
 8003a0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681a      	ldr	r2, [r3, #0]
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	3304      	adds	r3, #4
 8003a18:	4619      	mov	r1, r3
 8003a1a:	4610      	mov	r0, r2
 8003a1c:	f000 f9da 	bl	8003dd4 <TIM_Base_SetConfig>
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	2201      	movs	r2, #1
 8003a24:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	2201      	movs	r2, #1
 8003a2c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2201      	movs	r2, #1
 8003a34:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	2201      	movs	r2, #1
 8003a3c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	2201      	movs	r2, #1
 8003a44:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	2201      	movs	r2, #1
 8003a4c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	2201      	movs	r2, #1
 8003a54:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	2201      	movs	r2, #1
 8003a5c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2201      	movs	r2, #1
 8003a64:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	2201      	movs	r2, #1
 8003a74:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	2201      	movs	r2, #1
 8003a7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a80:	2300      	movs	r3, #0
 8003a82:	4618      	mov	r0, r3
 8003a84:	3708      	adds	r7, #8
 8003a86:	46bd      	mov	sp, r7
 8003a88:	bd80      	pop	{r7, pc}

08003a8a <HAL_TIM_Base_MspInit>:
 8003a8a:	b480      	push	{r7}
 8003a8c:	b083      	sub	sp, #12
 8003a8e:	af00      	add	r7, sp, #0
 8003a90:	6078      	str	r0, [r7, #4]
 8003a92:	bf00      	nop
 8003a94:	370c      	adds	r7, #12
 8003a96:	46bd      	mov	sp, r7
 8003a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a9c:	4770      	bx	lr
	...

08003aa0 <HAL_TIM_Base_Start_IT>:
 8003aa0:	b480      	push	{r7}
 8003aa2:	b085      	sub	sp, #20
 8003aa4:	af00      	add	r7, sp, #0
 8003aa6:	6078      	str	r0, [r7, #4]
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003aae:	b2db      	uxtb	r3, r3
 8003ab0:	2b01      	cmp	r3, #1
 8003ab2:	d001      	beq.n	8003ab8 <HAL_TIM_Base_Start_IT+0x18>
 8003ab4:	2301      	movs	r3, #1
 8003ab6:	e04f      	b.n	8003b58 <HAL_TIM_Base_Start_IT+0xb8>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	2202      	movs	r2, #2
 8003abc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	68da      	ldr	r2, [r3, #12]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	f042 0201 	orr.w	r2, r2, #1
 8003ace:	60da      	str	r2, [r3, #12]
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	4a23      	ldr	r2, [pc, #140]	@ (8003b64 <HAL_TIM_Base_Start_IT+0xc4>)
 8003ad6:	4293      	cmp	r3, r2
 8003ad8:	d01d      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003ae2:	d018      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	4a1f      	ldr	r2, [pc, #124]	@ (8003b68 <HAL_TIM_Base_Start_IT+0xc8>)
 8003aea:	4293      	cmp	r3, r2
 8003aec:	d013      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	4a1e      	ldr	r2, [pc, #120]	@ (8003b6c <HAL_TIM_Base_Start_IT+0xcc>)
 8003af4:	4293      	cmp	r3, r2
 8003af6:	d00e      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	4a1c      	ldr	r2, [pc, #112]	@ (8003b70 <HAL_TIM_Base_Start_IT+0xd0>)
 8003afe:	4293      	cmp	r3, r2
 8003b00:	d009      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	4a1b      	ldr	r2, [pc, #108]	@ (8003b74 <HAL_TIM_Base_Start_IT+0xd4>)
 8003b08:	4293      	cmp	r3, r2
 8003b0a:	d004      	beq.n	8003b16 <HAL_TIM_Base_Start_IT+0x76>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	4a19      	ldr	r2, [pc, #100]	@ (8003b78 <HAL_TIM_Base_Start_IT+0xd8>)
 8003b12:	4293      	cmp	r3, r2
 8003b14:	d115      	bne.n	8003b42 <HAL_TIM_Base_Start_IT+0xa2>
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	689a      	ldr	r2, [r3, #8]
 8003b1c:	4b17      	ldr	r3, [pc, #92]	@ (8003b7c <HAL_TIM_Base_Start_IT+0xdc>)
 8003b1e:	4013      	ands	r3, r2
 8003b20:	60fb      	str	r3, [r7, #12]
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	2b06      	cmp	r3, #6
 8003b26:	d015      	beq.n	8003b54 <HAL_TIM_Base_Start_IT+0xb4>
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003b2e:	d011      	beq.n	8003b54 <HAL_TIM_Base_Start_IT+0xb4>
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	681a      	ldr	r2, [r3, #0]
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	f042 0201 	orr.w	r2, r2, #1
 8003b3e:	601a      	str	r2, [r3, #0]
 8003b40:	e008      	b.n	8003b54 <HAL_TIM_Base_Start_IT+0xb4>
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	681a      	ldr	r2, [r3, #0]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f042 0201 	orr.w	r2, r2, #1
 8003b50:	601a      	str	r2, [r3, #0]
 8003b52:	e000      	b.n	8003b56 <HAL_TIM_Base_Start_IT+0xb6>
 8003b54:	bf00      	nop
 8003b56:	2300      	movs	r3, #0
 8003b58:	4618      	mov	r0, r3
 8003b5a:	3714      	adds	r7, #20
 8003b5c:	46bd      	mov	sp, r7
 8003b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b62:	4770      	bx	lr
 8003b64:	40012c00 	.word	0x40012c00
 8003b68:	40000400 	.word	0x40000400
 8003b6c:	40000800 	.word	0x40000800
 8003b70:	40000c00 	.word	0x40000c00
 8003b74:	40013400 	.word	0x40013400
 8003b78:	40014000 	.word	0x40014000
 8003b7c:	00010007 	.word	0x00010007

08003b80 <HAL_TIM_IRQHandler>:
 8003b80:	b580      	push	{r7, lr}
 8003b82:	b084      	sub	sp, #16
 8003b84:	af00      	add	r7, sp, #0
 8003b86:	6078      	str	r0, [r7, #4]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	68db      	ldr	r3, [r3, #12]
 8003b8e:	60fb      	str	r3, [r7, #12]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	691b      	ldr	r3, [r3, #16]
 8003b96:	60bb      	str	r3, [r7, #8]
 8003b98:	68bb      	ldr	r3, [r7, #8]
 8003b9a:	f003 0302 	and.w	r3, r3, #2
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d020      	beq.n	8003be4 <HAL_TIM_IRQHandler+0x64>
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	f003 0302 	and.w	r3, r3, #2
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d01b      	beq.n	8003be4 <HAL_TIM_IRQHandler+0x64>
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f06f 0202 	mvn.w	r2, #2
 8003bb4:	611a      	str	r2, [r3, #16]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	2201      	movs	r2, #1
 8003bba:	771a      	strb	r2, [r3, #28]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	699b      	ldr	r3, [r3, #24]
 8003bc2:	f003 0303 	and.w	r3, r3, #3
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d003      	beq.n	8003bd2 <HAL_TIM_IRQHandler+0x52>
 8003bca:	6878      	ldr	r0, [r7, #4]
 8003bcc:	f000 f8e4 	bl	8003d98 <HAL_TIM_IC_CaptureCallback>
 8003bd0:	e005      	b.n	8003bde <HAL_TIM_IRQHandler+0x5e>
 8003bd2:	6878      	ldr	r0, [r7, #4]
 8003bd4:	f000 f8d6 	bl	8003d84 <HAL_TIM_OC_DelayElapsedCallback>
 8003bd8:	6878      	ldr	r0, [r7, #4]
 8003bda:	f000 f8e7 	bl	8003dac <HAL_TIM_PWM_PulseFinishedCallback>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	2200      	movs	r2, #0
 8003be2:	771a      	strb	r2, [r3, #28]
 8003be4:	68bb      	ldr	r3, [r7, #8]
 8003be6:	f003 0304 	and.w	r3, r3, #4
 8003bea:	2b00      	cmp	r3, #0
 8003bec:	d020      	beq.n	8003c30 <HAL_TIM_IRQHandler+0xb0>
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	f003 0304 	and.w	r3, r3, #4
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d01b      	beq.n	8003c30 <HAL_TIM_IRQHandler+0xb0>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	f06f 0204 	mvn.w	r2, #4
 8003c00:	611a      	str	r2, [r3, #16]
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	2202      	movs	r2, #2
 8003c06:	771a      	strb	r2, [r3, #28]
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	699b      	ldr	r3, [r3, #24]
 8003c0e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d003      	beq.n	8003c1e <HAL_TIM_IRQHandler+0x9e>
 8003c16:	6878      	ldr	r0, [r7, #4]
 8003c18:	f000 f8be 	bl	8003d98 <HAL_TIM_IC_CaptureCallback>
 8003c1c:	e005      	b.n	8003c2a <HAL_TIM_IRQHandler+0xaa>
 8003c1e:	6878      	ldr	r0, [r7, #4]
 8003c20:	f000 f8b0 	bl	8003d84 <HAL_TIM_OC_DelayElapsedCallback>
 8003c24:	6878      	ldr	r0, [r7, #4]
 8003c26:	f000 f8c1 	bl	8003dac <HAL_TIM_PWM_PulseFinishedCallback>
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	771a      	strb	r2, [r3, #28]
 8003c30:	68bb      	ldr	r3, [r7, #8]
 8003c32:	f003 0308 	and.w	r3, r3, #8
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	d020      	beq.n	8003c7c <HAL_TIM_IRQHandler+0xfc>
 8003c3a:	68fb      	ldr	r3, [r7, #12]
 8003c3c:	f003 0308 	and.w	r3, r3, #8
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d01b      	beq.n	8003c7c <HAL_TIM_IRQHandler+0xfc>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f06f 0208 	mvn.w	r2, #8
 8003c4c:	611a      	str	r2, [r3, #16]
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	2204      	movs	r2, #4
 8003c52:	771a      	strb	r2, [r3, #28]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	69db      	ldr	r3, [r3, #28]
 8003c5a:	f003 0303 	and.w	r3, r3, #3
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d003      	beq.n	8003c6a <HAL_TIM_IRQHandler+0xea>
 8003c62:	6878      	ldr	r0, [r7, #4]
 8003c64:	f000 f898 	bl	8003d98 <HAL_TIM_IC_CaptureCallback>
 8003c68:	e005      	b.n	8003c76 <HAL_TIM_IRQHandler+0xf6>
 8003c6a:	6878      	ldr	r0, [r7, #4]
 8003c6c:	f000 f88a 	bl	8003d84 <HAL_TIM_OC_DelayElapsedCallback>
 8003c70:	6878      	ldr	r0, [r7, #4]
 8003c72:	f000 f89b 	bl	8003dac <HAL_TIM_PWM_PulseFinishedCallback>
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	2200      	movs	r2, #0
 8003c7a:	771a      	strb	r2, [r3, #28]
 8003c7c:	68bb      	ldr	r3, [r7, #8]
 8003c7e:	f003 0310 	and.w	r3, r3, #16
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d020      	beq.n	8003cc8 <HAL_TIM_IRQHandler+0x148>
 8003c86:	68fb      	ldr	r3, [r7, #12]
 8003c88:	f003 0310 	and.w	r3, r3, #16
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d01b      	beq.n	8003cc8 <HAL_TIM_IRQHandler+0x148>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	f06f 0210 	mvn.w	r2, #16
 8003c98:	611a      	str	r2, [r3, #16]
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	2208      	movs	r2, #8
 8003c9e:	771a      	strb	r2, [r3, #28]
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	69db      	ldr	r3, [r3, #28]
 8003ca6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	d003      	beq.n	8003cb6 <HAL_TIM_IRQHandler+0x136>
 8003cae:	6878      	ldr	r0, [r7, #4]
 8003cb0:	f000 f872 	bl	8003d98 <HAL_TIM_IC_CaptureCallback>
 8003cb4:	e005      	b.n	8003cc2 <HAL_TIM_IRQHandler+0x142>
 8003cb6:	6878      	ldr	r0, [r7, #4]
 8003cb8:	f000 f864 	bl	8003d84 <HAL_TIM_OC_DelayElapsedCallback>
 8003cbc:	6878      	ldr	r0, [r7, #4]
 8003cbe:	f000 f875 	bl	8003dac <HAL_TIM_PWM_PulseFinishedCallback>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	2200      	movs	r2, #0
 8003cc6:	771a      	strb	r2, [r3, #28]
 8003cc8:	68bb      	ldr	r3, [r7, #8]
 8003cca:	f003 0301 	and.w	r3, r3, #1
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	d00c      	beq.n	8003cec <HAL_TIM_IRQHandler+0x16c>
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	f003 0301 	and.w	r3, r3, #1
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d007      	beq.n	8003cec <HAL_TIM_IRQHandler+0x16c>
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	f06f 0201 	mvn.w	r2, #1
 8003ce4:	611a      	str	r2, [r3, #16]
 8003ce6:	6878      	ldr	r0, [r7, #4]
 8003ce8:	f7fc fd84 	bl	80007f4 <HAL_TIM_PeriodElapsedCallback>
 8003cec:	68bb      	ldr	r3, [r7, #8]
 8003cee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d00c      	beq.n	8003d10 <HAL_TIM_IRQHandler+0x190>
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d007      	beq.n	8003d10 <HAL_TIM_IRQHandler+0x190>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003d08:	611a      	str	r2, [r3, #16]
 8003d0a:	6878      	ldr	r0, [r7, #4]
 8003d0c:	f000 f906 	bl	8003f1c <HAL_TIMEx_BreakCallback>
 8003d10:	68bb      	ldr	r3, [r7, #8]
 8003d12:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d00c      	beq.n	8003d34 <HAL_TIM_IRQHandler+0x1b4>
 8003d1a:	68fb      	ldr	r3, [r7, #12]
 8003d1c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	d007      	beq.n	8003d34 <HAL_TIM_IRQHandler+0x1b4>
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8003d2c:	611a      	str	r2, [r3, #16]
 8003d2e:	6878      	ldr	r0, [r7, #4]
 8003d30:	f000 f8fe 	bl	8003f30 <HAL_TIMEx_Break2Callback>
 8003d34:	68bb      	ldr	r3, [r7, #8]
 8003d36:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003d3a:	2b00      	cmp	r3, #0
 8003d3c:	d00c      	beq.n	8003d58 <HAL_TIM_IRQHandler+0x1d8>
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	d007      	beq.n	8003d58 <HAL_TIM_IRQHandler+0x1d8>
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003d50:	611a      	str	r2, [r3, #16]
 8003d52:	6878      	ldr	r0, [r7, #4]
 8003d54:	f000 f834 	bl	8003dc0 <HAL_TIM_TriggerCallback>
 8003d58:	68bb      	ldr	r3, [r7, #8]
 8003d5a:	f003 0320 	and.w	r3, r3, #32
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d00c      	beq.n	8003d7c <HAL_TIM_IRQHandler+0x1fc>
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	f003 0320 	and.w	r3, r3, #32
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d007      	beq.n	8003d7c <HAL_TIM_IRQHandler+0x1fc>
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f06f 0220 	mvn.w	r2, #32
 8003d74:	611a      	str	r2, [r3, #16]
 8003d76:	6878      	ldr	r0, [r7, #4]
 8003d78:	f000 f8c6 	bl	8003f08 <HAL_TIMEx_CommutCallback>
 8003d7c:	bf00      	nop
 8003d7e:	3710      	adds	r7, #16
 8003d80:	46bd      	mov	sp, r7
 8003d82:	bd80      	pop	{r7, pc}

08003d84 <HAL_TIM_OC_DelayElapsedCallback>:
 8003d84:	b480      	push	{r7}
 8003d86:	b083      	sub	sp, #12
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	6078      	str	r0, [r7, #4]
 8003d8c:	bf00      	nop
 8003d8e:	370c      	adds	r7, #12
 8003d90:	46bd      	mov	sp, r7
 8003d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d96:	4770      	bx	lr

08003d98 <HAL_TIM_IC_CaptureCallback>:
 8003d98:	b480      	push	{r7}
 8003d9a:	b083      	sub	sp, #12
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	6078      	str	r0, [r7, #4]
 8003da0:	bf00      	nop
 8003da2:	370c      	adds	r7, #12
 8003da4:	46bd      	mov	sp, r7
 8003da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003daa:	4770      	bx	lr

08003dac <HAL_TIM_PWM_PulseFinishedCallback>:
 8003dac:	b480      	push	{r7}
 8003dae:	b083      	sub	sp, #12
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	6078      	str	r0, [r7, #4]
 8003db4:	bf00      	nop
 8003db6:	370c      	adds	r7, #12
 8003db8:	46bd      	mov	sp, r7
 8003dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dbe:	4770      	bx	lr

08003dc0 <HAL_TIM_TriggerCallback>:
 8003dc0:	b480      	push	{r7}
 8003dc2:	b083      	sub	sp, #12
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	6078      	str	r0, [r7, #4]
 8003dc8:	bf00      	nop
 8003dca:	370c      	adds	r7, #12
 8003dcc:	46bd      	mov	sp, r7
 8003dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dd2:	4770      	bx	lr

08003dd4 <TIM_Base_SetConfig>:
 8003dd4:	b480      	push	{r7}
 8003dd6:	b085      	sub	sp, #20
 8003dd8:	af00      	add	r7, sp, #0
 8003dda:	6078      	str	r0, [r7, #4]
 8003ddc:	6039      	str	r1, [r7, #0]
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	60fb      	str	r3, [r7, #12]
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	4a40      	ldr	r2, [pc, #256]	@ (8003ee8 <TIM_Base_SetConfig+0x114>)
 8003de8:	4293      	cmp	r3, r2
 8003dea:	d013      	beq.n	8003e14 <TIM_Base_SetConfig+0x40>
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003df2:	d00f      	beq.n	8003e14 <TIM_Base_SetConfig+0x40>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	4a3d      	ldr	r2, [pc, #244]	@ (8003eec <TIM_Base_SetConfig+0x118>)
 8003df8:	4293      	cmp	r3, r2
 8003dfa:	d00b      	beq.n	8003e14 <TIM_Base_SetConfig+0x40>
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	4a3c      	ldr	r2, [pc, #240]	@ (8003ef0 <TIM_Base_SetConfig+0x11c>)
 8003e00:	4293      	cmp	r3, r2
 8003e02:	d007      	beq.n	8003e14 <TIM_Base_SetConfig+0x40>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	4a3b      	ldr	r2, [pc, #236]	@ (8003ef4 <TIM_Base_SetConfig+0x120>)
 8003e08:	4293      	cmp	r3, r2
 8003e0a:	d003      	beq.n	8003e14 <TIM_Base_SetConfig+0x40>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	4a3a      	ldr	r2, [pc, #232]	@ (8003ef8 <TIM_Base_SetConfig+0x124>)
 8003e10:	4293      	cmp	r3, r2
 8003e12:	d108      	bne.n	8003e26 <TIM_Base_SetConfig+0x52>
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003e1a:	60fb      	str	r3, [r7, #12]
 8003e1c:	683b      	ldr	r3, [r7, #0]
 8003e1e:	685b      	ldr	r3, [r3, #4]
 8003e20:	68fa      	ldr	r2, [r7, #12]
 8003e22:	4313      	orrs	r3, r2
 8003e24:	60fb      	str	r3, [r7, #12]
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	4a2f      	ldr	r2, [pc, #188]	@ (8003ee8 <TIM_Base_SetConfig+0x114>)
 8003e2a:	4293      	cmp	r3, r2
 8003e2c:	d01f      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003e34:	d01b      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	4a2c      	ldr	r2, [pc, #176]	@ (8003eec <TIM_Base_SetConfig+0x118>)
 8003e3a:	4293      	cmp	r3, r2
 8003e3c:	d017      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	4a2b      	ldr	r2, [pc, #172]	@ (8003ef0 <TIM_Base_SetConfig+0x11c>)
 8003e42:	4293      	cmp	r3, r2
 8003e44:	d013      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	4a2a      	ldr	r2, [pc, #168]	@ (8003ef4 <TIM_Base_SetConfig+0x120>)
 8003e4a:	4293      	cmp	r3, r2
 8003e4c:	d00f      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	4a29      	ldr	r2, [pc, #164]	@ (8003ef8 <TIM_Base_SetConfig+0x124>)
 8003e52:	4293      	cmp	r3, r2
 8003e54:	d00b      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	4a28      	ldr	r2, [pc, #160]	@ (8003efc <TIM_Base_SetConfig+0x128>)
 8003e5a:	4293      	cmp	r3, r2
 8003e5c:	d007      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	4a27      	ldr	r2, [pc, #156]	@ (8003f00 <TIM_Base_SetConfig+0x12c>)
 8003e62:	4293      	cmp	r3, r2
 8003e64:	d003      	beq.n	8003e6e <TIM_Base_SetConfig+0x9a>
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	4a26      	ldr	r2, [pc, #152]	@ (8003f04 <TIM_Base_SetConfig+0x130>)
 8003e6a:	4293      	cmp	r3, r2
 8003e6c:	d108      	bne.n	8003e80 <TIM_Base_SetConfig+0xac>
 8003e6e:	68fb      	ldr	r3, [r7, #12]
 8003e70:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003e74:	60fb      	str	r3, [r7, #12]
 8003e76:	683b      	ldr	r3, [r7, #0]
 8003e78:	68db      	ldr	r3, [r3, #12]
 8003e7a:	68fa      	ldr	r2, [r7, #12]
 8003e7c:	4313      	orrs	r3, r2
 8003e7e:	60fb      	str	r3, [r7, #12]
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003e86:	683b      	ldr	r3, [r7, #0]
 8003e88:	695b      	ldr	r3, [r3, #20]
 8003e8a:	4313      	orrs	r3, r2
 8003e8c:	60fb      	str	r3, [r7, #12]
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	68fa      	ldr	r2, [r7, #12]
 8003e92:	601a      	str	r2, [r3, #0]
 8003e94:	683b      	ldr	r3, [r7, #0]
 8003e96:	689a      	ldr	r2, [r3, #8]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003e9c:	683b      	ldr	r3, [r7, #0]
 8003e9e:	681a      	ldr	r2, [r3, #0]
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	4a10      	ldr	r2, [pc, #64]	@ (8003ee8 <TIM_Base_SetConfig+0x114>)
 8003ea8:	4293      	cmp	r3, r2
 8003eaa:	d00f      	beq.n	8003ecc <TIM_Base_SetConfig+0xf8>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	4a12      	ldr	r2, [pc, #72]	@ (8003ef8 <TIM_Base_SetConfig+0x124>)
 8003eb0:	4293      	cmp	r3, r2
 8003eb2:	d00b      	beq.n	8003ecc <TIM_Base_SetConfig+0xf8>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	4a11      	ldr	r2, [pc, #68]	@ (8003efc <TIM_Base_SetConfig+0x128>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d007      	beq.n	8003ecc <TIM_Base_SetConfig+0xf8>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	4a10      	ldr	r2, [pc, #64]	@ (8003f00 <TIM_Base_SetConfig+0x12c>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d003      	beq.n	8003ecc <TIM_Base_SetConfig+0xf8>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	4a0f      	ldr	r2, [pc, #60]	@ (8003f04 <TIM_Base_SetConfig+0x130>)
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d103      	bne.n	8003ed4 <TIM_Base_SetConfig+0x100>
 8003ecc:	683b      	ldr	r3, [r7, #0]
 8003ece:	691a      	ldr	r2, [r3, #16]
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	2201      	movs	r2, #1
 8003ed8:	615a      	str	r2, [r3, #20]
 8003eda:	bf00      	nop
 8003edc:	3714      	adds	r7, #20
 8003ede:	46bd      	mov	sp, r7
 8003ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ee4:	4770      	bx	lr
 8003ee6:	bf00      	nop
 8003ee8:	40012c00 	.word	0x40012c00
 8003eec:	40000400 	.word	0x40000400
 8003ef0:	40000800 	.word	0x40000800
 8003ef4:	40000c00 	.word	0x40000c00
 8003ef8:	40013400 	.word	0x40013400
 8003efc:	40014000 	.word	0x40014000
 8003f00:	40014400 	.word	0x40014400
 8003f04:	40014800 	.word	0x40014800

08003f08 <HAL_TIMEx_CommutCallback>:
 8003f08:	b480      	push	{r7}
 8003f0a:	b083      	sub	sp, #12
 8003f0c:	af00      	add	r7, sp, #0
 8003f0e:	6078      	str	r0, [r7, #4]
 8003f10:	bf00      	nop
 8003f12:	370c      	adds	r7, #12
 8003f14:	46bd      	mov	sp, r7
 8003f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f1a:	4770      	bx	lr

08003f1c <HAL_TIMEx_BreakCallback>:
 8003f1c:	b480      	push	{r7}
 8003f1e:	b083      	sub	sp, #12
 8003f20:	af00      	add	r7, sp, #0
 8003f22:	6078      	str	r0, [r7, #4]
 8003f24:	bf00      	nop
 8003f26:	370c      	adds	r7, #12
 8003f28:	46bd      	mov	sp, r7
 8003f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2e:	4770      	bx	lr

08003f30 <HAL_TIMEx_Break2Callback>:
 8003f30:	b480      	push	{r7}
 8003f32:	b083      	sub	sp, #12
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
 8003f38:	bf00      	nop
 8003f3a:	370c      	adds	r7, #12
 8003f3c:	46bd      	mov	sp, r7
 8003f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f42:	4770      	bx	lr

08003f44 <HAL_UART_Init>:
 8003f44:	b580      	push	{r7, lr}
 8003f46:	b082      	sub	sp, #8
 8003f48:	af00      	add	r7, sp, #0
 8003f4a:	6078      	str	r0, [r7, #4]
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d101      	bne.n	8003f56 <HAL_UART_Init+0x12>
 8003f52:	2301      	movs	r3, #1
 8003f54:	e040      	b.n	8003fd8 <HAL_UART_Init+0x94>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003f5a:	2b00      	cmp	r3, #0
 8003f5c:	d106      	bne.n	8003f6c <HAL_UART_Init+0x28>
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	2200      	movs	r2, #0
 8003f62:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8003f66:	6878      	ldr	r0, [r7, #4]
 8003f68:	f7fc fe1e 	bl	8000ba8 <HAL_UART_MspInit>
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	2224      	movs	r2, #36	@ 0x24
 8003f70:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	681a      	ldr	r2, [r3, #0]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	f022 0201 	bic.w	r2, r2, #1
 8003f80:	601a      	str	r2, [r3, #0]
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d002      	beq.n	8003f90 <HAL_UART_Init+0x4c>
 8003f8a:	6878      	ldr	r0, [r7, #4]
 8003f8c:	f000 fe3e 	bl	8004c0c <UART_AdvFeatureConfig>
 8003f90:	6878      	ldr	r0, [r7, #4]
 8003f92:	f000 fb83 	bl	800469c <UART_SetConfig>
 8003f96:	4603      	mov	r3, r0
 8003f98:	2b01      	cmp	r3, #1
 8003f9a:	d101      	bne.n	8003fa0 <HAL_UART_Init+0x5c>
 8003f9c:	2301      	movs	r3, #1
 8003f9e:	e01b      	b.n	8003fd8 <HAL_UART_Init+0x94>
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	685a      	ldr	r2, [r3, #4]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003fae:	605a      	str	r2, [r3, #4]
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	689a      	ldr	r2, [r3, #8]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003fbe:	609a      	str	r2, [r3, #8]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	681a      	ldr	r2, [r3, #0]
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f042 0201 	orr.w	r2, r2, #1
 8003fce:	601a      	str	r2, [r3, #0]
 8003fd0:	6878      	ldr	r0, [r7, #4]
 8003fd2:	f000 febd 	bl	8004d50 <UART_CheckIdleState>
 8003fd6:	4603      	mov	r3, r0
 8003fd8:	4618      	mov	r0, r3
 8003fda:	3708      	adds	r7, #8
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	bd80      	pop	{r7, pc}

08003fe0 <HAL_UART_Transmit_IT>:
 8003fe0:	b480      	push	{r7}
 8003fe2:	b08b      	sub	sp, #44	@ 0x2c
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	60f8      	str	r0, [r7, #12]
 8003fe8:	60b9      	str	r1, [r7, #8]
 8003fea:	4613      	mov	r3, r2
 8003fec:	80fb      	strh	r3, [r7, #6]
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ff2:	2b20      	cmp	r3, #32
 8003ff4:	d147      	bne.n	8004086 <HAL_UART_Transmit_IT+0xa6>
 8003ff6:	68bb      	ldr	r3, [r7, #8]
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d002      	beq.n	8004002 <HAL_UART_Transmit_IT+0x22>
 8003ffc:	88fb      	ldrh	r3, [r7, #6]
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d101      	bne.n	8004006 <HAL_UART_Transmit_IT+0x26>
 8004002:	2301      	movs	r3, #1
 8004004:	e040      	b.n	8004088 <HAL_UART_Transmit_IT+0xa8>
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	68ba      	ldr	r2, [r7, #8]
 800400a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	88fa      	ldrh	r2, [r7, #6]
 8004010:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	88fa      	ldrh	r2, [r7, #6]
 8004018:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	2200      	movs	r2, #0
 8004020:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	2200      	movs	r2, #0
 8004026:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	2221      	movs	r2, #33	@ 0x21
 800402e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	689b      	ldr	r3, [r3, #8]
 8004034:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004038:	d107      	bne.n	800404a <HAL_UART_Transmit_IT+0x6a>
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	691b      	ldr	r3, [r3, #16]
 800403e:	2b00      	cmp	r3, #0
 8004040:	d103      	bne.n	800404a <HAL_UART_Transmit_IT+0x6a>
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	4a13      	ldr	r2, [pc, #76]	@ (8004094 <HAL_UART_Transmit_IT+0xb4>)
 8004046:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004048:	e002      	b.n	8004050 <HAL_UART_Transmit_IT+0x70>
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	4a12      	ldr	r2, [pc, #72]	@ (8004098 <HAL_UART_Transmit_IT+0xb8>)
 800404e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	617b      	str	r3, [r7, #20]
 8004056:	697b      	ldr	r3, [r7, #20]
 8004058:	e853 3f00 	ldrex	r3, [r3]
 800405c:	613b      	str	r3, [r7, #16]
 800405e:	693b      	ldr	r3, [r7, #16]
 8004060:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004064:	627b      	str	r3, [r7, #36]	@ 0x24
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	461a      	mov	r2, r3
 800406c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800406e:	623b      	str	r3, [r7, #32]
 8004070:	61fa      	str	r2, [r7, #28]
 8004072:	69f9      	ldr	r1, [r7, #28]
 8004074:	6a3a      	ldr	r2, [r7, #32]
 8004076:	e841 2300 	strex	r3, r2, [r1]
 800407a:	61bb      	str	r3, [r7, #24]
 800407c:	69bb      	ldr	r3, [r7, #24]
 800407e:	2b00      	cmp	r3, #0
 8004080:	d1e6      	bne.n	8004050 <HAL_UART_Transmit_IT+0x70>
 8004082:	2300      	movs	r3, #0
 8004084:	e000      	b.n	8004088 <HAL_UART_Transmit_IT+0xa8>
 8004086:	2302      	movs	r3, #2
 8004088:	4618      	mov	r0, r3
 800408a:	372c      	adds	r7, #44	@ 0x2c
 800408c:	46bd      	mov	sp, r7
 800408e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004092:	4770      	bx	lr
 8004094:	08005119 	.word	0x08005119
 8004098:	08005063 	.word	0x08005063

0800409c <HAL_UART_IRQHandler>:
 800409c:	b580      	push	{r7, lr}
 800409e:	b0ba      	sub	sp, #232	@ 0xe8
 80040a0:	af00      	add	r7, sp, #0
 80040a2:	6078      	str	r0, [r7, #4]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	69db      	ldr	r3, [r3, #28]
 80040aa:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	689b      	ldr	r3, [r3, #8]
 80040be:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80040c2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 80040c6:	f640 030f 	movw	r3, #2063	@ 0x80f
 80040ca:	4013      	ands	r3, r2
 80040cc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80040d0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d115      	bne.n	8004104 <HAL_UART_IRQHandler+0x68>
 80040d8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80040dc:	f003 0320 	and.w	r3, r3, #32
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	d00f      	beq.n	8004104 <HAL_UART_IRQHandler+0x68>
 80040e4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80040e8:	f003 0320 	and.w	r3, r3, #32
 80040ec:	2b00      	cmp	r3, #0
 80040ee:	d009      	beq.n	8004104 <HAL_UART_IRQHandler+0x68>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	f000 82ae 	beq.w	8004656 <HAL_UART_IRQHandler+0x5ba>
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80040fe:	6878      	ldr	r0, [r7, #4]
 8004100:	4798      	blx	r3
 8004102:	e2a8      	b.n	8004656 <HAL_UART_IRQHandler+0x5ba>
 8004104:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004108:	2b00      	cmp	r3, #0
 800410a:	f000 8117 	beq.w	800433c <HAL_UART_IRQHandler+0x2a0>
 800410e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004112:	f003 0301 	and.w	r3, r3, #1
 8004116:	2b00      	cmp	r3, #0
 8004118:	d106      	bne.n	8004128 <HAL_UART_IRQHandler+0x8c>
 800411a:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 800411e:	4b85      	ldr	r3, [pc, #532]	@ (8004334 <HAL_UART_IRQHandler+0x298>)
 8004120:	4013      	ands	r3, r2
 8004122:	2b00      	cmp	r3, #0
 8004124:	f000 810a 	beq.w	800433c <HAL_UART_IRQHandler+0x2a0>
 8004128:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800412c:	f003 0301 	and.w	r3, r3, #1
 8004130:	2b00      	cmp	r3, #0
 8004132:	d011      	beq.n	8004158 <HAL_UART_IRQHandler+0xbc>
 8004134:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004138:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800413c:	2b00      	cmp	r3, #0
 800413e:	d00b      	beq.n	8004158 <HAL_UART_IRQHandler+0xbc>
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	2201      	movs	r2, #1
 8004146:	621a      	str	r2, [r3, #32]
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800414e:	f043 0201 	orr.w	r2, r3, #1
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004158:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800415c:	f003 0302 	and.w	r3, r3, #2
 8004160:	2b00      	cmp	r3, #0
 8004162:	d011      	beq.n	8004188 <HAL_UART_IRQHandler+0xec>
 8004164:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004168:	f003 0301 	and.w	r3, r3, #1
 800416c:	2b00      	cmp	r3, #0
 800416e:	d00b      	beq.n	8004188 <HAL_UART_IRQHandler+0xec>
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	2202      	movs	r2, #2
 8004176:	621a      	str	r2, [r3, #32]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800417e:	f043 0204 	orr.w	r2, r3, #4
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004188:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800418c:	f003 0304 	and.w	r3, r3, #4
 8004190:	2b00      	cmp	r3, #0
 8004192:	d011      	beq.n	80041b8 <HAL_UART_IRQHandler+0x11c>
 8004194:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004198:	f003 0301 	and.w	r3, r3, #1
 800419c:	2b00      	cmp	r3, #0
 800419e:	d00b      	beq.n	80041b8 <HAL_UART_IRQHandler+0x11c>
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	2204      	movs	r2, #4
 80041a6:	621a      	str	r2, [r3, #32]
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80041ae:	f043 0202 	orr.w	r2, r3, #2
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80041b8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80041bc:	f003 0308 	and.w	r3, r3, #8
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d017      	beq.n	80041f4 <HAL_UART_IRQHandler+0x158>
 80041c4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80041c8:	f003 0320 	and.w	r3, r3, #32
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d105      	bne.n	80041dc <HAL_UART_IRQHandler+0x140>
 80041d0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80041d4:	f003 0301 	and.w	r3, r3, #1
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d00b      	beq.n	80041f4 <HAL_UART_IRQHandler+0x158>
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	2208      	movs	r2, #8
 80041e2:	621a      	str	r2, [r3, #32]
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80041ea:	f043 0208 	orr.w	r2, r3, #8
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80041f4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80041f8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	d012      	beq.n	8004226 <HAL_UART_IRQHandler+0x18a>
 8004200:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004204:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8004208:	2b00      	cmp	r3, #0
 800420a:	d00c      	beq.n	8004226 <HAL_UART_IRQHandler+0x18a>
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004214:	621a      	str	r2, [r3, #32]
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800421c:	f043 0220 	orr.w	r2, r3, #32
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800422c:	2b00      	cmp	r3, #0
 800422e:	f000 8214 	beq.w	800465a <HAL_UART_IRQHandler+0x5be>
 8004232:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004236:	f003 0320 	and.w	r3, r3, #32
 800423a:	2b00      	cmp	r3, #0
 800423c:	d00d      	beq.n	800425a <HAL_UART_IRQHandler+0x1be>
 800423e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004242:	f003 0320 	and.w	r3, r3, #32
 8004246:	2b00      	cmp	r3, #0
 8004248:	d007      	beq.n	800425a <HAL_UART_IRQHandler+0x1be>
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800424e:	2b00      	cmp	r3, #0
 8004250:	d003      	beq.n	800425a <HAL_UART_IRQHandler+0x1be>
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004256:	6878      	ldr	r0, [r7, #4]
 8004258:	4798      	blx	r3
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004260:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	689b      	ldr	r3, [r3, #8]
 800426a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800426e:	2b40      	cmp	r3, #64	@ 0x40
 8004270:	d005      	beq.n	800427e <HAL_UART_IRQHandler+0x1e2>
 8004272:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8004276:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800427a:	2b00      	cmp	r3, #0
 800427c:	d04f      	beq.n	800431e <HAL_UART_IRQHandler+0x282>
 800427e:	6878      	ldr	r0, [r7, #4]
 8004280:	f000 fe75 	bl	8004f6e <UART_EndRxTransfer>
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	689b      	ldr	r3, [r3, #8]
 800428a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800428e:	2b40      	cmp	r3, #64	@ 0x40
 8004290:	d141      	bne.n	8004316 <HAL_UART_IRQHandler+0x27a>
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	3308      	adds	r3, #8
 8004298:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800429c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80042a0:	e853 3f00 	ldrex	r3, [r3]
 80042a4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80042a8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80042ac:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80042b0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	3308      	adds	r3, #8
 80042ba:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80042be:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80042c2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80042c6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80042ca:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80042ce:	e841 2300 	strex	r3, r2, [r1]
 80042d2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80042d6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d1d9      	bne.n	8004292 <HAL_UART_IRQHandler+0x1f6>
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d013      	beq.n	800430e <HAL_UART_IRQHandler+0x272>
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80042ea:	4a13      	ldr	r2, [pc, #76]	@ (8004338 <HAL_UART_IRQHandler+0x29c>)
 80042ec:	639a      	str	r2, [r3, #56]	@ 0x38
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80042f2:	4618      	mov	r0, r3
 80042f4:	f7fd fcac 	bl	8001c50 <HAL_DMA_Abort_IT>
 80042f8:	4603      	mov	r3, r0
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d017      	beq.n	800432e <HAL_UART_IRQHandler+0x292>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004302:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004304:	687a      	ldr	r2, [r7, #4]
 8004306:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8004308:	4610      	mov	r0, r2
 800430a:	4798      	blx	r3
 800430c:	e00f      	b.n	800432e <HAL_UART_IRQHandler+0x292>
 800430e:	6878      	ldr	r0, [r7, #4]
 8004310:	f000 f9ae 	bl	8004670 <HAL_UART_ErrorCallback>
 8004314:	e00b      	b.n	800432e <HAL_UART_IRQHandler+0x292>
 8004316:	6878      	ldr	r0, [r7, #4]
 8004318:	f000 f9aa 	bl	8004670 <HAL_UART_ErrorCallback>
 800431c:	e007      	b.n	800432e <HAL_UART_IRQHandler+0x292>
 800431e:	6878      	ldr	r0, [r7, #4]
 8004320:	f000 f9a6 	bl	8004670 <HAL_UART_ErrorCallback>
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	2200      	movs	r2, #0
 8004328:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800432c:	e195      	b.n	800465a <HAL_UART_IRQHandler+0x5be>
 800432e:	bf00      	nop
 8004330:	e193      	b.n	800465a <HAL_UART_IRQHandler+0x5be>
 8004332:	bf00      	nop
 8004334:	04000120 	.word	0x04000120
 8004338:	08005037 	.word	0x08005037
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004340:	2b01      	cmp	r3, #1
 8004342:	f040 814e 	bne.w	80045e2 <HAL_UART_IRQHandler+0x546>
 8004346:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800434a:	f003 0310 	and.w	r3, r3, #16
 800434e:	2b00      	cmp	r3, #0
 8004350:	f000 8147 	beq.w	80045e2 <HAL_UART_IRQHandler+0x546>
 8004354:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004358:	f003 0310 	and.w	r3, r3, #16
 800435c:	2b00      	cmp	r3, #0
 800435e:	f000 8140 	beq.w	80045e2 <HAL_UART_IRQHandler+0x546>
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	2210      	movs	r2, #16
 8004368:	621a      	str	r2, [r3, #32]
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	689b      	ldr	r3, [r3, #8]
 8004370:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004374:	2b40      	cmp	r3, #64	@ 0x40
 8004376:	f040 80b8 	bne.w	80044ea <HAL_UART_IRQHandler+0x44e>
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	685b      	ldr	r3, [r3, #4]
 8004382:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004386:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800438a:	2b00      	cmp	r3, #0
 800438c:	f000 8167 	beq.w	800465e <HAL_UART_IRQHandler+0x5c2>
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8004396:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800439a:	429a      	cmp	r2, r3
 800439c:	f080 815f 	bcs.w	800465e <HAL_UART_IRQHandler+0x5c2>
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80043a6:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	f003 0320 	and.w	r3, r3, #32
 80043b6:	2b00      	cmp	r3, #0
 80043b8:	f040 8086 	bne.w	80044c8 <HAL_UART_IRQHandler+0x42c>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80043c4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80043c8:	e853 3f00 	ldrex	r3, [r3]
 80043cc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80043d0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80043d4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80043d8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	461a      	mov	r2, r3
 80043e2:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80043e6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80043ea:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 80043ee:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80043f2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80043f6:	e841 2300 	strex	r3, r2, [r1]
 80043fa:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80043fe:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004402:	2b00      	cmp	r3, #0
 8004404:	d1da      	bne.n	80043bc <HAL_UART_IRQHandler+0x320>
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	3308      	adds	r3, #8
 800440c:	677b      	str	r3, [r7, #116]	@ 0x74
 800440e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004410:	e853 3f00 	ldrex	r3, [r3]
 8004414:	673b      	str	r3, [r7, #112]	@ 0x70
 8004416:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004418:	f023 0301 	bic.w	r3, r3, #1
 800441c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	3308      	adds	r3, #8
 8004426:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800442a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800442e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004430:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004432:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004436:	e841 2300 	strex	r3, r2, [r1]
 800443a:	67bb      	str	r3, [r7, #120]	@ 0x78
 800443c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800443e:	2b00      	cmp	r3, #0
 8004440:	d1e1      	bne.n	8004406 <HAL_UART_IRQHandler+0x36a>
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	3308      	adds	r3, #8
 8004448:	663b      	str	r3, [r7, #96]	@ 0x60
 800444a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800444c:	e853 3f00 	ldrex	r3, [r3]
 8004450:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004452:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004454:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004458:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	3308      	adds	r3, #8
 8004462:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004466:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004468:	66bb      	str	r3, [r7, #104]	@ 0x68
 800446a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800446c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800446e:	e841 2300 	strex	r3, r2, [r1]
 8004472:	667b      	str	r3, [r7, #100]	@ 0x64
 8004474:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004476:	2b00      	cmp	r3, #0
 8004478:	d1e3      	bne.n	8004442 <HAL_UART_IRQHandler+0x3a6>
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	2220      	movs	r2, #32
 800447e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	2200      	movs	r2, #0
 8004486:	661a      	str	r2, [r3, #96]	@ 0x60
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800448e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004490:	e853 3f00 	ldrex	r3, [r3]
 8004494:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004496:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004498:	f023 0310 	bic.w	r3, r3, #16
 800449c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	461a      	mov	r2, r3
 80044a6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80044aa:	65bb      	str	r3, [r7, #88]	@ 0x58
 80044ac:	657a      	str	r2, [r7, #84]	@ 0x54
 80044ae:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80044b0:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80044b2:	e841 2300 	strex	r3, r2, [r1]
 80044b6:	653b      	str	r3, [r7, #80]	@ 0x50
 80044b8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80044ba:	2b00      	cmp	r3, #0
 80044bc:	d1e4      	bne.n	8004488 <HAL_UART_IRQHandler+0x3ec>
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80044c2:	4618      	mov	r0, r3
 80044c4:	f7fd fb86 	bl	8001bd4 <HAL_DMA_Abort>
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	2202      	movs	r2, #2
 80044cc:	665a      	str	r2, [r3, #100]	@ 0x64
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80044da:	b29b      	uxth	r3, r3
 80044dc:	1ad3      	subs	r3, r2, r3
 80044de:	b29b      	uxth	r3, r3
 80044e0:	4619      	mov	r1, r3
 80044e2:	6878      	ldr	r0, [r7, #4]
 80044e4:	f000 f8ce 	bl	8004684 <HAL_UARTEx_RxEventCallback>
 80044e8:	e0b9      	b.n	800465e <HAL_UART_IRQHandler+0x5c2>
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	f8b3 2058 	ldrh.w	r2, [r3, #88]	@ 0x58
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80044f6:	b29b      	uxth	r3, r3
 80044f8:	1ad3      	subs	r3, r2, r3
 80044fa:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8004504:	b29b      	uxth	r3, r3
 8004506:	2b00      	cmp	r3, #0
 8004508:	f000 80ab 	beq.w	8004662 <HAL_UART_IRQHandler+0x5c6>
 800450c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004510:	2b00      	cmp	r3, #0
 8004512:	f000 80a6 	beq.w	8004662 <HAL_UART_IRQHandler+0x5c6>
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800451c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800451e:	e853 3f00 	ldrex	r3, [r3]
 8004522:	637b      	str	r3, [r7, #52]	@ 0x34
 8004524:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004526:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800452a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	461a      	mov	r2, r3
 8004534:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8004538:	647b      	str	r3, [r7, #68]	@ 0x44
 800453a:	643a      	str	r2, [r7, #64]	@ 0x40
 800453c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800453e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004540:	e841 2300 	strex	r3, r2, [r1]
 8004544:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004546:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004548:	2b00      	cmp	r3, #0
 800454a:	d1e4      	bne.n	8004516 <HAL_UART_IRQHandler+0x47a>
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	3308      	adds	r3, #8
 8004552:	627b      	str	r3, [r7, #36]	@ 0x24
 8004554:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004556:	e853 3f00 	ldrex	r3, [r3]
 800455a:	623b      	str	r3, [r7, #32]
 800455c:	6a3b      	ldr	r3, [r7, #32]
 800455e:	f023 0301 	bic.w	r3, r3, #1
 8004562:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	3308      	adds	r3, #8
 800456c:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004570:	633a      	str	r2, [r7, #48]	@ 0x30
 8004572:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004574:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004576:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004578:	e841 2300 	strex	r3, r2, [r1]
 800457c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800457e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004580:	2b00      	cmp	r3, #0
 8004582:	d1e3      	bne.n	800454c <HAL_UART_IRQHandler+0x4b0>
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	2220      	movs	r2, #32
 8004588:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	2200      	movs	r2, #0
 8004590:	661a      	str	r2, [r3, #96]	@ 0x60
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2200      	movs	r2, #0
 8004596:	669a      	str	r2, [r3, #104]	@ 0x68
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	613b      	str	r3, [r7, #16]
 800459e:	693b      	ldr	r3, [r7, #16]
 80045a0:	e853 3f00 	ldrex	r3, [r3]
 80045a4:	60fb      	str	r3, [r7, #12]
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	f023 0310 	bic.w	r3, r3, #16
 80045ac:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	461a      	mov	r2, r3
 80045b6:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80045ba:	61fb      	str	r3, [r7, #28]
 80045bc:	61ba      	str	r2, [r7, #24]
 80045be:	69b9      	ldr	r1, [r7, #24]
 80045c0:	69fa      	ldr	r2, [r7, #28]
 80045c2:	e841 2300 	strex	r3, r2, [r1]
 80045c6:	617b      	str	r3, [r7, #20]
 80045c8:	697b      	ldr	r3, [r7, #20]
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	d1e4      	bne.n	8004598 <HAL_UART_IRQHandler+0x4fc>
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	2202      	movs	r2, #2
 80045d2:	665a      	str	r2, [r3, #100]	@ 0x64
 80045d4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80045d8:	4619      	mov	r1, r3
 80045da:	6878      	ldr	r0, [r7, #4]
 80045dc:	f000 f852 	bl	8004684 <HAL_UARTEx_RxEventCallback>
 80045e0:	e03f      	b.n	8004662 <HAL_UART_IRQHandler+0x5c6>
 80045e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80045e6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	d00e      	beq.n	800460c <HAL_UART_IRQHandler+0x570>
 80045ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80045f2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d008      	beq.n	800460c <HAL_UART_IRQHandler+0x570>
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8004602:	621a      	str	r2, [r3, #32]
 8004604:	6878      	ldr	r0, [r7, #4]
 8004606:	f000 fe11 	bl	800522c <HAL_UARTEx_WakeupCallback>
 800460a:	e02d      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 800460c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004610:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004614:	2b00      	cmp	r3, #0
 8004616:	d00e      	beq.n	8004636 <HAL_UART_IRQHandler+0x59a>
 8004618:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800461c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004620:	2b00      	cmp	r3, #0
 8004622:	d008      	beq.n	8004636 <HAL_UART_IRQHandler+0x59a>
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004628:	2b00      	cmp	r3, #0
 800462a:	d01c      	beq.n	8004666 <HAL_UART_IRQHandler+0x5ca>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004630:	6878      	ldr	r0, [r7, #4]
 8004632:	4798      	blx	r3
 8004634:	e017      	b.n	8004666 <HAL_UART_IRQHandler+0x5ca>
 8004636:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800463a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800463e:	2b00      	cmp	r3, #0
 8004640:	d012      	beq.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 8004642:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004646:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800464a:	2b00      	cmp	r3, #0
 800464c:	d00c      	beq.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 800464e:	6878      	ldr	r0, [r7, #4]
 8004650:	f000 fdc2 	bl	80051d8 <UART_EndTransmit_IT>
 8004654:	e008      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 8004656:	bf00      	nop
 8004658:	e006      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 800465a:	bf00      	nop
 800465c:	e004      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 800465e:	bf00      	nop
 8004660:	e002      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 8004662:	bf00      	nop
 8004664:	e000      	b.n	8004668 <HAL_UART_IRQHandler+0x5cc>
 8004666:	bf00      	nop
 8004668:	37e8      	adds	r7, #232	@ 0xe8
 800466a:	46bd      	mov	sp, r7
 800466c:	bd80      	pop	{r7, pc}
 800466e:	bf00      	nop

08004670 <HAL_UART_ErrorCallback>:
 8004670:	b480      	push	{r7}
 8004672:	b083      	sub	sp, #12
 8004674:	af00      	add	r7, sp, #0
 8004676:	6078      	str	r0, [r7, #4]
 8004678:	bf00      	nop
 800467a:	370c      	adds	r7, #12
 800467c:	46bd      	mov	sp, r7
 800467e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004682:	4770      	bx	lr

08004684 <HAL_UARTEx_RxEventCallback>:
 8004684:	b480      	push	{r7}
 8004686:	b083      	sub	sp, #12
 8004688:	af00      	add	r7, sp, #0
 800468a:	6078      	str	r0, [r7, #4]
 800468c:	460b      	mov	r3, r1
 800468e:	807b      	strh	r3, [r7, #2]
 8004690:	bf00      	nop
 8004692:	370c      	adds	r7, #12
 8004694:	46bd      	mov	sp, r7
 8004696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800469a:	4770      	bx	lr

0800469c <UART_SetConfig>:
 800469c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80046a0:	b08a      	sub	sp, #40	@ 0x28
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	60f8      	str	r0, [r7, #12]
 80046a6:	2300      	movs	r3, #0
 80046a8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80046ac:	68fb      	ldr	r3, [r7, #12]
 80046ae:	689a      	ldr	r2, [r3, #8]
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	691b      	ldr	r3, [r3, #16]
 80046b4:	431a      	orrs	r2, r3
 80046b6:	68fb      	ldr	r3, [r7, #12]
 80046b8:	695b      	ldr	r3, [r3, #20]
 80046ba:	431a      	orrs	r2, r3
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	69db      	ldr	r3, [r3, #28]
 80046c0:	4313      	orrs	r3, r2
 80046c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	681a      	ldr	r2, [r3, #0]
 80046ca:	4ba4      	ldr	r3, [pc, #656]	@ (800495c <UART_SetConfig+0x2c0>)
 80046cc:	4013      	ands	r3, r2
 80046ce:	68fa      	ldr	r2, [r7, #12]
 80046d0:	6812      	ldr	r2, [r2, #0]
 80046d2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80046d4:	430b      	orrs	r3, r1
 80046d6:	6013      	str	r3, [r2, #0]
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	685b      	ldr	r3, [r3, #4]
 80046de:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80046e2:	68fb      	ldr	r3, [r7, #12]
 80046e4:	68da      	ldr	r2, [r3, #12]
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	430a      	orrs	r2, r1
 80046ec:	605a      	str	r2, [r3, #4]
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	699b      	ldr	r3, [r3, #24]
 80046f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80046f4:	68fb      	ldr	r3, [r7, #12]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a99      	ldr	r2, [pc, #612]	@ (8004960 <UART_SetConfig+0x2c4>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d004      	beq.n	8004708 <UART_SetConfig+0x6c>
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	6a1b      	ldr	r3, [r3, #32]
 8004702:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004704:	4313      	orrs	r3, r2
 8004706:	627b      	str	r3, [r7, #36]	@ 0x24
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	689b      	ldr	r3, [r3, #8]
 800470e:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004718:	430a      	orrs	r2, r1
 800471a:	609a      	str	r2, [r3, #8]
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4a90      	ldr	r2, [pc, #576]	@ (8004964 <UART_SetConfig+0x2c8>)
 8004722:	4293      	cmp	r3, r2
 8004724:	d126      	bne.n	8004774 <UART_SetConfig+0xd8>
 8004726:	4b90      	ldr	r3, [pc, #576]	@ (8004968 <UART_SetConfig+0x2cc>)
 8004728:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800472c:	f003 0303 	and.w	r3, r3, #3
 8004730:	2b03      	cmp	r3, #3
 8004732:	d81b      	bhi.n	800476c <UART_SetConfig+0xd0>
 8004734:	a201      	add	r2, pc, #4	@ (adr r2, 800473c <UART_SetConfig+0xa0>)
 8004736:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800473a:	bf00      	nop
 800473c:	0800474d 	.word	0x0800474d
 8004740:	0800475d 	.word	0x0800475d
 8004744:	08004755 	.word	0x08004755
 8004748:	08004765 	.word	0x08004765
 800474c:	2301      	movs	r3, #1
 800474e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004752:	e116      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004754:	2302      	movs	r3, #2
 8004756:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800475a:	e112      	b.n	8004982 <UART_SetConfig+0x2e6>
 800475c:	2304      	movs	r3, #4
 800475e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004762:	e10e      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004764:	2308      	movs	r3, #8
 8004766:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800476a:	e10a      	b.n	8004982 <UART_SetConfig+0x2e6>
 800476c:	2310      	movs	r3, #16
 800476e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004772:	e106      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	4a7c      	ldr	r2, [pc, #496]	@ (800496c <UART_SetConfig+0x2d0>)
 800477a:	4293      	cmp	r3, r2
 800477c:	d138      	bne.n	80047f0 <UART_SetConfig+0x154>
 800477e:	4b7a      	ldr	r3, [pc, #488]	@ (8004968 <UART_SetConfig+0x2cc>)
 8004780:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004784:	f003 030c 	and.w	r3, r3, #12
 8004788:	2b0c      	cmp	r3, #12
 800478a:	d82d      	bhi.n	80047e8 <UART_SetConfig+0x14c>
 800478c:	a201      	add	r2, pc, #4	@ (adr r2, 8004794 <UART_SetConfig+0xf8>)
 800478e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004792:	bf00      	nop
 8004794:	080047c9 	.word	0x080047c9
 8004798:	080047e9 	.word	0x080047e9
 800479c:	080047e9 	.word	0x080047e9
 80047a0:	080047e9 	.word	0x080047e9
 80047a4:	080047d9 	.word	0x080047d9
 80047a8:	080047e9 	.word	0x080047e9
 80047ac:	080047e9 	.word	0x080047e9
 80047b0:	080047e9 	.word	0x080047e9
 80047b4:	080047d1 	.word	0x080047d1
 80047b8:	080047e9 	.word	0x080047e9
 80047bc:	080047e9 	.word	0x080047e9
 80047c0:	080047e9 	.word	0x080047e9
 80047c4:	080047e1 	.word	0x080047e1
 80047c8:	2300      	movs	r3, #0
 80047ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80047ce:	e0d8      	b.n	8004982 <UART_SetConfig+0x2e6>
 80047d0:	2302      	movs	r3, #2
 80047d2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80047d6:	e0d4      	b.n	8004982 <UART_SetConfig+0x2e6>
 80047d8:	2304      	movs	r3, #4
 80047da:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80047de:	e0d0      	b.n	8004982 <UART_SetConfig+0x2e6>
 80047e0:	2308      	movs	r3, #8
 80047e2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80047e6:	e0cc      	b.n	8004982 <UART_SetConfig+0x2e6>
 80047e8:	2310      	movs	r3, #16
 80047ea:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80047ee:	e0c8      	b.n	8004982 <UART_SetConfig+0x2e6>
 80047f0:	68fb      	ldr	r3, [r7, #12]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	4a5e      	ldr	r2, [pc, #376]	@ (8004970 <UART_SetConfig+0x2d4>)
 80047f6:	4293      	cmp	r3, r2
 80047f8:	d125      	bne.n	8004846 <UART_SetConfig+0x1aa>
 80047fa:	4b5b      	ldr	r3, [pc, #364]	@ (8004968 <UART_SetConfig+0x2cc>)
 80047fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004800:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8004804:	2b30      	cmp	r3, #48	@ 0x30
 8004806:	d016      	beq.n	8004836 <UART_SetConfig+0x19a>
 8004808:	2b30      	cmp	r3, #48	@ 0x30
 800480a:	d818      	bhi.n	800483e <UART_SetConfig+0x1a2>
 800480c:	2b20      	cmp	r3, #32
 800480e:	d00a      	beq.n	8004826 <UART_SetConfig+0x18a>
 8004810:	2b20      	cmp	r3, #32
 8004812:	d814      	bhi.n	800483e <UART_SetConfig+0x1a2>
 8004814:	2b00      	cmp	r3, #0
 8004816:	d002      	beq.n	800481e <UART_SetConfig+0x182>
 8004818:	2b10      	cmp	r3, #16
 800481a:	d008      	beq.n	800482e <UART_SetConfig+0x192>
 800481c:	e00f      	b.n	800483e <UART_SetConfig+0x1a2>
 800481e:	2300      	movs	r3, #0
 8004820:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004824:	e0ad      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004826:	2302      	movs	r3, #2
 8004828:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800482c:	e0a9      	b.n	8004982 <UART_SetConfig+0x2e6>
 800482e:	2304      	movs	r3, #4
 8004830:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004834:	e0a5      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004836:	2308      	movs	r3, #8
 8004838:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800483c:	e0a1      	b.n	8004982 <UART_SetConfig+0x2e6>
 800483e:	2310      	movs	r3, #16
 8004840:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004844:	e09d      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	4a4a      	ldr	r2, [pc, #296]	@ (8004974 <UART_SetConfig+0x2d8>)
 800484c:	4293      	cmp	r3, r2
 800484e:	d125      	bne.n	800489c <UART_SetConfig+0x200>
 8004850:	4b45      	ldr	r3, [pc, #276]	@ (8004968 <UART_SetConfig+0x2cc>)
 8004852:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004856:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800485a:	2bc0      	cmp	r3, #192	@ 0xc0
 800485c:	d016      	beq.n	800488c <UART_SetConfig+0x1f0>
 800485e:	2bc0      	cmp	r3, #192	@ 0xc0
 8004860:	d818      	bhi.n	8004894 <UART_SetConfig+0x1f8>
 8004862:	2b80      	cmp	r3, #128	@ 0x80
 8004864:	d00a      	beq.n	800487c <UART_SetConfig+0x1e0>
 8004866:	2b80      	cmp	r3, #128	@ 0x80
 8004868:	d814      	bhi.n	8004894 <UART_SetConfig+0x1f8>
 800486a:	2b00      	cmp	r3, #0
 800486c:	d002      	beq.n	8004874 <UART_SetConfig+0x1d8>
 800486e:	2b40      	cmp	r3, #64	@ 0x40
 8004870:	d008      	beq.n	8004884 <UART_SetConfig+0x1e8>
 8004872:	e00f      	b.n	8004894 <UART_SetConfig+0x1f8>
 8004874:	2300      	movs	r3, #0
 8004876:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800487a:	e082      	b.n	8004982 <UART_SetConfig+0x2e6>
 800487c:	2302      	movs	r3, #2
 800487e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004882:	e07e      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004884:	2304      	movs	r3, #4
 8004886:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800488a:	e07a      	b.n	8004982 <UART_SetConfig+0x2e6>
 800488c:	2308      	movs	r3, #8
 800488e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004892:	e076      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004894:	2310      	movs	r3, #16
 8004896:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800489a:	e072      	b.n	8004982 <UART_SetConfig+0x2e6>
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	4a35      	ldr	r2, [pc, #212]	@ (8004978 <UART_SetConfig+0x2dc>)
 80048a2:	4293      	cmp	r3, r2
 80048a4:	d12a      	bne.n	80048fc <UART_SetConfig+0x260>
 80048a6:	4b30      	ldr	r3, [pc, #192]	@ (8004968 <UART_SetConfig+0x2cc>)
 80048a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80048ac:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80048b0:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80048b4:	d01a      	beq.n	80048ec <UART_SetConfig+0x250>
 80048b6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80048ba:	d81b      	bhi.n	80048f4 <UART_SetConfig+0x258>
 80048bc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80048c0:	d00c      	beq.n	80048dc <UART_SetConfig+0x240>
 80048c2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80048c6:	d815      	bhi.n	80048f4 <UART_SetConfig+0x258>
 80048c8:	2b00      	cmp	r3, #0
 80048ca:	d003      	beq.n	80048d4 <UART_SetConfig+0x238>
 80048cc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80048d0:	d008      	beq.n	80048e4 <UART_SetConfig+0x248>
 80048d2:	e00f      	b.n	80048f4 <UART_SetConfig+0x258>
 80048d4:	2300      	movs	r3, #0
 80048d6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80048da:	e052      	b.n	8004982 <UART_SetConfig+0x2e6>
 80048dc:	2302      	movs	r3, #2
 80048de:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80048e2:	e04e      	b.n	8004982 <UART_SetConfig+0x2e6>
 80048e4:	2304      	movs	r3, #4
 80048e6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80048ea:	e04a      	b.n	8004982 <UART_SetConfig+0x2e6>
 80048ec:	2308      	movs	r3, #8
 80048ee:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80048f2:	e046      	b.n	8004982 <UART_SetConfig+0x2e6>
 80048f4:	2310      	movs	r3, #16
 80048f6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80048fa:	e042      	b.n	8004982 <UART_SetConfig+0x2e6>
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	4a17      	ldr	r2, [pc, #92]	@ (8004960 <UART_SetConfig+0x2c4>)
 8004902:	4293      	cmp	r3, r2
 8004904:	d13a      	bne.n	800497c <UART_SetConfig+0x2e0>
 8004906:	4b18      	ldr	r3, [pc, #96]	@ (8004968 <UART_SetConfig+0x2cc>)
 8004908:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800490c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8004910:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8004914:	d01a      	beq.n	800494c <UART_SetConfig+0x2b0>
 8004916:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800491a:	d81b      	bhi.n	8004954 <UART_SetConfig+0x2b8>
 800491c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004920:	d00c      	beq.n	800493c <UART_SetConfig+0x2a0>
 8004922:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004926:	d815      	bhi.n	8004954 <UART_SetConfig+0x2b8>
 8004928:	2b00      	cmp	r3, #0
 800492a:	d003      	beq.n	8004934 <UART_SetConfig+0x298>
 800492c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004930:	d008      	beq.n	8004944 <UART_SetConfig+0x2a8>
 8004932:	e00f      	b.n	8004954 <UART_SetConfig+0x2b8>
 8004934:	2300      	movs	r3, #0
 8004936:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800493a:	e022      	b.n	8004982 <UART_SetConfig+0x2e6>
 800493c:	2302      	movs	r3, #2
 800493e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004942:	e01e      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004944:	2304      	movs	r3, #4
 8004946:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800494a:	e01a      	b.n	8004982 <UART_SetConfig+0x2e6>
 800494c:	2308      	movs	r3, #8
 800494e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004952:	e016      	b.n	8004982 <UART_SetConfig+0x2e6>
 8004954:	2310      	movs	r3, #16
 8004956:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800495a:	e012      	b.n	8004982 <UART_SetConfig+0x2e6>
 800495c:	efff69f3 	.word	0xefff69f3
 8004960:	40008000 	.word	0x40008000
 8004964:	40013800 	.word	0x40013800
 8004968:	40021000 	.word	0x40021000
 800496c:	40004400 	.word	0x40004400
 8004970:	40004800 	.word	0x40004800
 8004974:	40004c00 	.word	0x40004c00
 8004978:	40005000 	.word	0x40005000
 800497c:	2310      	movs	r3, #16
 800497e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	4a9f      	ldr	r2, [pc, #636]	@ (8004c04 <UART_SetConfig+0x568>)
 8004988:	4293      	cmp	r3, r2
 800498a:	d17a      	bne.n	8004a82 <UART_SetConfig+0x3e6>
 800498c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004990:	2b08      	cmp	r3, #8
 8004992:	d824      	bhi.n	80049de <UART_SetConfig+0x342>
 8004994:	a201      	add	r2, pc, #4	@ (adr r2, 800499c <UART_SetConfig+0x300>)
 8004996:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800499a:	bf00      	nop
 800499c:	080049c1 	.word	0x080049c1
 80049a0:	080049df 	.word	0x080049df
 80049a4:	080049c9 	.word	0x080049c9
 80049a8:	080049df 	.word	0x080049df
 80049ac:	080049cf 	.word	0x080049cf
 80049b0:	080049df 	.word	0x080049df
 80049b4:	080049df 	.word	0x080049df
 80049b8:	080049df 	.word	0x080049df
 80049bc:	080049d7 	.word	0x080049d7
 80049c0:	f7fe fa92 	bl	8002ee8 <HAL_RCC_GetPCLK1Freq>
 80049c4:	61f8      	str	r0, [r7, #28]
 80049c6:	e010      	b.n	80049ea <UART_SetConfig+0x34e>
 80049c8:	4b8f      	ldr	r3, [pc, #572]	@ (8004c08 <UART_SetConfig+0x56c>)
 80049ca:	61fb      	str	r3, [r7, #28]
 80049cc:	e00d      	b.n	80049ea <UART_SetConfig+0x34e>
 80049ce:	f7fe f9f3 	bl	8002db8 <HAL_RCC_GetSysClockFreq>
 80049d2:	61f8      	str	r0, [r7, #28]
 80049d4:	e009      	b.n	80049ea <UART_SetConfig+0x34e>
 80049d6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80049da:	61fb      	str	r3, [r7, #28]
 80049dc:	e005      	b.n	80049ea <UART_SetConfig+0x34e>
 80049de:	2300      	movs	r3, #0
 80049e0:	61fb      	str	r3, [r7, #28]
 80049e2:	2301      	movs	r3, #1
 80049e4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80049e8:	bf00      	nop
 80049ea:	69fb      	ldr	r3, [r7, #28]
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	f000 80fb 	beq.w	8004be8 <UART_SetConfig+0x54c>
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	685a      	ldr	r2, [r3, #4]
 80049f6:	4613      	mov	r3, r2
 80049f8:	005b      	lsls	r3, r3, #1
 80049fa:	4413      	add	r3, r2
 80049fc:	69fa      	ldr	r2, [r7, #28]
 80049fe:	429a      	cmp	r2, r3
 8004a00:	d305      	bcc.n	8004a0e <UART_SetConfig+0x372>
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	685b      	ldr	r3, [r3, #4]
 8004a06:	031b      	lsls	r3, r3, #12
 8004a08:	69fa      	ldr	r2, [r7, #28]
 8004a0a:	429a      	cmp	r2, r3
 8004a0c:	d903      	bls.n	8004a16 <UART_SetConfig+0x37a>
 8004a0e:	2301      	movs	r3, #1
 8004a10:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004a14:	e0e8      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004a16:	69fb      	ldr	r3, [r7, #28]
 8004a18:	2200      	movs	r2, #0
 8004a1a:	461c      	mov	r4, r3
 8004a1c:	4615      	mov	r5, r2
 8004a1e:	f04f 0200 	mov.w	r2, #0
 8004a22:	f04f 0300 	mov.w	r3, #0
 8004a26:	022b      	lsls	r3, r5, #8
 8004a28:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8004a2c:	0222      	lsls	r2, r4, #8
 8004a2e:	68f9      	ldr	r1, [r7, #12]
 8004a30:	6849      	ldr	r1, [r1, #4]
 8004a32:	0849      	lsrs	r1, r1, #1
 8004a34:	2000      	movs	r0, #0
 8004a36:	4688      	mov	r8, r1
 8004a38:	4681      	mov	r9, r0
 8004a3a:	eb12 0a08 	adds.w	sl, r2, r8
 8004a3e:	eb43 0b09 	adc.w	fp, r3, r9
 8004a42:	68fb      	ldr	r3, [r7, #12]
 8004a44:	685b      	ldr	r3, [r3, #4]
 8004a46:	2200      	movs	r2, #0
 8004a48:	603b      	str	r3, [r7, #0]
 8004a4a:	607a      	str	r2, [r7, #4]
 8004a4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004a50:	4650      	mov	r0, sl
 8004a52:	4659      	mov	r1, fp
 8004a54:	f7fb fc14 	bl	8000280 <__aeabi_uldivmod>
 8004a58:	4602      	mov	r2, r0
 8004a5a:	460b      	mov	r3, r1
 8004a5c:	4613      	mov	r3, r2
 8004a5e:	61bb      	str	r3, [r7, #24]
 8004a60:	69bb      	ldr	r3, [r7, #24]
 8004a62:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004a66:	d308      	bcc.n	8004a7a <UART_SetConfig+0x3de>
 8004a68:	69bb      	ldr	r3, [r7, #24]
 8004a6a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004a6e:	d204      	bcs.n	8004a7a <UART_SetConfig+0x3de>
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	69ba      	ldr	r2, [r7, #24]
 8004a76:	60da      	str	r2, [r3, #12]
 8004a78:	e0b6      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004a7a:	2301      	movs	r3, #1
 8004a7c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004a80:	e0b2      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	69db      	ldr	r3, [r3, #28]
 8004a86:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004a8a:	d15e      	bne.n	8004b4a <UART_SetConfig+0x4ae>
 8004a8c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004a90:	2b08      	cmp	r3, #8
 8004a92:	d828      	bhi.n	8004ae6 <UART_SetConfig+0x44a>
 8004a94:	a201      	add	r2, pc, #4	@ (adr r2, 8004a9c <UART_SetConfig+0x400>)
 8004a96:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a9a:	bf00      	nop
 8004a9c:	08004ac1 	.word	0x08004ac1
 8004aa0:	08004ac9 	.word	0x08004ac9
 8004aa4:	08004ad1 	.word	0x08004ad1
 8004aa8:	08004ae7 	.word	0x08004ae7
 8004aac:	08004ad7 	.word	0x08004ad7
 8004ab0:	08004ae7 	.word	0x08004ae7
 8004ab4:	08004ae7 	.word	0x08004ae7
 8004ab8:	08004ae7 	.word	0x08004ae7
 8004abc:	08004adf 	.word	0x08004adf
 8004ac0:	f7fe fa12 	bl	8002ee8 <HAL_RCC_GetPCLK1Freq>
 8004ac4:	61f8      	str	r0, [r7, #28]
 8004ac6:	e014      	b.n	8004af2 <UART_SetConfig+0x456>
 8004ac8:	f7fe fa24 	bl	8002f14 <HAL_RCC_GetPCLK2Freq>
 8004acc:	61f8      	str	r0, [r7, #28]
 8004ace:	e010      	b.n	8004af2 <UART_SetConfig+0x456>
 8004ad0:	4b4d      	ldr	r3, [pc, #308]	@ (8004c08 <UART_SetConfig+0x56c>)
 8004ad2:	61fb      	str	r3, [r7, #28]
 8004ad4:	e00d      	b.n	8004af2 <UART_SetConfig+0x456>
 8004ad6:	f7fe f96f 	bl	8002db8 <HAL_RCC_GetSysClockFreq>
 8004ada:	61f8      	str	r0, [r7, #28]
 8004adc:	e009      	b.n	8004af2 <UART_SetConfig+0x456>
 8004ade:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004ae2:	61fb      	str	r3, [r7, #28]
 8004ae4:	e005      	b.n	8004af2 <UART_SetConfig+0x456>
 8004ae6:	2300      	movs	r3, #0
 8004ae8:	61fb      	str	r3, [r7, #28]
 8004aea:	2301      	movs	r3, #1
 8004aec:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004af0:	bf00      	nop
 8004af2:	69fb      	ldr	r3, [r7, #28]
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d077      	beq.n	8004be8 <UART_SetConfig+0x54c>
 8004af8:	69fb      	ldr	r3, [r7, #28]
 8004afa:	005a      	lsls	r2, r3, #1
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	685b      	ldr	r3, [r3, #4]
 8004b00:	085b      	lsrs	r3, r3, #1
 8004b02:	441a      	add	r2, r3
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	685b      	ldr	r3, [r3, #4]
 8004b08:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b0c:	61bb      	str	r3, [r7, #24]
 8004b0e:	69bb      	ldr	r3, [r7, #24]
 8004b10:	2b0f      	cmp	r3, #15
 8004b12:	d916      	bls.n	8004b42 <UART_SetConfig+0x4a6>
 8004b14:	69bb      	ldr	r3, [r7, #24]
 8004b16:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004b1a:	d212      	bcs.n	8004b42 <UART_SetConfig+0x4a6>
 8004b1c:	69bb      	ldr	r3, [r7, #24]
 8004b1e:	b29b      	uxth	r3, r3
 8004b20:	f023 030f 	bic.w	r3, r3, #15
 8004b24:	82fb      	strh	r3, [r7, #22]
 8004b26:	69bb      	ldr	r3, [r7, #24]
 8004b28:	085b      	lsrs	r3, r3, #1
 8004b2a:	b29b      	uxth	r3, r3
 8004b2c:	f003 0307 	and.w	r3, r3, #7
 8004b30:	b29a      	uxth	r2, r3
 8004b32:	8afb      	ldrh	r3, [r7, #22]
 8004b34:	4313      	orrs	r3, r2
 8004b36:	82fb      	strh	r3, [r7, #22]
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	8afa      	ldrh	r2, [r7, #22]
 8004b3e:	60da      	str	r2, [r3, #12]
 8004b40:	e052      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004b42:	2301      	movs	r3, #1
 8004b44:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004b48:	e04e      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004b4a:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004b4e:	2b08      	cmp	r3, #8
 8004b50:	d827      	bhi.n	8004ba2 <UART_SetConfig+0x506>
 8004b52:	a201      	add	r2, pc, #4	@ (adr r2, 8004b58 <UART_SetConfig+0x4bc>)
 8004b54:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b58:	08004b7d 	.word	0x08004b7d
 8004b5c:	08004b85 	.word	0x08004b85
 8004b60:	08004b8d 	.word	0x08004b8d
 8004b64:	08004ba3 	.word	0x08004ba3
 8004b68:	08004b93 	.word	0x08004b93
 8004b6c:	08004ba3 	.word	0x08004ba3
 8004b70:	08004ba3 	.word	0x08004ba3
 8004b74:	08004ba3 	.word	0x08004ba3
 8004b78:	08004b9b 	.word	0x08004b9b
 8004b7c:	f7fe f9b4 	bl	8002ee8 <HAL_RCC_GetPCLK1Freq>
 8004b80:	61f8      	str	r0, [r7, #28]
 8004b82:	e014      	b.n	8004bae <UART_SetConfig+0x512>
 8004b84:	f7fe f9c6 	bl	8002f14 <HAL_RCC_GetPCLK2Freq>
 8004b88:	61f8      	str	r0, [r7, #28]
 8004b8a:	e010      	b.n	8004bae <UART_SetConfig+0x512>
 8004b8c:	4b1e      	ldr	r3, [pc, #120]	@ (8004c08 <UART_SetConfig+0x56c>)
 8004b8e:	61fb      	str	r3, [r7, #28]
 8004b90:	e00d      	b.n	8004bae <UART_SetConfig+0x512>
 8004b92:	f7fe f911 	bl	8002db8 <HAL_RCC_GetSysClockFreq>
 8004b96:	61f8      	str	r0, [r7, #28]
 8004b98:	e009      	b.n	8004bae <UART_SetConfig+0x512>
 8004b9a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004b9e:	61fb      	str	r3, [r7, #28]
 8004ba0:	e005      	b.n	8004bae <UART_SetConfig+0x512>
 8004ba2:	2300      	movs	r3, #0
 8004ba4:	61fb      	str	r3, [r7, #28]
 8004ba6:	2301      	movs	r3, #1
 8004ba8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004bac:	bf00      	nop
 8004bae:	69fb      	ldr	r3, [r7, #28]
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d019      	beq.n	8004be8 <UART_SetConfig+0x54c>
 8004bb4:	68fb      	ldr	r3, [r7, #12]
 8004bb6:	685b      	ldr	r3, [r3, #4]
 8004bb8:	085a      	lsrs	r2, r3, #1
 8004bba:	69fb      	ldr	r3, [r7, #28]
 8004bbc:	441a      	add	r2, r3
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	685b      	ldr	r3, [r3, #4]
 8004bc2:	fbb2 f3f3 	udiv	r3, r2, r3
 8004bc6:	61bb      	str	r3, [r7, #24]
 8004bc8:	69bb      	ldr	r3, [r7, #24]
 8004bca:	2b0f      	cmp	r3, #15
 8004bcc:	d909      	bls.n	8004be2 <UART_SetConfig+0x546>
 8004bce:	69bb      	ldr	r3, [r7, #24]
 8004bd0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004bd4:	d205      	bcs.n	8004be2 <UART_SetConfig+0x546>
 8004bd6:	69bb      	ldr	r3, [r7, #24]
 8004bd8:	b29a      	uxth	r2, r3
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	60da      	str	r2, [r3, #12]
 8004be0:	e002      	b.n	8004be8 <UART_SetConfig+0x54c>
 8004be2:	2301      	movs	r3, #1
 8004be4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	2200      	movs	r2, #0
 8004bec:	669a      	str	r2, [r3, #104]	@ 0x68
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	2200      	movs	r2, #0
 8004bf2:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004bf4:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8004bf8:	4618      	mov	r0, r3
 8004bfa:	3728      	adds	r7, #40	@ 0x28
 8004bfc:	46bd      	mov	sp, r7
 8004bfe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004c02:	bf00      	nop
 8004c04:	40008000 	.word	0x40008000
 8004c08:	00f42400 	.word	0x00f42400

08004c0c <UART_AdvFeatureConfig>:
 8004c0c:	b480      	push	{r7}
 8004c0e:	b083      	sub	sp, #12
 8004c10:	af00      	add	r7, sp, #0
 8004c12:	6078      	str	r0, [r7, #4]
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c18:	f003 0308 	and.w	r3, r3, #8
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d00a      	beq.n	8004c36 <UART_AdvFeatureConfig+0x2a>
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	685b      	ldr	r3, [r3, #4]
 8004c26:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	430a      	orrs	r2, r1
 8004c34:	605a      	str	r2, [r3, #4]
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c3a:	f003 0301 	and.w	r3, r3, #1
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d00a      	beq.n	8004c58 <UART_AdvFeatureConfig+0x4c>
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	685b      	ldr	r3, [r3, #4]
 8004c48:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	430a      	orrs	r2, r1
 8004c56:	605a      	str	r2, [r3, #4]
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c5c:	f003 0302 	and.w	r3, r3, #2
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d00a      	beq.n	8004c7a <UART_AdvFeatureConfig+0x6e>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	685b      	ldr	r3, [r3, #4]
 8004c6a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	430a      	orrs	r2, r1
 8004c78:	605a      	str	r2, [r3, #4]
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c7e:	f003 0304 	and.w	r3, r3, #4
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	d00a      	beq.n	8004c9c <UART_AdvFeatureConfig+0x90>
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	685b      	ldr	r3, [r3, #4]
 8004c8c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	430a      	orrs	r2, r1
 8004c9a:	605a      	str	r2, [r3, #4]
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ca0:	f003 0310 	and.w	r3, r3, #16
 8004ca4:	2b00      	cmp	r3, #0
 8004ca6:	d00a      	beq.n	8004cbe <UART_AdvFeatureConfig+0xb2>
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	689b      	ldr	r3, [r3, #8]
 8004cae:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004cb6:	687b      	ldr	r3, [r7, #4]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	430a      	orrs	r2, r1
 8004cbc:	609a      	str	r2, [r3, #8]
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cc2:	f003 0320 	and.w	r3, r3, #32
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	d00a      	beq.n	8004ce0 <UART_AdvFeatureConfig+0xd4>
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	689b      	ldr	r3, [r3, #8]
 8004cd0:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681b      	ldr	r3, [r3, #0]
 8004cdc:	430a      	orrs	r2, r1
 8004cde:	609a      	str	r2, [r3, #8]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ce4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ce8:	2b00      	cmp	r3, #0
 8004cea:	d01a      	beq.n	8004d22 <UART_AdvFeatureConfig+0x116>
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	685b      	ldr	r3, [r3, #4]
 8004cf2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	430a      	orrs	r2, r1
 8004d00:	605a      	str	r2, [r3, #4]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d06:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004d0a:	d10a      	bne.n	8004d22 <UART_AdvFeatureConfig+0x116>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	685b      	ldr	r3, [r3, #4]
 8004d12:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	430a      	orrs	r2, r1
 8004d20:	605a      	str	r2, [r3, #4]
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d26:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d2a:	2b00      	cmp	r3, #0
 8004d2c:	d00a      	beq.n	8004d44 <UART_AdvFeatureConfig+0x138>
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	685b      	ldr	r3, [r3, #4]
 8004d34:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	430a      	orrs	r2, r1
 8004d42:	605a      	str	r2, [r3, #4]
 8004d44:	bf00      	nop
 8004d46:	370c      	adds	r7, #12
 8004d48:	46bd      	mov	sp, r7
 8004d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d4e:	4770      	bx	lr

08004d50 <UART_CheckIdleState>:
 8004d50:	b580      	push	{r7, lr}
 8004d52:	b098      	sub	sp, #96	@ 0x60
 8004d54:	af02      	add	r7, sp, #8
 8004d56:	6078      	str	r0, [r7, #4]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	2200      	movs	r2, #0
 8004d5c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004d60:	f7fc fe26 	bl	80019b0 <HAL_GetTick>
 8004d64:	6578      	str	r0, [r7, #84]	@ 0x54
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f003 0308 	and.w	r3, r3, #8
 8004d70:	2b08      	cmp	r3, #8
 8004d72:	d12e      	bne.n	8004dd2 <UART_CheckIdleState+0x82>
 8004d74:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8004d78:	9300      	str	r3, [sp, #0]
 8004d7a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8004d82:	6878      	ldr	r0, [r7, #4]
 8004d84:	f000 f88c 	bl	8004ea0 <UART_WaitOnFlagUntilTimeout>
 8004d88:	4603      	mov	r3, r0
 8004d8a:	2b00      	cmp	r3, #0
 8004d8c:	d021      	beq.n	8004dd2 <UART_CheckIdleState+0x82>
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004d94:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d96:	e853 3f00 	ldrex	r3, [r3]
 8004d9a:	637b      	str	r3, [r7, #52]	@ 0x34
 8004d9c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d9e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004da2:	653b      	str	r3, [r7, #80]	@ 0x50
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	461a      	mov	r2, r3
 8004daa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004dac:	647b      	str	r3, [r7, #68]	@ 0x44
 8004dae:	643a      	str	r2, [r7, #64]	@ 0x40
 8004db0:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004db2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004db4:	e841 2300 	strex	r3, r2, [r1]
 8004db8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004dba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d1e6      	bne.n	8004d8e <UART_CheckIdleState+0x3e>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	2220      	movs	r2, #32
 8004dc4:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	2200      	movs	r2, #0
 8004dca:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004dce:	2303      	movs	r3, #3
 8004dd0:	e062      	b.n	8004e98 <UART_CheckIdleState+0x148>
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	f003 0304 	and.w	r3, r3, #4
 8004ddc:	2b04      	cmp	r3, #4
 8004dde:	d149      	bne.n	8004e74 <UART_CheckIdleState+0x124>
 8004de0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8004de4:	9300      	str	r3, [sp, #0]
 8004de6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004de8:	2200      	movs	r2, #0
 8004dea:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8004dee:	6878      	ldr	r0, [r7, #4]
 8004df0:	f000 f856 	bl	8004ea0 <UART_WaitOnFlagUntilTimeout>
 8004df4:	4603      	mov	r3, r0
 8004df6:	2b00      	cmp	r3, #0
 8004df8:	d03c      	beq.n	8004e74 <UART_CheckIdleState+0x124>
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e02:	e853 3f00 	ldrex	r3, [r3]
 8004e06:	623b      	str	r3, [r7, #32]
 8004e08:	6a3b      	ldr	r3, [r7, #32]
 8004e0a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004e0e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	461a      	mov	r2, r3
 8004e16:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004e18:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e1a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004e1c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004e1e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004e20:	e841 2300 	strex	r3, r2, [r1]
 8004e24:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e26:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d1e6      	bne.n	8004dfa <UART_CheckIdleState+0xaa>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	3308      	adds	r3, #8
 8004e32:	613b      	str	r3, [r7, #16]
 8004e34:	693b      	ldr	r3, [r7, #16]
 8004e36:	e853 3f00 	ldrex	r3, [r3]
 8004e3a:	60fb      	str	r3, [r7, #12]
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	f023 0301 	bic.w	r3, r3, #1
 8004e42:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	3308      	adds	r3, #8
 8004e4a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004e4c:	61fa      	str	r2, [r7, #28]
 8004e4e:	61bb      	str	r3, [r7, #24]
 8004e50:	69b9      	ldr	r1, [r7, #24]
 8004e52:	69fa      	ldr	r2, [r7, #28]
 8004e54:	e841 2300 	strex	r3, r2, [r1]
 8004e58:	617b      	str	r3, [r7, #20]
 8004e5a:	697b      	ldr	r3, [r7, #20]
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d1e5      	bne.n	8004e2c <UART_CheckIdleState+0xdc>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	2220      	movs	r2, #32
 8004e64:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	2200      	movs	r2, #0
 8004e6c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004e70:	2303      	movs	r3, #3
 8004e72:	e011      	b.n	8004e98 <UART_CheckIdleState+0x148>
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	2220      	movs	r2, #32
 8004e78:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	2220      	movs	r2, #32
 8004e7e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	2200      	movs	r2, #0
 8004e86:	661a      	str	r2, [r3, #96]	@ 0x60
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	2200      	movs	r2, #0
 8004e8c:	665a      	str	r2, [r3, #100]	@ 0x64
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	2200      	movs	r2, #0
 8004e92:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004e96:	2300      	movs	r3, #0
 8004e98:	4618      	mov	r0, r3
 8004e9a:	3758      	adds	r7, #88	@ 0x58
 8004e9c:	46bd      	mov	sp, r7
 8004e9e:	bd80      	pop	{r7, pc}

08004ea0 <UART_WaitOnFlagUntilTimeout>:
 8004ea0:	b580      	push	{r7, lr}
 8004ea2:	b084      	sub	sp, #16
 8004ea4:	af00      	add	r7, sp, #0
 8004ea6:	60f8      	str	r0, [r7, #12]
 8004ea8:	60b9      	str	r1, [r7, #8]
 8004eaa:	603b      	str	r3, [r7, #0]
 8004eac:	4613      	mov	r3, r2
 8004eae:	71fb      	strb	r3, [r7, #7]
 8004eb0:	e049      	b.n	8004f46 <UART_WaitOnFlagUntilTimeout+0xa6>
 8004eb2:	69bb      	ldr	r3, [r7, #24]
 8004eb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004eb8:	d045      	beq.n	8004f46 <UART_WaitOnFlagUntilTimeout+0xa6>
 8004eba:	f7fc fd79 	bl	80019b0 <HAL_GetTick>
 8004ebe:	4602      	mov	r2, r0
 8004ec0:	683b      	ldr	r3, [r7, #0]
 8004ec2:	1ad3      	subs	r3, r2, r3
 8004ec4:	69ba      	ldr	r2, [r7, #24]
 8004ec6:	429a      	cmp	r2, r3
 8004ec8:	d302      	bcc.n	8004ed0 <UART_WaitOnFlagUntilTimeout+0x30>
 8004eca:	69bb      	ldr	r3, [r7, #24]
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d101      	bne.n	8004ed4 <UART_WaitOnFlagUntilTimeout+0x34>
 8004ed0:	2303      	movs	r3, #3
 8004ed2:	e048      	b.n	8004f66 <UART_WaitOnFlagUntilTimeout+0xc6>
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	f003 0304 	and.w	r3, r3, #4
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	d031      	beq.n	8004f46 <UART_WaitOnFlagUntilTimeout+0xa6>
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	69db      	ldr	r3, [r3, #28]
 8004ee8:	f003 0308 	and.w	r3, r3, #8
 8004eec:	2b08      	cmp	r3, #8
 8004eee:	d110      	bne.n	8004f12 <UART_WaitOnFlagUntilTimeout+0x72>
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	2208      	movs	r2, #8
 8004ef6:	621a      	str	r2, [r3, #32]
 8004ef8:	68f8      	ldr	r0, [r7, #12]
 8004efa:	f000 f838 	bl	8004f6e <UART_EndRxTransfer>
 8004efe:	68fb      	ldr	r3, [r7, #12]
 8004f00:	2208      	movs	r2, #8
 8004f02:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004f06:	68fb      	ldr	r3, [r7, #12]
 8004f08:	2200      	movs	r2, #0
 8004f0a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004f0e:	2301      	movs	r3, #1
 8004f10:	e029      	b.n	8004f66 <UART_WaitOnFlagUntilTimeout+0xc6>
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	681b      	ldr	r3, [r3, #0]
 8004f16:	69db      	ldr	r3, [r3, #28]
 8004f18:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004f1c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004f20:	d111      	bne.n	8004f46 <UART_WaitOnFlagUntilTimeout+0xa6>
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004f2a:	621a      	str	r2, [r3, #32]
 8004f2c:	68f8      	ldr	r0, [r7, #12]
 8004f2e:	f000 f81e 	bl	8004f6e <UART_EndRxTransfer>
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	2220      	movs	r2, #32
 8004f36:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	2200      	movs	r2, #0
 8004f3e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004f42:	2303      	movs	r3, #3
 8004f44:	e00f      	b.n	8004f66 <UART_WaitOnFlagUntilTimeout+0xc6>
 8004f46:	68fb      	ldr	r3, [r7, #12]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	69da      	ldr	r2, [r3, #28]
 8004f4c:	68bb      	ldr	r3, [r7, #8]
 8004f4e:	4013      	ands	r3, r2
 8004f50:	68ba      	ldr	r2, [r7, #8]
 8004f52:	429a      	cmp	r2, r3
 8004f54:	bf0c      	ite	eq
 8004f56:	2301      	moveq	r3, #1
 8004f58:	2300      	movne	r3, #0
 8004f5a:	b2db      	uxtb	r3, r3
 8004f5c:	461a      	mov	r2, r3
 8004f5e:	79fb      	ldrb	r3, [r7, #7]
 8004f60:	429a      	cmp	r2, r3
 8004f62:	d0a6      	beq.n	8004eb2 <UART_WaitOnFlagUntilTimeout+0x12>
 8004f64:	2300      	movs	r3, #0
 8004f66:	4618      	mov	r0, r3
 8004f68:	3710      	adds	r7, #16
 8004f6a:	46bd      	mov	sp, r7
 8004f6c:	bd80      	pop	{r7, pc}

08004f6e <UART_EndRxTransfer>:
 8004f6e:	b480      	push	{r7}
 8004f70:	b095      	sub	sp, #84	@ 0x54
 8004f72:	af00      	add	r7, sp, #0
 8004f74:	6078      	str	r0, [r7, #4]
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	637b      	str	r3, [r7, #52]	@ 0x34
 8004f7c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004f7e:	e853 3f00 	ldrex	r3, [r3]
 8004f82:	633b      	str	r3, [r7, #48]	@ 0x30
 8004f84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f86:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004f8a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	681b      	ldr	r3, [r3, #0]
 8004f90:	461a      	mov	r2, r3
 8004f92:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004f94:	643b      	str	r3, [r7, #64]	@ 0x40
 8004f96:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004f98:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004f9a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004f9c:	e841 2300 	strex	r3, r2, [r1]
 8004fa0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004fa2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	d1e6      	bne.n	8004f76 <UART_EndRxTransfer+0x8>
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	3308      	adds	r3, #8
 8004fae:	623b      	str	r3, [r7, #32]
 8004fb0:	6a3b      	ldr	r3, [r7, #32]
 8004fb2:	e853 3f00 	ldrex	r3, [r3]
 8004fb6:	61fb      	str	r3, [r7, #28]
 8004fb8:	69fb      	ldr	r3, [r7, #28]
 8004fba:	f023 0301 	bic.w	r3, r3, #1
 8004fbe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	3308      	adds	r3, #8
 8004fc6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004fc8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004fca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004fcc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004fce:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004fd0:	e841 2300 	strex	r3, r2, [r1]
 8004fd4:	627b      	str	r3, [r7, #36]	@ 0x24
 8004fd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	d1e5      	bne.n	8004fa8 <UART_EndRxTransfer+0x3a>
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004fe0:	2b01      	cmp	r3, #1
 8004fe2:	d118      	bne.n	8005016 <UART_EndRxTransfer+0xa8>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	60fb      	str	r3, [r7, #12]
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	e853 3f00 	ldrex	r3, [r3]
 8004ff0:	60bb      	str	r3, [r7, #8]
 8004ff2:	68bb      	ldr	r3, [r7, #8]
 8004ff4:	f023 0310 	bic.w	r3, r3, #16
 8004ff8:	647b      	str	r3, [r7, #68]	@ 0x44
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	461a      	mov	r2, r3
 8005000:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005002:	61bb      	str	r3, [r7, #24]
 8005004:	617a      	str	r2, [r7, #20]
 8005006:	6979      	ldr	r1, [r7, #20]
 8005008:	69ba      	ldr	r2, [r7, #24]
 800500a:	e841 2300 	strex	r3, r2, [r1]
 800500e:	613b      	str	r3, [r7, #16]
 8005010:	693b      	ldr	r3, [r7, #16]
 8005012:	2b00      	cmp	r3, #0
 8005014:	d1e6      	bne.n	8004fe4 <UART_EndRxTransfer+0x76>
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	2220      	movs	r2, #32
 800501a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	2200      	movs	r2, #0
 8005022:	661a      	str	r2, [r3, #96]	@ 0x60
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	2200      	movs	r2, #0
 8005028:	669a      	str	r2, [r3, #104]	@ 0x68
 800502a:	bf00      	nop
 800502c:	3754      	adds	r7, #84	@ 0x54
 800502e:	46bd      	mov	sp, r7
 8005030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005034:	4770      	bx	lr

08005036 <UART_DMAAbortOnError>:
 8005036:	b580      	push	{r7, lr}
 8005038:	b084      	sub	sp, #16
 800503a:	af00      	add	r7, sp, #0
 800503c:	6078      	str	r0, [r7, #4]
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005042:	60fb      	str	r3, [r7, #12]
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	2200      	movs	r2, #0
 8005048:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	2200      	movs	r2, #0
 8005050:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8005054:	68f8      	ldr	r0, [r7, #12]
 8005056:	f7ff fb0b 	bl	8004670 <HAL_UART_ErrorCallback>
 800505a:	bf00      	nop
 800505c:	3710      	adds	r7, #16
 800505e:	46bd      	mov	sp, r7
 8005060:	bd80      	pop	{r7, pc}

08005062 <UART_TxISR_8BIT>:
 8005062:	b480      	push	{r7}
 8005064:	b08f      	sub	sp, #60	@ 0x3c
 8005066:	af00      	add	r7, sp, #0
 8005068:	6078      	str	r0, [r7, #4]
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800506e:	2b21      	cmp	r3, #33	@ 0x21
 8005070:	d14c      	bne.n	800510c <UART_TxISR_8BIT+0xaa>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8005078:	b29b      	uxth	r3, r3
 800507a:	2b00      	cmp	r3, #0
 800507c:	d132      	bne.n	80050e4 <UART_TxISR_8BIT+0x82>
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	623b      	str	r3, [r7, #32]
 8005084:	6a3b      	ldr	r3, [r7, #32]
 8005086:	e853 3f00 	ldrex	r3, [r3]
 800508a:	61fb      	str	r3, [r7, #28]
 800508c:	69fb      	ldr	r3, [r7, #28]
 800508e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005092:	637b      	str	r3, [r7, #52]	@ 0x34
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	461a      	mov	r2, r3
 800509a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800509c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800509e:	62ba      	str	r2, [r7, #40]	@ 0x28
 80050a0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80050a2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80050a4:	e841 2300 	strex	r3, r2, [r1]
 80050a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80050aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d1e6      	bne.n	800507e <UART_TxISR_8BIT+0x1c>
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	60fb      	str	r3, [r7, #12]
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	e853 3f00 	ldrex	r3, [r3]
 80050bc:	60bb      	str	r3, [r7, #8]
 80050be:	68bb      	ldr	r3, [r7, #8]
 80050c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80050c4:	633b      	str	r3, [r7, #48]	@ 0x30
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	681b      	ldr	r3, [r3, #0]
 80050ca:	461a      	mov	r2, r3
 80050cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80050ce:	61bb      	str	r3, [r7, #24]
 80050d0:	617a      	str	r2, [r7, #20]
 80050d2:	6979      	ldr	r1, [r7, #20]
 80050d4:	69ba      	ldr	r2, [r7, #24]
 80050d6:	e841 2300 	strex	r3, r2, [r1]
 80050da:	613b      	str	r3, [r7, #16]
 80050dc:	693b      	ldr	r3, [r7, #16]
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d1e6      	bne.n	80050b0 <UART_TxISR_8BIT+0x4e>
 80050e2:	e013      	b.n	800510c <UART_TxISR_8BIT+0xaa>
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80050e8:	781a      	ldrb	r2, [r3, #0]
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	851a      	strh	r2, [r3, #40]	@ 0x28
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80050f4:	1c5a      	adds	r2, r3, #1
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8005100:	b29b      	uxth	r3, r3
 8005102:	3b01      	subs	r3, #1
 8005104:	b29a      	uxth	r2, r3
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800510c:	bf00      	nop
 800510e:	373c      	adds	r7, #60	@ 0x3c
 8005110:	46bd      	mov	sp, r7
 8005112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005116:	4770      	bx	lr

08005118 <UART_TxISR_16BIT>:
 8005118:	b480      	push	{r7}
 800511a:	b091      	sub	sp, #68	@ 0x44
 800511c:	af00      	add	r7, sp, #0
 800511e:	6078      	str	r0, [r7, #4]
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005124:	2b21      	cmp	r3, #33	@ 0x21
 8005126:	d151      	bne.n	80051cc <UART_TxISR_16BIT+0xb4>
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800512e:	b29b      	uxth	r3, r3
 8005130:	2b00      	cmp	r3, #0
 8005132:	d132      	bne.n	800519a <UART_TxISR_16BIT+0x82>
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	627b      	str	r3, [r7, #36]	@ 0x24
 800513a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800513c:	e853 3f00 	ldrex	r3, [r3]
 8005140:	623b      	str	r3, [r7, #32]
 8005142:	6a3b      	ldr	r3, [r7, #32]
 8005144:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005148:	63bb      	str	r3, [r7, #56]	@ 0x38
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	461a      	mov	r2, r3
 8005150:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005152:	633b      	str	r3, [r7, #48]	@ 0x30
 8005154:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005156:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005158:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800515a:	e841 2300 	strex	r3, r2, [r1]
 800515e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005160:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005162:	2b00      	cmp	r3, #0
 8005164:	d1e6      	bne.n	8005134 <UART_TxISR_16BIT+0x1c>
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	613b      	str	r3, [r7, #16]
 800516c:	693b      	ldr	r3, [r7, #16]
 800516e:	e853 3f00 	ldrex	r3, [r3]
 8005172:	60fb      	str	r3, [r7, #12]
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800517a:	637b      	str	r3, [r7, #52]	@ 0x34
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	461a      	mov	r2, r3
 8005182:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005184:	61fb      	str	r3, [r7, #28]
 8005186:	61ba      	str	r2, [r7, #24]
 8005188:	69b9      	ldr	r1, [r7, #24]
 800518a:	69fa      	ldr	r2, [r7, #28]
 800518c:	e841 2300 	strex	r3, r2, [r1]
 8005190:	617b      	str	r3, [r7, #20]
 8005192:	697b      	ldr	r3, [r7, #20]
 8005194:	2b00      	cmp	r3, #0
 8005196:	d1e6      	bne.n	8005166 <UART_TxISR_16BIT+0x4e>
 8005198:	e018      	b.n	80051cc <UART_TxISR_16BIT+0xb4>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800519e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80051a0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80051a2:	881a      	ldrh	r2, [r3, #0]
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80051ac:	b292      	uxth	r2, r2
 80051ae:	851a      	strh	r2, [r3, #40]	@ 0x28
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80051b4:	1c9a      	adds	r2, r3, #2
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 80051c0:	b29b      	uxth	r3, r3
 80051c2:	3b01      	subs	r3, #1
 80051c4:	b29a      	uxth	r2, r3
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 80051cc:	bf00      	nop
 80051ce:	3744      	adds	r7, #68	@ 0x44
 80051d0:	46bd      	mov	sp, r7
 80051d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051d6:	4770      	bx	lr

080051d8 <UART_EndTransmit_IT>:
 80051d8:	b580      	push	{r7, lr}
 80051da:	b088      	sub	sp, #32
 80051dc:	af00      	add	r7, sp, #0
 80051de:	6078      	str	r0, [r7, #4]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	60fb      	str	r3, [r7, #12]
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	e853 3f00 	ldrex	r3, [r3]
 80051ec:	60bb      	str	r3, [r7, #8]
 80051ee:	68bb      	ldr	r3, [r7, #8]
 80051f0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80051f4:	61fb      	str	r3, [r7, #28]
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	461a      	mov	r2, r3
 80051fc:	69fb      	ldr	r3, [r7, #28]
 80051fe:	61bb      	str	r3, [r7, #24]
 8005200:	617a      	str	r2, [r7, #20]
 8005202:	6979      	ldr	r1, [r7, #20]
 8005204:	69ba      	ldr	r2, [r7, #24]
 8005206:	e841 2300 	strex	r3, r2, [r1]
 800520a:	613b      	str	r3, [r7, #16]
 800520c:	693b      	ldr	r3, [r7, #16]
 800520e:	2b00      	cmp	r3, #0
 8005210:	d1e6      	bne.n	80051e0 <UART_EndTransmit_IT+0x8>
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	2220      	movs	r2, #32
 8005216:	67da      	str	r2, [r3, #124]	@ 0x7c
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	2200      	movs	r2, #0
 800521c:	66da      	str	r2, [r3, #108]	@ 0x6c
 800521e:	6878      	ldr	r0, [r7, #4]
 8005220:	f7fc f83c 	bl	800129c <HAL_UART_TxCpltCallback>
 8005224:	bf00      	nop
 8005226:	3720      	adds	r7, #32
 8005228:	46bd      	mov	sp, r7
 800522a:	bd80      	pop	{r7, pc}

0800522c <HAL_UARTEx_WakeupCallback>:
 800522c:	b480      	push	{r7}
 800522e:	b083      	sub	sp, #12
 8005230:	af00      	add	r7, sp, #0
 8005232:	6078      	str	r0, [r7, #4]
 8005234:	bf00      	nop
 8005236:	370c      	adds	r7, #12
 8005238:	46bd      	mov	sp, r7
 800523a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523e:	4770      	bx	lr

08005240 <makeFreeRtosPriority>:
 8005240:	b480      	push	{r7}
 8005242:	b085      	sub	sp, #20
 8005244:	af00      	add	r7, sp, #0
 8005246:	4603      	mov	r3, r0
 8005248:	80fb      	strh	r3, [r7, #6]
 800524a:	2300      	movs	r3, #0
 800524c:	60fb      	str	r3, [r7, #12]
 800524e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005252:	2b84      	cmp	r3, #132	@ 0x84
 8005254:	d005      	beq.n	8005262 <makeFreeRtosPriority+0x22>
 8005256:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	4413      	add	r3, r2
 800525e:	3303      	adds	r3, #3
 8005260:	60fb      	str	r3, [r7, #12]
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	4618      	mov	r0, r3
 8005266:	3714      	adds	r7, #20
 8005268:	46bd      	mov	sp, r7
 800526a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526e:	4770      	bx	lr

08005270 <inHandlerMode>:
 8005270:	b480      	push	{r7}
 8005272:	b083      	sub	sp, #12
 8005274:	af00      	add	r7, sp, #0
 8005276:	f3ef 8305 	mrs	r3, IPSR
 800527a:	607b      	str	r3, [r7, #4]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	2b00      	cmp	r3, #0
 8005280:	bf14      	ite	ne
 8005282:	2301      	movne	r3, #1
 8005284:	2300      	moveq	r3, #0
 8005286:	b2db      	uxtb	r3, r3
 8005288:	4618      	mov	r0, r3
 800528a:	370c      	adds	r7, #12
 800528c:	46bd      	mov	sp, r7
 800528e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005292:	4770      	bx	lr

08005294 <osKernelStart>:
 8005294:	b580      	push	{r7, lr}
 8005296:	af00      	add	r7, sp, #0
 8005298:	f001 fdc8 	bl	8006e2c <vTaskStartScheduler>
 800529c:	2300      	movs	r3, #0
 800529e:	4618      	mov	r0, r3
 80052a0:	bd80      	pop	{r7, pc}

080052a2 <osThreadCreate>:
 80052a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052a4:	b089      	sub	sp, #36	@ 0x24
 80052a6:	af04      	add	r7, sp, #16
 80052a8:	6078      	str	r0, [r7, #4]
 80052aa:	6039      	str	r1, [r7, #0]
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	695b      	ldr	r3, [r3, #20]
 80052b0:	2b00      	cmp	r3, #0
 80052b2:	d020      	beq.n	80052f6 <osThreadCreate+0x54>
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	699b      	ldr	r3, [r3, #24]
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d01c      	beq.n	80052f6 <osThreadCreate+0x54>
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	685c      	ldr	r4, [r3, #4]
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681d      	ldr	r5, [r3, #0]
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	691e      	ldr	r6, [r3, #16]
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80052ce:	4618      	mov	r0, r3
 80052d0:	f7ff ffb6 	bl	8005240 <makeFreeRtosPriority>
 80052d4:	4601      	mov	r1, r0
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	695b      	ldr	r3, [r3, #20]
 80052da:	687a      	ldr	r2, [r7, #4]
 80052dc:	6992      	ldr	r2, [r2, #24]
 80052de:	9202      	str	r2, [sp, #8]
 80052e0:	9301      	str	r3, [sp, #4]
 80052e2:	9100      	str	r1, [sp, #0]
 80052e4:	683b      	ldr	r3, [r7, #0]
 80052e6:	4632      	mov	r2, r6
 80052e8:	4629      	mov	r1, r5
 80052ea:	4620      	mov	r0, r4
 80052ec:	f001 fbd0 	bl	8006a90 <xTaskCreateStatic>
 80052f0:	4603      	mov	r3, r0
 80052f2:	60fb      	str	r3, [r7, #12]
 80052f4:	e01c      	b.n	8005330 <osThreadCreate+0x8e>
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	685c      	ldr	r4, [r3, #4]
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	681d      	ldr	r5, [r3, #0]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	691b      	ldr	r3, [r3, #16]
 8005302:	b29e      	uxth	r6, r3
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800530a:	4618      	mov	r0, r3
 800530c:	f7ff ff98 	bl	8005240 <makeFreeRtosPriority>
 8005310:	4602      	mov	r2, r0
 8005312:	f107 030c 	add.w	r3, r7, #12
 8005316:	9301      	str	r3, [sp, #4]
 8005318:	9200      	str	r2, [sp, #0]
 800531a:	683b      	ldr	r3, [r7, #0]
 800531c:	4632      	mov	r2, r6
 800531e:	4629      	mov	r1, r5
 8005320:	4620      	mov	r0, r4
 8005322:	f001 fc15 	bl	8006b50 <xTaskCreate>
 8005326:	4603      	mov	r3, r0
 8005328:	2b01      	cmp	r3, #1
 800532a:	d001      	beq.n	8005330 <osThreadCreate+0x8e>
 800532c:	2300      	movs	r3, #0
 800532e:	e000      	b.n	8005332 <osThreadCreate+0x90>
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	4618      	mov	r0, r3
 8005334:	3714      	adds	r7, #20
 8005336:	46bd      	mov	sp, r7
 8005338:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800533a <osDelay>:
 800533a:	b580      	push	{r7, lr}
 800533c:	b084      	sub	sp, #16
 800533e:	af00      	add	r7, sp, #0
 8005340:	6078      	str	r0, [r7, #4]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	60fb      	str	r3, [r7, #12]
 8005346:	68fb      	ldr	r3, [r7, #12]
 8005348:	2b00      	cmp	r3, #0
 800534a:	d001      	beq.n	8005350 <osDelay+0x16>
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	e000      	b.n	8005352 <osDelay+0x18>
 8005350:	2301      	movs	r3, #1
 8005352:	4618      	mov	r0, r3
 8005354:	f001 fd34 	bl	8006dc0 <vTaskDelay>
 8005358:	2300      	movs	r3, #0
 800535a:	4618      	mov	r0, r3
 800535c:	3710      	adds	r7, #16
 800535e:	46bd      	mov	sp, r7
 8005360:	bd80      	pop	{r7, pc}
	...

08005364 <osTimerCreate>:
 8005364:	b580      	push	{r7, lr}
 8005366:	b086      	sub	sp, #24
 8005368:	af02      	add	r7, sp, #8
 800536a:	60f8      	str	r0, [r7, #12]
 800536c:	460b      	mov	r3, r1
 800536e:	607a      	str	r2, [r7, #4]
 8005370:	72fb      	strb	r3, [r7, #11]
 8005372:	68fb      	ldr	r3, [r7, #12]
 8005374:	685b      	ldr	r3, [r3, #4]
 8005376:	2b00      	cmp	r3, #0
 8005378:	d013      	beq.n	80053a2 <osTimerCreate+0x3e>
 800537a:	7afb      	ldrb	r3, [r7, #11]
 800537c:	2b01      	cmp	r3, #1
 800537e:	d101      	bne.n	8005384 <osTimerCreate+0x20>
 8005380:	2101      	movs	r1, #1
 8005382:	e000      	b.n	8005386 <osTimerCreate+0x22>
 8005384:	2100      	movs	r1, #0
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	68fa      	ldr	r2, [r7, #12]
 800538c:	6852      	ldr	r2, [r2, #4]
 800538e:	9201      	str	r2, [sp, #4]
 8005390:	9300      	str	r3, [sp, #0]
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	460a      	mov	r2, r1
 8005396:	2101      	movs	r1, #1
 8005398:	480b      	ldr	r0, [pc, #44]	@ (80053c8 <osTimerCreate+0x64>)
 800539a:	f002 fcde 	bl	8007d5a <xTimerCreateStatic>
 800539e:	4603      	mov	r3, r0
 80053a0:	e00e      	b.n	80053c0 <osTimerCreate+0x5c>
 80053a2:	7afb      	ldrb	r3, [r7, #11]
 80053a4:	2b01      	cmp	r3, #1
 80053a6:	d101      	bne.n	80053ac <osTimerCreate+0x48>
 80053a8:	2201      	movs	r2, #1
 80053aa:	e000      	b.n	80053ae <osTimerCreate+0x4a>
 80053ac:	2200      	movs	r2, #0
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	9300      	str	r3, [sp, #0]
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	2101      	movs	r1, #1
 80053b8:	4803      	ldr	r0, [pc, #12]	@ (80053c8 <osTimerCreate+0x64>)
 80053ba:	f002 fcad 	bl	8007d18 <xTimerCreate>
 80053be:	4603      	mov	r3, r0
 80053c0:	4618      	mov	r0, r3
 80053c2:	3710      	adds	r7, #16
 80053c4:	46bd      	mov	sp, r7
 80053c6:	bd80      	pop	{r7, pc}
 80053c8:	08009a04 	.word	0x08009a04

080053cc <osTimerStart>:
 80053cc:	b580      	push	{r7, lr}
 80053ce:	b088      	sub	sp, #32
 80053d0:	af02      	add	r7, sp, #8
 80053d2:	6078      	str	r0, [r7, #4]
 80053d4:	6039      	str	r1, [r7, #0]
 80053d6:	2300      	movs	r3, #0
 80053d8:	617b      	str	r3, [r7, #20]
 80053da:	2300      	movs	r3, #0
 80053dc:	60fb      	str	r3, [r7, #12]
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	613b      	str	r3, [r7, #16]
 80053e2:	693b      	ldr	r3, [r7, #16]
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d101      	bne.n	80053ec <osTimerStart+0x20>
 80053e8:	2301      	movs	r3, #1
 80053ea:	613b      	str	r3, [r7, #16]
 80053ec:	f7ff ff40 	bl	8005270 <inHandlerMode>
 80053f0:	4603      	mov	r3, r0
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	d01a      	beq.n	800542c <osTimerStart+0x60>
 80053f6:	f107 030c 	add.w	r3, r7, #12
 80053fa:	2200      	movs	r2, #0
 80053fc:	9200      	str	r2, [sp, #0]
 80053fe:	693a      	ldr	r2, [r7, #16]
 8005400:	2109      	movs	r1, #9
 8005402:	6878      	ldr	r0, [r7, #4]
 8005404:	f002 fd26 	bl	8007e54 <xTimerGenericCommand>
 8005408:	4603      	mov	r3, r0
 800540a:	2b01      	cmp	r3, #1
 800540c:	d002      	beq.n	8005414 <osTimerStart+0x48>
 800540e:	23ff      	movs	r3, #255	@ 0xff
 8005410:	617b      	str	r3, [r7, #20]
 8005412:	e018      	b.n	8005446 <osTimerStart+0x7a>
 8005414:	68fb      	ldr	r3, [r7, #12]
 8005416:	2b00      	cmp	r3, #0
 8005418:	d015      	beq.n	8005446 <osTimerStart+0x7a>
 800541a:	4b0d      	ldr	r3, [pc, #52]	@ (8005450 <osTimerStart+0x84>)
 800541c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005420:	601a      	str	r2, [r3, #0]
 8005422:	f3bf 8f4f 	dsb	sy
 8005426:	f3bf 8f6f 	isb	sy
 800542a:	e00c      	b.n	8005446 <osTimerStart+0x7a>
 800542c:	2300      	movs	r3, #0
 800542e:	9300      	str	r3, [sp, #0]
 8005430:	2300      	movs	r3, #0
 8005432:	693a      	ldr	r2, [r7, #16]
 8005434:	2104      	movs	r1, #4
 8005436:	6878      	ldr	r0, [r7, #4]
 8005438:	f002 fd0c 	bl	8007e54 <xTimerGenericCommand>
 800543c:	4603      	mov	r3, r0
 800543e:	2b01      	cmp	r3, #1
 8005440:	d001      	beq.n	8005446 <osTimerStart+0x7a>
 8005442:	23ff      	movs	r3, #255	@ 0xff
 8005444:	617b      	str	r3, [r7, #20]
 8005446:	697b      	ldr	r3, [r7, #20]
 8005448:	4618      	mov	r0, r3
 800544a:	3718      	adds	r7, #24
 800544c:	46bd      	mov	sp, r7
 800544e:	bd80      	pop	{r7, pc}
 8005450:	e000ed04 	.word	0xe000ed04

08005454 <osTimerStop>:
 8005454:	b580      	push	{r7, lr}
 8005456:	b086      	sub	sp, #24
 8005458:	af02      	add	r7, sp, #8
 800545a:	6078      	str	r0, [r7, #4]
 800545c:	2300      	movs	r3, #0
 800545e:	60fb      	str	r3, [r7, #12]
 8005460:	2300      	movs	r3, #0
 8005462:	60bb      	str	r3, [r7, #8]
 8005464:	f7ff ff04 	bl	8005270 <inHandlerMode>
 8005468:	4603      	mov	r3, r0
 800546a:	2b00      	cmp	r3, #0
 800546c:	d019      	beq.n	80054a2 <osTimerStop+0x4e>
 800546e:	f107 0308 	add.w	r3, r7, #8
 8005472:	2200      	movs	r2, #0
 8005474:	9200      	str	r2, [sp, #0]
 8005476:	2200      	movs	r2, #0
 8005478:	2108      	movs	r1, #8
 800547a:	6878      	ldr	r0, [r7, #4]
 800547c:	f002 fcea 	bl	8007e54 <xTimerGenericCommand>
 8005480:	4603      	mov	r3, r0
 8005482:	2b01      	cmp	r3, #1
 8005484:	d001      	beq.n	800548a <osTimerStop+0x36>
 8005486:	23ff      	movs	r3, #255	@ 0xff
 8005488:	e019      	b.n	80054be <osTimerStop+0x6a>
 800548a:	68bb      	ldr	r3, [r7, #8]
 800548c:	2b00      	cmp	r3, #0
 800548e:	d015      	beq.n	80054bc <osTimerStop+0x68>
 8005490:	4b0d      	ldr	r3, [pc, #52]	@ (80054c8 <osTimerStop+0x74>)
 8005492:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005496:	601a      	str	r2, [r3, #0]
 8005498:	f3bf 8f4f 	dsb	sy
 800549c:	f3bf 8f6f 	isb	sy
 80054a0:	e00c      	b.n	80054bc <osTimerStop+0x68>
 80054a2:	2300      	movs	r3, #0
 80054a4:	9300      	str	r3, [sp, #0]
 80054a6:	2300      	movs	r3, #0
 80054a8:	2200      	movs	r2, #0
 80054aa:	2103      	movs	r1, #3
 80054ac:	6878      	ldr	r0, [r7, #4]
 80054ae:	f002 fcd1 	bl	8007e54 <xTimerGenericCommand>
 80054b2:	4603      	mov	r3, r0
 80054b4:	2b01      	cmp	r3, #1
 80054b6:	d001      	beq.n	80054bc <osTimerStop+0x68>
 80054b8:	23ff      	movs	r3, #255	@ 0xff
 80054ba:	60fb      	str	r3, [r7, #12]
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	4618      	mov	r0, r3
 80054c0:	3710      	adds	r7, #16
 80054c2:	46bd      	mov	sp, r7
 80054c4:	bd80      	pop	{r7, pc}
 80054c6:	bf00      	nop
 80054c8:	e000ed04 	.word	0xe000ed04

080054cc <osMutexCreate>:
 80054cc:	b580      	push	{r7, lr}
 80054ce:	b082      	sub	sp, #8
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	6078      	str	r0, [r7, #4]
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	685b      	ldr	r3, [r3, #4]
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d007      	beq.n	80054ec <osMutexCreate+0x20>
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	685b      	ldr	r3, [r3, #4]
 80054e0:	4619      	mov	r1, r3
 80054e2:	2001      	movs	r0, #1
 80054e4:	f000 fc8f 	bl	8005e06 <xQueueCreateMutexStatic>
 80054e8:	4603      	mov	r3, r0
 80054ea:	e003      	b.n	80054f4 <osMutexCreate+0x28>
 80054ec:	2001      	movs	r0, #1
 80054ee:	f000 fc72 	bl	8005dd6 <xQueueCreateMutex>
 80054f2:	4603      	mov	r3, r0
 80054f4:	4618      	mov	r0, r3
 80054f6:	3708      	adds	r7, #8
 80054f8:	46bd      	mov	sp, r7
 80054fa:	bd80      	pop	{r7, pc}

080054fc <osSemaphoreCreate>:
 80054fc:	b580      	push	{r7, lr}
 80054fe:	b086      	sub	sp, #24
 8005500:	af02      	add	r7, sp, #8
 8005502:	6078      	str	r0, [r7, #4]
 8005504:	6039      	str	r1, [r7, #0]
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	685b      	ldr	r3, [r3, #4]
 800550a:	2b00      	cmp	r3, #0
 800550c:	d00f      	beq.n	800552e <osSemaphoreCreate+0x32>
 800550e:	683b      	ldr	r3, [r7, #0]
 8005510:	2b01      	cmp	r3, #1
 8005512:	d10a      	bne.n	800552a <osSemaphoreCreate+0x2e>
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	685b      	ldr	r3, [r3, #4]
 8005518:	2203      	movs	r2, #3
 800551a:	9200      	str	r2, [sp, #0]
 800551c:	2200      	movs	r2, #0
 800551e:	2100      	movs	r1, #0
 8005520:	2001      	movs	r0, #1
 8005522:	f000 fb67 	bl	8005bf4 <xQueueGenericCreateStatic>
 8005526:	4603      	mov	r3, r0
 8005528:	e016      	b.n	8005558 <osSemaphoreCreate+0x5c>
 800552a:	2300      	movs	r3, #0
 800552c:	e014      	b.n	8005558 <osSemaphoreCreate+0x5c>
 800552e:	683b      	ldr	r3, [r7, #0]
 8005530:	2b01      	cmp	r3, #1
 8005532:	d110      	bne.n	8005556 <osSemaphoreCreate+0x5a>
 8005534:	2203      	movs	r2, #3
 8005536:	2100      	movs	r1, #0
 8005538:	2001      	movs	r0, #1
 800553a:	f000 fbd8 	bl	8005cee <xQueueGenericCreate>
 800553e:	60f8      	str	r0, [r7, #12]
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	2b00      	cmp	r3, #0
 8005544:	d005      	beq.n	8005552 <osSemaphoreCreate+0x56>
 8005546:	2300      	movs	r3, #0
 8005548:	2200      	movs	r2, #0
 800554a:	2100      	movs	r1, #0
 800554c:	68f8      	ldr	r0, [r7, #12]
 800554e:	f000 fc75 	bl	8005e3c <xQueueGenericSend>
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	e000      	b.n	8005558 <osSemaphoreCreate+0x5c>
 8005556:	2300      	movs	r3, #0
 8005558:	4618      	mov	r0, r3
 800555a:	3710      	adds	r7, #16
 800555c:	46bd      	mov	sp, r7
 800555e:	bd80      	pop	{r7, pc}

08005560 <osSemaphoreWait>:
 8005560:	b580      	push	{r7, lr}
 8005562:	b084      	sub	sp, #16
 8005564:	af00      	add	r7, sp, #0
 8005566:	6078      	str	r0, [r7, #4]
 8005568:	6039      	str	r1, [r7, #0]
 800556a:	2300      	movs	r3, #0
 800556c:	60bb      	str	r3, [r7, #8]
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	2b00      	cmp	r3, #0
 8005572:	d101      	bne.n	8005578 <osSemaphoreWait+0x18>
 8005574:	2380      	movs	r3, #128	@ 0x80
 8005576:	e03a      	b.n	80055ee <osSemaphoreWait+0x8e>
 8005578:	2300      	movs	r3, #0
 800557a:	60fb      	str	r3, [r7, #12]
 800557c:	683b      	ldr	r3, [r7, #0]
 800557e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005582:	d103      	bne.n	800558c <osSemaphoreWait+0x2c>
 8005584:	f04f 33ff 	mov.w	r3, #4294967295
 8005588:	60fb      	str	r3, [r7, #12]
 800558a:	e009      	b.n	80055a0 <osSemaphoreWait+0x40>
 800558c:	683b      	ldr	r3, [r7, #0]
 800558e:	2b00      	cmp	r3, #0
 8005590:	d006      	beq.n	80055a0 <osSemaphoreWait+0x40>
 8005592:	683b      	ldr	r3, [r7, #0]
 8005594:	60fb      	str	r3, [r7, #12]
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	2b00      	cmp	r3, #0
 800559a:	d101      	bne.n	80055a0 <osSemaphoreWait+0x40>
 800559c:	2301      	movs	r3, #1
 800559e:	60fb      	str	r3, [r7, #12]
 80055a0:	f7ff fe66 	bl	8005270 <inHandlerMode>
 80055a4:	4603      	mov	r3, r0
 80055a6:	2b00      	cmp	r3, #0
 80055a8:	d017      	beq.n	80055da <osSemaphoreWait+0x7a>
 80055aa:	f107 0308 	add.w	r3, r7, #8
 80055ae:	461a      	mov	r2, r3
 80055b0:	2100      	movs	r1, #0
 80055b2:	6878      	ldr	r0, [r7, #4]
 80055b4:	f001 f864 	bl	8006680 <xQueueReceiveFromISR>
 80055b8:	4603      	mov	r3, r0
 80055ba:	2b01      	cmp	r3, #1
 80055bc:	d001      	beq.n	80055c2 <osSemaphoreWait+0x62>
 80055be:	23ff      	movs	r3, #255	@ 0xff
 80055c0:	e015      	b.n	80055ee <osSemaphoreWait+0x8e>
 80055c2:	68bb      	ldr	r3, [r7, #8]
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d011      	beq.n	80055ec <osSemaphoreWait+0x8c>
 80055c8:	4b0b      	ldr	r3, [pc, #44]	@ (80055f8 <osSemaphoreWait+0x98>)
 80055ca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80055ce:	601a      	str	r2, [r3, #0]
 80055d0:	f3bf 8f4f 	dsb	sy
 80055d4:	f3bf 8f6f 	isb	sy
 80055d8:	e008      	b.n	80055ec <osSemaphoreWait+0x8c>
 80055da:	68f9      	ldr	r1, [r7, #12]
 80055dc:	6878      	ldr	r0, [r7, #4]
 80055de:	f000 ff3f 	bl	8006460 <xQueueSemaphoreTake>
 80055e2:	4603      	mov	r3, r0
 80055e4:	2b01      	cmp	r3, #1
 80055e6:	d001      	beq.n	80055ec <osSemaphoreWait+0x8c>
 80055e8:	23ff      	movs	r3, #255	@ 0xff
 80055ea:	e000      	b.n	80055ee <osSemaphoreWait+0x8e>
 80055ec:	2300      	movs	r3, #0
 80055ee:	4618      	mov	r0, r3
 80055f0:	3710      	adds	r7, #16
 80055f2:	46bd      	mov	sp, r7
 80055f4:	bd80      	pop	{r7, pc}
 80055f6:	bf00      	nop
 80055f8:	e000ed04 	.word	0xe000ed04

080055fc <osSemaphoreRelease>:
 80055fc:	b580      	push	{r7, lr}
 80055fe:	b084      	sub	sp, #16
 8005600:	af00      	add	r7, sp, #0
 8005602:	6078      	str	r0, [r7, #4]
 8005604:	2300      	movs	r3, #0
 8005606:	60fb      	str	r3, [r7, #12]
 8005608:	2300      	movs	r3, #0
 800560a:	60bb      	str	r3, [r7, #8]
 800560c:	f7ff fe30 	bl	8005270 <inHandlerMode>
 8005610:	4603      	mov	r3, r0
 8005612:	2b00      	cmp	r3, #0
 8005614:	d016      	beq.n	8005644 <osSemaphoreRelease+0x48>
 8005616:	f107 0308 	add.w	r3, r7, #8
 800561a:	4619      	mov	r1, r3
 800561c:	6878      	ldr	r0, [r7, #4]
 800561e:	f000 fdad 	bl	800617c <xQueueGiveFromISR>
 8005622:	4603      	mov	r3, r0
 8005624:	2b01      	cmp	r3, #1
 8005626:	d001      	beq.n	800562c <osSemaphoreRelease+0x30>
 8005628:	23ff      	movs	r3, #255	@ 0xff
 800562a:	e017      	b.n	800565c <osSemaphoreRelease+0x60>
 800562c:	68bb      	ldr	r3, [r7, #8]
 800562e:	2b00      	cmp	r3, #0
 8005630:	d013      	beq.n	800565a <osSemaphoreRelease+0x5e>
 8005632:	4b0c      	ldr	r3, [pc, #48]	@ (8005664 <osSemaphoreRelease+0x68>)
 8005634:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005638:	601a      	str	r2, [r3, #0]
 800563a:	f3bf 8f4f 	dsb	sy
 800563e:	f3bf 8f6f 	isb	sy
 8005642:	e00a      	b.n	800565a <osSemaphoreRelease+0x5e>
 8005644:	2300      	movs	r3, #0
 8005646:	2200      	movs	r2, #0
 8005648:	2100      	movs	r1, #0
 800564a:	6878      	ldr	r0, [r7, #4]
 800564c:	f000 fbf6 	bl	8005e3c <xQueueGenericSend>
 8005650:	4603      	mov	r3, r0
 8005652:	2b01      	cmp	r3, #1
 8005654:	d001      	beq.n	800565a <osSemaphoreRelease+0x5e>
 8005656:	23ff      	movs	r3, #255	@ 0xff
 8005658:	60fb      	str	r3, [r7, #12]
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	4618      	mov	r0, r3
 800565e:	3710      	adds	r7, #16
 8005660:	46bd      	mov	sp, r7
 8005662:	bd80      	pop	{r7, pc}
 8005664:	e000ed04 	.word	0xe000ed04

08005668 <xEventGroupCreate>:
 8005668:	b580      	push	{r7, lr}
 800566a:	b082      	sub	sp, #8
 800566c:	af00      	add	r7, sp, #0
 800566e:	201c      	movs	r0, #28
 8005670:	f003 f974 	bl	800895c <pvPortMalloc>
 8005674:	6078      	str	r0, [r7, #4]
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	2b00      	cmp	r3, #0
 800567a:	d00a      	beq.n	8005692 <xEventGroupCreate+0x2a>
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	2200      	movs	r2, #0
 8005680:	601a      	str	r2, [r3, #0]
 8005682:	687b      	ldr	r3, [r7, #4]
 8005684:	3304      	adds	r3, #4
 8005686:	4618      	mov	r0, r3
 8005688:	f000 f995 	bl	80059b6 <vListInitialise>
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	2200      	movs	r2, #0
 8005690:	761a      	strb	r2, [r3, #24]
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	4618      	mov	r0, r3
 8005696:	3708      	adds	r7, #8
 8005698:	46bd      	mov	sp, r7
 800569a:	bd80      	pop	{r7, pc}

0800569c <xEventGroupWaitBits>:
 800569c:	b580      	push	{r7, lr}
 800569e:	b090      	sub	sp, #64	@ 0x40
 80056a0:	af00      	add	r7, sp, #0
 80056a2:	60f8      	str	r0, [r7, #12]
 80056a4:	60b9      	str	r1, [r7, #8]
 80056a6:	607a      	str	r2, [r7, #4]
 80056a8:	603b      	str	r3, [r7, #0]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	637b      	str	r3, [r7, #52]	@ 0x34
 80056ae:	2300      	movs	r3, #0
 80056b0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80056b2:	2300      	movs	r3, #0
 80056b4:	633b      	str	r3, [r7, #48]	@ 0x30
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	2b00      	cmp	r3, #0
 80056ba:	d10b      	bne.n	80056d4 <xEventGroupWaitBits+0x38>
 80056bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80056c0:	f383 8811 	msr	BASEPRI, r3
 80056c4:	f3bf 8f6f 	isb	sy
 80056c8:	f3bf 8f4f 	dsb	sy
 80056cc:	623b      	str	r3, [r7, #32]
 80056ce:	bf00      	nop
 80056d0:	bf00      	nop
 80056d2:	e7fd      	b.n	80056d0 <xEventGroupWaitBits+0x34>
 80056d4:	68bb      	ldr	r3, [r7, #8]
 80056d6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80056da:	d30b      	bcc.n	80056f4 <xEventGroupWaitBits+0x58>
 80056dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80056e0:	f383 8811 	msr	BASEPRI, r3
 80056e4:	f3bf 8f6f 	isb	sy
 80056e8:	f3bf 8f4f 	dsb	sy
 80056ec:	61fb      	str	r3, [r7, #28]
 80056ee:	bf00      	nop
 80056f0:	bf00      	nop
 80056f2:	e7fd      	b.n	80056f0 <xEventGroupWaitBits+0x54>
 80056f4:	68bb      	ldr	r3, [r7, #8]
 80056f6:	2b00      	cmp	r3, #0
 80056f8:	d10b      	bne.n	8005712 <xEventGroupWaitBits+0x76>
 80056fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80056fe:	f383 8811 	msr	BASEPRI, r3
 8005702:	f3bf 8f6f 	isb	sy
 8005706:	f3bf 8f4f 	dsb	sy
 800570a:	61bb      	str	r3, [r7, #24]
 800570c:	bf00      	nop
 800570e:	bf00      	nop
 8005710:	e7fd      	b.n	800570e <xEventGroupWaitBits+0x72>
 8005712:	f002 f879 	bl	8007808 <xTaskGetSchedulerState>
 8005716:	4603      	mov	r3, r0
 8005718:	2b00      	cmp	r3, #0
 800571a:	d102      	bne.n	8005722 <xEventGroupWaitBits+0x86>
 800571c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800571e:	2b00      	cmp	r3, #0
 8005720:	d101      	bne.n	8005726 <xEventGroupWaitBits+0x8a>
 8005722:	2301      	movs	r3, #1
 8005724:	e000      	b.n	8005728 <xEventGroupWaitBits+0x8c>
 8005726:	2300      	movs	r3, #0
 8005728:	2b00      	cmp	r3, #0
 800572a:	d10b      	bne.n	8005744 <xEventGroupWaitBits+0xa8>
 800572c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005730:	f383 8811 	msr	BASEPRI, r3
 8005734:	f3bf 8f6f 	isb	sy
 8005738:	f3bf 8f4f 	dsb	sy
 800573c:	617b      	str	r3, [r7, #20]
 800573e:	bf00      	nop
 8005740:	bf00      	nop
 8005742:	e7fd      	b.n	8005740 <xEventGroupWaitBits+0xa4>
 8005744:	f001 fbda 	bl	8006efc <vTaskSuspendAll>
 8005748:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800574e:	683a      	ldr	r2, [r7, #0]
 8005750:	68b9      	ldr	r1, [r7, #8]
 8005752:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8005754:	f000 f90d 	bl	8005972 <prvTestWaitCondition>
 8005758:	62b8      	str	r0, [r7, #40]	@ 0x28
 800575a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800575c:	2b00      	cmp	r3, #0
 800575e:	d00e      	beq.n	800577e <xEventGroupWaitBits+0xe2>
 8005760:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005762:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005764:	2300      	movs	r3, #0
 8005766:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2b00      	cmp	r3, #0
 800576c:	d028      	beq.n	80057c0 <xEventGroupWaitBits+0x124>
 800576e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	68bb      	ldr	r3, [r7, #8]
 8005774:	43db      	mvns	r3, r3
 8005776:	401a      	ands	r2, r3
 8005778:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800577a:	601a      	str	r2, [r3, #0]
 800577c:	e020      	b.n	80057c0 <xEventGroupWaitBits+0x124>
 800577e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005780:	2b00      	cmp	r3, #0
 8005782:	d104      	bne.n	800578e <xEventGroupWaitBits+0xf2>
 8005784:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005786:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005788:	2301      	movs	r3, #1
 800578a:	633b      	str	r3, [r7, #48]	@ 0x30
 800578c:	e018      	b.n	80057c0 <xEventGroupWaitBits+0x124>
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	2b00      	cmp	r3, #0
 8005792:	d003      	beq.n	800579c <xEventGroupWaitBits+0x100>
 8005794:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005796:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800579a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800579c:	683b      	ldr	r3, [r7, #0]
 800579e:	2b00      	cmp	r3, #0
 80057a0:	d003      	beq.n	80057aa <xEventGroupWaitBits+0x10e>
 80057a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80057a4:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80057a8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80057aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80057ac:	1d18      	adds	r0, r3, #4
 80057ae:	68ba      	ldr	r2, [r7, #8]
 80057b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80057b2:	4313      	orrs	r3, r2
 80057b4:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80057b6:	4619      	mov	r1, r3
 80057b8:	f001 fd98 	bl	80072ec <vTaskPlaceOnUnorderedEventList>
 80057bc:	2300      	movs	r3, #0
 80057be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80057c0:	f001 fbaa 	bl	8006f18 <xTaskResumeAll>
 80057c4:	6278      	str	r0, [r7, #36]	@ 0x24
 80057c6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d031      	beq.n	8005830 <xEventGroupWaitBits+0x194>
 80057cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057ce:	2b00      	cmp	r3, #0
 80057d0:	d107      	bne.n	80057e2 <xEventGroupWaitBits+0x146>
 80057d2:	4b1a      	ldr	r3, [pc, #104]	@ (800583c <xEventGroupWaitBits+0x1a0>)
 80057d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80057d8:	601a      	str	r2, [r3, #0]
 80057da:	f3bf 8f4f 	dsb	sy
 80057de:	f3bf 8f6f 	isb	sy
 80057e2:	f002 f9bd 	bl	8007b60 <uxTaskResetEventItemValue>
 80057e6:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80057e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80057ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d11a      	bne.n	8005828 <xEventGroupWaitBits+0x18c>
 80057f2:	f002 ff91 	bl	8008718 <vPortEnterCritical>
 80057f6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80057fc:	683a      	ldr	r2, [r7, #0]
 80057fe:	68b9      	ldr	r1, [r7, #8]
 8005800:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8005802:	f000 f8b6 	bl	8005972 <prvTestWaitCondition>
 8005806:	4603      	mov	r3, r0
 8005808:	2b00      	cmp	r3, #0
 800580a:	d009      	beq.n	8005820 <xEventGroupWaitBits+0x184>
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	2b00      	cmp	r3, #0
 8005810:	d006      	beq.n	8005820 <xEventGroupWaitBits+0x184>
 8005812:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005814:	681a      	ldr	r2, [r3, #0]
 8005816:	68bb      	ldr	r3, [r7, #8]
 8005818:	43db      	mvns	r3, r3
 800581a:	401a      	ands	r2, r3
 800581c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800581e:	601a      	str	r2, [r3, #0]
 8005820:	2301      	movs	r3, #1
 8005822:	633b      	str	r3, [r7, #48]	@ 0x30
 8005824:	f002 ffaa 	bl	800877c <vPortExitCritical>
 8005828:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800582a:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800582e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005830:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005832:	4618      	mov	r0, r3
 8005834:	3740      	adds	r7, #64	@ 0x40
 8005836:	46bd      	mov	sp, r7
 8005838:	bd80      	pop	{r7, pc}
 800583a:	bf00      	nop
 800583c:	e000ed04 	.word	0xe000ed04

08005840 <xEventGroupSetBits>:
 8005840:	b580      	push	{r7, lr}
 8005842:	b08e      	sub	sp, #56	@ 0x38
 8005844:	af00      	add	r7, sp, #0
 8005846:	6078      	str	r0, [r7, #4]
 8005848:	6039      	str	r1, [r7, #0]
 800584a:	2300      	movs	r3, #0
 800584c:	633b      	str	r3, [r7, #48]	@ 0x30
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005852:	2300      	movs	r3, #0
 8005854:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	2b00      	cmp	r3, #0
 800585a:	d10b      	bne.n	8005874 <xEventGroupSetBits+0x34>
 800585c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005860:	f383 8811 	msr	BASEPRI, r3
 8005864:	f3bf 8f6f 	isb	sy
 8005868:	f3bf 8f4f 	dsb	sy
 800586c:	613b      	str	r3, [r7, #16]
 800586e:	bf00      	nop
 8005870:	bf00      	nop
 8005872:	e7fd      	b.n	8005870 <xEventGroupSetBits+0x30>
 8005874:	683b      	ldr	r3, [r7, #0]
 8005876:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800587a:	d30b      	bcc.n	8005894 <xEventGroupSetBits+0x54>
 800587c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005880:	f383 8811 	msr	BASEPRI, r3
 8005884:	f3bf 8f6f 	isb	sy
 8005888:	f3bf 8f4f 	dsb	sy
 800588c:	60fb      	str	r3, [r7, #12]
 800588e:	bf00      	nop
 8005890:	bf00      	nop
 8005892:	e7fd      	b.n	8005890 <xEventGroupSetBits+0x50>
 8005894:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005896:	3304      	adds	r3, #4
 8005898:	627b      	str	r3, [r7, #36]	@ 0x24
 800589a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800589c:	3308      	adds	r3, #8
 800589e:	623b      	str	r3, [r7, #32]
 80058a0:	f001 fb2c 	bl	8006efc <vTaskSuspendAll>
 80058a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80058a6:	68db      	ldr	r3, [r3, #12]
 80058a8:	637b      	str	r3, [r7, #52]	@ 0x34
 80058aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058ac:	681a      	ldr	r2, [r3, #0]
 80058ae:	683b      	ldr	r3, [r7, #0]
 80058b0:	431a      	orrs	r2, r3
 80058b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058b4:	601a      	str	r2, [r3, #0]
 80058b6:	e03c      	b.n	8005932 <xEventGroupSetBits+0xf2>
 80058b8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80058ba:	685b      	ldr	r3, [r3, #4]
 80058bc:	61fb      	str	r3, [r7, #28]
 80058be:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	61bb      	str	r3, [r7, #24]
 80058c4:	2300      	movs	r3, #0
 80058c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80058c8:	69bb      	ldr	r3, [r7, #24]
 80058ca:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 80058ce:	617b      	str	r3, [r7, #20]
 80058d0:	69bb      	ldr	r3, [r7, #24]
 80058d2:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 80058d6:	61bb      	str	r3, [r7, #24]
 80058d8:	697b      	ldr	r3, [r7, #20]
 80058da:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d108      	bne.n	80058f4 <xEventGroupSetBits+0xb4>
 80058e2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058e4:	681a      	ldr	r2, [r3, #0]
 80058e6:	69bb      	ldr	r3, [r7, #24]
 80058e8:	4013      	ands	r3, r2
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d00b      	beq.n	8005906 <xEventGroupSetBits+0xc6>
 80058ee:	2301      	movs	r3, #1
 80058f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80058f2:	e008      	b.n	8005906 <xEventGroupSetBits+0xc6>
 80058f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058f6:	681a      	ldr	r2, [r3, #0]
 80058f8:	69bb      	ldr	r3, [r7, #24]
 80058fa:	4013      	ands	r3, r2
 80058fc:	69ba      	ldr	r2, [r7, #24]
 80058fe:	429a      	cmp	r2, r3
 8005900:	d101      	bne.n	8005906 <xEventGroupSetBits+0xc6>
 8005902:	2301      	movs	r3, #1
 8005904:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005906:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005908:	2b00      	cmp	r3, #0
 800590a:	d010      	beq.n	800592e <xEventGroupSetBits+0xee>
 800590c:	697b      	ldr	r3, [r7, #20]
 800590e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005912:	2b00      	cmp	r3, #0
 8005914:	d003      	beq.n	800591e <xEventGroupSetBits+0xde>
 8005916:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005918:	69bb      	ldr	r3, [r7, #24]
 800591a:	4313      	orrs	r3, r2
 800591c:	633b      	str	r3, [r7, #48]	@ 0x30
 800591e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005920:	681b      	ldr	r3, [r3, #0]
 8005922:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8005926:	4619      	mov	r1, r3
 8005928:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 800592a:	f001 fdad 	bl	8007488 <vTaskRemoveFromUnorderedEventList>
 800592e:	69fb      	ldr	r3, [r7, #28]
 8005930:	637b      	str	r3, [r7, #52]	@ 0x34
 8005932:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8005934:	6a3b      	ldr	r3, [r7, #32]
 8005936:	429a      	cmp	r2, r3
 8005938:	d1be      	bne.n	80058b8 <xEventGroupSetBits+0x78>
 800593a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800593c:	681a      	ldr	r2, [r3, #0]
 800593e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005940:	43db      	mvns	r3, r3
 8005942:	401a      	ands	r2, r3
 8005944:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005946:	601a      	str	r2, [r3, #0]
 8005948:	f001 fae6 	bl	8006f18 <xTaskResumeAll>
 800594c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	4618      	mov	r0, r3
 8005952:	3738      	adds	r7, #56	@ 0x38
 8005954:	46bd      	mov	sp, r7
 8005956:	bd80      	pop	{r7, pc}

08005958 <vEventGroupSetBitsCallback>:
 8005958:	b580      	push	{r7, lr}
 800595a:	b082      	sub	sp, #8
 800595c:	af00      	add	r7, sp, #0
 800595e:	6078      	str	r0, [r7, #4]
 8005960:	6039      	str	r1, [r7, #0]
 8005962:	6839      	ldr	r1, [r7, #0]
 8005964:	6878      	ldr	r0, [r7, #4]
 8005966:	f7ff ff6b 	bl	8005840 <xEventGroupSetBits>
 800596a:	bf00      	nop
 800596c:	3708      	adds	r7, #8
 800596e:	46bd      	mov	sp, r7
 8005970:	bd80      	pop	{r7, pc}

08005972 <prvTestWaitCondition>:
 8005972:	b480      	push	{r7}
 8005974:	b087      	sub	sp, #28
 8005976:	af00      	add	r7, sp, #0
 8005978:	60f8      	str	r0, [r7, #12]
 800597a:	60b9      	str	r1, [r7, #8]
 800597c:	607a      	str	r2, [r7, #4]
 800597e:	2300      	movs	r3, #0
 8005980:	617b      	str	r3, [r7, #20]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	2b00      	cmp	r3, #0
 8005986:	d107      	bne.n	8005998 <prvTestWaitCondition+0x26>
 8005988:	68fa      	ldr	r2, [r7, #12]
 800598a:	68bb      	ldr	r3, [r7, #8]
 800598c:	4013      	ands	r3, r2
 800598e:	2b00      	cmp	r3, #0
 8005990:	d00a      	beq.n	80059a8 <prvTestWaitCondition+0x36>
 8005992:	2301      	movs	r3, #1
 8005994:	617b      	str	r3, [r7, #20]
 8005996:	e007      	b.n	80059a8 <prvTestWaitCondition+0x36>
 8005998:	68fa      	ldr	r2, [r7, #12]
 800599a:	68bb      	ldr	r3, [r7, #8]
 800599c:	4013      	ands	r3, r2
 800599e:	68ba      	ldr	r2, [r7, #8]
 80059a0:	429a      	cmp	r2, r3
 80059a2:	d101      	bne.n	80059a8 <prvTestWaitCondition+0x36>
 80059a4:	2301      	movs	r3, #1
 80059a6:	617b      	str	r3, [r7, #20]
 80059a8:	697b      	ldr	r3, [r7, #20]
 80059aa:	4618      	mov	r0, r3
 80059ac:	371c      	adds	r7, #28
 80059ae:	46bd      	mov	sp, r7
 80059b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059b4:	4770      	bx	lr

080059b6 <vListInitialise>:
 80059b6:	b480      	push	{r7}
 80059b8:	b083      	sub	sp, #12
 80059ba:	af00      	add	r7, sp, #0
 80059bc:	6078      	str	r0, [r7, #4]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	f103 0208 	add.w	r2, r3, #8
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	605a      	str	r2, [r3, #4]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	f04f 32ff 	mov.w	r2, #4294967295
 80059ce:	609a      	str	r2, [r3, #8]
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	f103 0208 	add.w	r2, r3, #8
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	60da      	str	r2, [r3, #12]
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	f103 0208 	add.w	r2, r3, #8
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	611a      	str	r2, [r3, #16]
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	2200      	movs	r2, #0
 80059e8:	601a      	str	r2, [r3, #0]
 80059ea:	bf00      	nop
 80059ec:	370c      	adds	r7, #12
 80059ee:	46bd      	mov	sp, r7
 80059f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f4:	4770      	bx	lr

080059f6 <vListInitialiseItem>:
 80059f6:	b480      	push	{r7}
 80059f8:	b083      	sub	sp, #12
 80059fa:	af00      	add	r7, sp, #0
 80059fc:	6078      	str	r0, [r7, #4]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	2200      	movs	r2, #0
 8005a02:	611a      	str	r2, [r3, #16]
 8005a04:	bf00      	nop
 8005a06:	370c      	adds	r7, #12
 8005a08:	46bd      	mov	sp, r7
 8005a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a0e:	4770      	bx	lr

08005a10 <vListInsertEnd>:
 8005a10:	b480      	push	{r7}
 8005a12:	b085      	sub	sp, #20
 8005a14:	af00      	add	r7, sp, #0
 8005a16:	6078      	str	r0, [r7, #4]
 8005a18:	6039      	str	r1, [r7, #0]
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	685b      	ldr	r3, [r3, #4]
 8005a1e:	60fb      	str	r3, [r7, #12]
 8005a20:	683b      	ldr	r3, [r7, #0]
 8005a22:	68fa      	ldr	r2, [r7, #12]
 8005a24:	605a      	str	r2, [r3, #4]
 8005a26:	68fb      	ldr	r3, [r7, #12]
 8005a28:	689a      	ldr	r2, [r3, #8]
 8005a2a:	683b      	ldr	r3, [r7, #0]
 8005a2c:	609a      	str	r2, [r3, #8]
 8005a2e:	68fb      	ldr	r3, [r7, #12]
 8005a30:	689b      	ldr	r3, [r3, #8]
 8005a32:	683a      	ldr	r2, [r7, #0]
 8005a34:	605a      	str	r2, [r3, #4]
 8005a36:	68fb      	ldr	r3, [r7, #12]
 8005a38:	683a      	ldr	r2, [r7, #0]
 8005a3a:	609a      	str	r2, [r3, #8]
 8005a3c:	683b      	ldr	r3, [r7, #0]
 8005a3e:	687a      	ldr	r2, [r7, #4]
 8005a40:	611a      	str	r2, [r3, #16]
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	1c5a      	adds	r2, r3, #1
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	601a      	str	r2, [r3, #0]
 8005a4c:	bf00      	nop
 8005a4e:	3714      	adds	r7, #20
 8005a50:	46bd      	mov	sp, r7
 8005a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a56:	4770      	bx	lr

08005a58 <vListInsert>:
 8005a58:	b480      	push	{r7}
 8005a5a:	b085      	sub	sp, #20
 8005a5c:	af00      	add	r7, sp, #0
 8005a5e:	6078      	str	r0, [r7, #4]
 8005a60:	6039      	str	r1, [r7, #0]
 8005a62:	683b      	ldr	r3, [r7, #0]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	60bb      	str	r3, [r7, #8]
 8005a68:	68bb      	ldr	r3, [r7, #8]
 8005a6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a6e:	d103      	bne.n	8005a78 <vListInsert+0x20>
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	691b      	ldr	r3, [r3, #16]
 8005a74:	60fb      	str	r3, [r7, #12]
 8005a76:	e00c      	b.n	8005a92 <vListInsert+0x3a>
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	3308      	adds	r3, #8
 8005a7c:	60fb      	str	r3, [r7, #12]
 8005a7e:	e002      	b.n	8005a86 <vListInsert+0x2e>
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	685b      	ldr	r3, [r3, #4]
 8005a84:	60fb      	str	r3, [r7, #12]
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	685b      	ldr	r3, [r3, #4]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	68ba      	ldr	r2, [r7, #8]
 8005a8e:	429a      	cmp	r2, r3
 8005a90:	d2f6      	bcs.n	8005a80 <vListInsert+0x28>
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	685a      	ldr	r2, [r3, #4]
 8005a96:	683b      	ldr	r3, [r7, #0]
 8005a98:	605a      	str	r2, [r3, #4]
 8005a9a:	683b      	ldr	r3, [r7, #0]
 8005a9c:	685b      	ldr	r3, [r3, #4]
 8005a9e:	683a      	ldr	r2, [r7, #0]
 8005aa0:	609a      	str	r2, [r3, #8]
 8005aa2:	683b      	ldr	r3, [r7, #0]
 8005aa4:	68fa      	ldr	r2, [r7, #12]
 8005aa6:	609a      	str	r2, [r3, #8]
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	683a      	ldr	r2, [r7, #0]
 8005aac:	605a      	str	r2, [r3, #4]
 8005aae:	683b      	ldr	r3, [r7, #0]
 8005ab0:	687a      	ldr	r2, [r7, #4]
 8005ab2:	611a      	str	r2, [r3, #16]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	1c5a      	adds	r2, r3, #1
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	601a      	str	r2, [r3, #0]
 8005abe:	bf00      	nop
 8005ac0:	3714      	adds	r7, #20
 8005ac2:	46bd      	mov	sp, r7
 8005ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ac8:	4770      	bx	lr

08005aca <uxListRemove>:
 8005aca:	b480      	push	{r7}
 8005acc:	b085      	sub	sp, #20
 8005ace:	af00      	add	r7, sp, #0
 8005ad0:	6078      	str	r0, [r7, #4]
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	691b      	ldr	r3, [r3, #16]
 8005ad6:	60fb      	str	r3, [r7, #12]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	687a      	ldr	r2, [r7, #4]
 8005ade:	6892      	ldr	r2, [r2, #8]
 8005ae0:	609a      	str	r2, [r3, #8]
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	689b      	ldr	r3, [r3, #8]
 8005ae6:	687a      	ldr	r2, [r7, #4]
 8005ae8:	6852      	ldr	r2, [r2, #4]
 8005aea:	605a      	str	r2, [r3, #4]
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	685b      	ldr	r3, [r3, #4]
 8005af0:	687a      	ldr	r2, [r7, #4]
 8005af2:	429a      	cmp	r2, r3
 8005af4:	d103      	bne.n	8005afe <uxListRemove+0x34>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	689a      	ldr	r2, [r3, #8]
 8005afa:	68fb      	ldr	r3, [r7, #12]
 8005afc:	605a      	str	r2, [r3, #4]
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	2200      	movs	r2, #0
 8005b02:	611a      	str	r2, [r3, #16]
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	1e5a      	subs	r2, r3, #1
 8005b0a:	68fb      	ldr	r3, [r7, #12]
 8005b0c:	601a      	str	r2, [r3, #0]
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	4618      	mov	r0, r3
 8005b14:	3714      	adds	r7, #20
 8005b16:	46bd      	mov	sp, r7
 8005b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b1c:	4770      	bx	lr
	...

08005b20 <xQueueGenericReset>:
 8005b20:	b580      	push	{r7, lr}
 8005b22:	b084      	sub	sp, #16
 8005b24:	af00      	add	r7, sp, #0
 8005b26:	6078      	str	r0, [r7, #4]
 8005b28:	6039      	str	r1, [r7, #0]
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	60fb      	str	r3, [r7, #12]
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d10b      	bne.n	8005b4c <xQueueGenericReset+0x2c>
 8005b34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005b38:	f383 8811 	msr	BASEPRI, r3
 8005b3c:	f3bf 8f6f 	isb	sy
 8005b40:	f3bf 8f4f 	dsb	sy
 8005b44:	60bb      	str	r3, [r7, #8]
 8005b46:	bf00      	nop
 8005b48:	bf00      	nop
 8005b4a:	e7fd      	b.n	8005b48 <xQueueGenericReset+0x28>
 8005b4c:	f002 fde4 	bl	8008718 <vPortEnterCritical>
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681a      	ldr	r2, [r3, #0]
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b58:	68f9      	ldr	r1, [r7, #12]
 8005b5a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8005b5c:	fb01 f303 	mul.w	r3, r1, r3
 8005b60:	441a      	add	r2, r3
 8005b62:	68fb      	ldr	r3, [r7, #12]
 8005b64:	609a      	str	r2, [r3, #8]
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	2200      	movs	r2, #0
 8005b6a:	639a      	str	r2, [r3, #56]	@ 0x38
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	681a      	ldr	r2, [r3, #0]
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	605a      	str	r2, [r3, #4]
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	681a      	ldr	r2, [r3, #0]
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b7c:	3b01      	subs	r3, #1
 8005b7e:	68f9      	ldr	r1, [r7, #12]
 8005b80:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8005b82:	fb01 f303 	mul.w	r3, r1, r3
 8005b86:	441a      	add	r2, r3
 8005b88:	68fb      	ldr	r3, [r7, #12]
 8005b8a:	60da      	str	r2, [r3, #12]
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	22ff      	movs	r2, #255	@ 0xff
 8005b90:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	22ff      	movs	r2, #255	@ 0xff
 8005b98:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005b9c:	683b      	ldr	r3, [r7, #0]
 8005b9e:	2b00      	cmp	r3, #0
 8005ba0:	d114      	bne.n	8005bcc <xQueueGenericReset+0xac>
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	691b      	ldr	r3, [r3, #16]
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d01a      	beq.n	8005be0 <xQueueGenericReset+0xc0>
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	3310      	adds	r3, #16
 8005bae:	4618      	mov	r0, r3
 8005bb0:	f001 fc06 	bl	80073c0 <xTaskRemoveFromEventList>
 8005bb4:	4603      	mov	r3, r0
 8005bb6:	2b00      	cmp	r3, #0
 8005bb8:	d012      	beq.n	8005be0 <xQueueGenericReset+0xc0>
 8005bba:	4b0d      	ldr	r3, [pc, #52]	@ (8005bf0 <xQueueGenericReset+0xd0>)
 8005bbc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005bc0:	601a      	str	r2, [r3, #0]
 8005bc2:	f3bf 8f4f 	dsb	sy
 8005bc6:	f3bf 8f6f 	isb	sy
 8005bca:	e009      	b.n	8005be0 <xQueueGenericReset+0xc0>
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	3310      	adds	r3, #16
 8005bd0:	4618      	mov	r0, r3
 8005bd2:	f7ff fef0 	bl	80059b6 <vListInitialise>
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	3324      	adds	r3, #36	@ 0x24
 8005bda:	4618      	mov	r0, r3
 8005bdc:	f7ff feeb 	bl	80059b6 <vListInitialise>
 8005be0:	f002 fdcc 	bl	800877c <vPortExitCritical>
 8005be4:	2301      	movs	r3, #1
 8005be6:	4618      	mov	r0, r3
 8005be8:	3710      	adds	r7, #16
 8005bea:	46bd      	mov	sp, r7
 8005bec:	bd80      	pop	{r7, pc}
 8005bee:	bf00      	nop
 8005bf0:	e000ed04 	.word	0xe000ed04

08005bf4 <xQueueGenericCreateStatic>:
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b08e      	sub	sp, #56	@ 0x38
 8005bf8:	af02      	add	r7, sp, #8
 8005bfa:	60f8      	str	r0, [r7, #12]
 8005bfc:	60b9      	str	r1, [r7, #8]
 8005bfe:	607a      	str	r2, [r7, #4]
 8005c00:	603b      	str	r3, [r7, #0]
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	2b00      	cmp	r3, #0
 8005c06:	d10b      	bne.n	8005c20 <xQueueGenericCreateStatic+0x2c>
 8005c08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c0c:	f383 8811 	msr	BASEPRI, r3
 8005c10:	f3bf 8f6f 	isb	sy
 8005c14:	f3bf 8f4f 	dsb	sy
 8005c18:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005c1a:	bf00      	nop
 8005c1c:	bf00      	nop
 8005c1e:	e7fd      	b.n	8005c1c <xQueueGenericCreateStatic+0x28>
 8005c20:	683b      	ldr	r3, [r7, #0]
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	d10b      	bne.n	8005c3e <xQueueGenericCreateStatic+0x4a>
 8005c26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c2a:	f383 8811 	msr	BASEPRI, r3
 8005c2e:	f3bf 8f6f 	isb	sy
 8005c32:	f3bf 8f4f 	dsb	sy
 8005c36:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c38:	bf00      	nop
 8005c3a:	bf00      	nop
 8005c3c:	e7fd      	b.n	8005c3a <xQueueGenericCreateStatic+0x46>
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	d002      	beq.n	8005c4a <xQueueGenericCreateStatic+0x56>
 8005c44:	68bb      	ldr	r3, [r7, #8]
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d001      	beq.n	8005c4e <xQueueGenericCreateStatic+0x5a>
 8005c4a:	2301      	movs	r3, #1
 8005c4c:	e000      	b.n	8005c50 <xQueueGenericCreateStatic+0x5c>
 8005c4e:	2300      	movs	r3, #0
 8005c50:	2b00      	cmp	r3, #0
 8005c52:	d10b      	bne.n	8005c6c <xQueueGenericCreateStatic+0x78>
 8005c54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c58:	f383 8811 	msr	BASEPRI, r3
 8005c5c:	f3bf 8f6f 	isb	sy
 8005c60:	f3bf 8f4f 	dsb	sy
 8005c64:	623b      	str	r3, [r7, #32]
 8005c66:	bf00      	nop
 8005c68:	bf00      	nop
 8005c6a:	e7fd      	b.n	8005c68 <xQueueGenericCreateStatic+0x74>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d102      	bne.n	8005c78 <xQueueGenericCreateStatic+0x84>
 8005c72:	68bb      	ldr	r3, [r7, #8]
 8005c74:	2b00      	cmp	r3, #0
 8005c76:	d101      	bne.n	8005c7c <xQueueGenericCreateStatic+0x88>
 8005c78:	2301      	movs	r3, #1
 8005c7a:	e000      	b.n	8005c7e <xQueueGenericCreateStatic+0x8a>
 8005c7c:	2300      	movs	r3, #0
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d10b      	bne.n	8005c9a <xQueueGenericCreateStatic+0xa6>
 8005c82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c86:	f383 8811 	msr	BASEPRI, r3
 8005c8a:	f3bf 8f6f 	isb	sy
 8005c8e:	f3bf 8f4f 	dsb	sy
 8005c92:	61fb      	str	r3, [r7, #28]
 8005c94:	bf00      	nop
 8005c96:	bf00      	nop
 8005c98:	e7fd      	b.n	8005c96 <xQueueGenericCreateStatic+0xa2>
 8005c9a:	2348      	movs	r3, #72	@ 0x48
 8005c9c:	617b      	str	r3, [r7, #20]
 8005c9e:	697b      	ldr	r3, [r7, #20]
 8005ca0:	2b48      	cmp	r3, #72	@ 0x48
 8005ca2:	d00b      	beq.n	8005cbc <xQueueGenericCreateStatic+0xc8>
 8005ca4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ca8:	f383 8811 	msr	BASEPRI, r3
 8005cac:	f3bf 8f6f 	isb	sy
 8005cb0:	f3bf 8f4f 	dsb	sy
 8005cb4:	61bb      	str	r3, [r7, #24]
 8005cb6:	bf00      	nop
 8005cb8:	bf00      	nop
 8005cba:	e7fd      	b.n	8005cb8 <xQueueGenericCreateStatic+0xc4>
 8005cbc:	697b      	ldr	r3, [r7, #20]
 8005cbe:	683b      	ldr	r3, [r7, #0]
 8005cc0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005cc2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005cc4:	2b00      	cmp	r3, #0
 8005cc6:	d00d      	beq.n	8005ce4 <xQueueGenericCreateStatic+0xf0>
 8005cc8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005cca:	2201      	movs	r2, #1
 8005ccc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005cd0:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8005cd4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005cd6:	9300      	str	r3, [sp, #0]
 8005cd8:	4613      	mov	r3, r2
 8005cda:	687a      	ldr	r2, [r7, #4]
 8005cdc:	68b9      	ldr	r1, [r7, #8]
 8005cde:	68f8      	ldr	r0, [r7, #12]
 8005ce0:	f000 f840 	bl	8005d64 <prvInitialiseNewQueue>
 8005ce4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ce6:	4618      	mov	r0, r3
 8005ce8:	3730      	adds	r7, #48	@ 0x30
 8005cea:	46bd      	mov	sp, r7
 8005cec:	bd80      	pop	{r7, pc}

08005cee <xQueueGenericCreate>:
 8005cee:	b580      	push	{r7, lr}
 8005cf0:	b08a      	sub	sp, #40	@ 0x28
 8005cf2:	af02      	add	r7, sp, #8
 8005cf4:	60f8      	str	r0, [r7, #12]
 8005cf6:	60b9      	str	r1, [r7, #8]
 8005cf8:	4613      	mov	r3, r2
 8005cfa:	71fb      	strb	r3, [r7, #7]
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d10b      	bne.n	8005d1a <xQueueGenericCreate+0x2c>
 8005d02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d06:	f383 8811 	msr	BASEPRI, r3
 8005d0a:	f3bf 8f6f 	isb	sy
 8005d0e:	f3bf 8f4f 	dsb	sy
 8005d12:	613b      	str	r3, [r7, #16]
 8005d14:	bf00      	nop
 8005d16:	bf00      	nop
 8005d18:	e7fd      	b.n	8005d16 <xQueueGenericCreate+0x28>
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	68ba      	ldr	r2, [r7, #8]
 8005d1e:	fb02 f303 	mul.w	r3, r2, r3
 8005d22:	61fb      	str	r3, [r7, #28]
 8005d24:	69fb      	ldr	r3, [r7, #28]
 8005d26:	3348      	adds	r3, #72	@ 0x48
 8005d28:	4618      	mov	r0, r3
 8005d2a:	f002 fe17 	bl	800895c <pvPortMalloc>
 8005d2e:	61b8      	str	r0, [r7, #24]
 8005d30:	69bb      	ldr	r3, [r7, #24]
 8005d32:	2b00      	cmp	r3, #0
 8005d34:	d011      	beq.n	8005d5a <xQueueGenericCreate+0x6c>
 8005d36:	69bb      	ldr	r3, [r7, #24]
 8005d38:	617b      	str	r3, [r7, #20]
 8005d3a:	697b      	ldr	r3, [r7, #20]
 8005d3c:	3348      	adds	r3, #72	@ 0x48
 8005d3e:	617b      	str	r3, [r7, #20]
 8005d40:	69bb      	ldr	r3, [r7, #24]
 8005d42:	2200      	movs	r2, #0
 8005d44:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005d48:	79fa      	ldrb	r2, [r7, #7]
 8005d4a:	69bb      	ldr	r3, [r7, #24]
 8005d4c:	9300      	str	r3, [sp, #0]
 8005d4e:	4613      	mov	r3, r2
 8005d50:	697a      	ldr	r2, [r7, #20]
 8005d52:	68b9      	ldr	r1, [r7, #8]
 8005d54:	68f8      	ldr	r0, [r7, #12]
 8005d56:	f000 f805 	bl	8005d64 <prvInitialiseNewQueue>
 8005d5a:	69bb      	ldr	r3, [r7, #24]
 8005d5c:	4618      	mov	r0, r3
 8005d5e:	3720      	adds	r7, #32
 8005d60:	46bd      	mov	sp, r7
 8005d62:	bd80      	pop	{r7, pc}

08005d64 <prvInitialiseNewQueue>:
 8005d64:	b580      	push	{r7, lr}
 8005d66:	b084      	sub	sp, #16
 8005d68:	af00      	add	r7, sp, #0
 8005d6a:	60f8      	str	r0, [r7, #12]
 8005d6c:	60b9      	str	r1, [r7, #8]
 8005d6e:	607a      	str	r2, [r7, #4]
 8005d70:	70fb      	strb	r3, [r7, #3]
 8005d72:	68bb      	ldr	r3, [r7, #8]
 8005d74:	2b00      	cmp	r3, #0
 8005d76:	d103      	bne.n	8005d80 <prvInitialiseNewQueue+0x1c>
 8005d78:	69bb      	ldr	r3, [r7, #24]
 8005d7a:	69ba      	ldr	r2, [r7, #24]
 8005d7c:	601a      	str	r2, [r3, #0]
 8005d7e:	e002      	b.n	8005d86 <prvInitialiseNewQueue+0x22>
 8005d80:	69bb      	ldr	r3, [r7, #24]
 8005d82:	687a      	ldr	r2, [r7, #4]
 8005d84:	601a      	str	r2, [r3, #0]
 8005d86:	69bb      	ldr	r3, [r7, #24]
 8005d88:	68fa      	ldr	r2, [r7, #12]
 8005d8a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005d8c:	69bb      	ldr	r3, [r7, #24]
 8005d8e:	68ba      	ldr	r2, [r7, #8]
 8005d90:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d92:	2101      	movs	r1, #1
 8005d94:	69b8      	ldr	r0, [r7, #24]
 8005d96:	f7ff fec3 	bl	8005b20 <xQueueGenericReset>
 8005d9a:	bf00      	nop
 8005d9c:	3710      	adds	r7, #16
 8005d9e:	46bd      	mov	sp, r7
 8005da0:	bd80      	pop	{r7, pc}

08005da2 <prvInitialiseMutex>:
 8005da2:	b580      	push	{r7, lr}
 8005da4:	b082      	sub	sp, #8
 8005da6:	af00      	add	r7, sp, #0
 8005da8:	6078      	str	r0, [r7, #4]
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d00e      	beq.n	8005dce <prvInitialiseMutex+0x2c>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	2200      	movs	r2, #0
 8005db4:	609a      	str	r2, [r3, #8]
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	2200      	movs	r2, #0
 8005dba:	601a      	str	r2, [r3, #0]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	2200      	movs	r2, #0
 8005dc0:	60da      	str	r2, [r3, #12]
 8005dc2:	2300      	movs	r3, #0
 8005dc4:	2200      	movs	r2, #0
 8005dc6:	2100      	movs	r1, #0
 8005dc8:	6878      	ldr	r0, [r7, #4]
 8005dca:	f000 f837 	bl	8005e3c <xQueueGenericSend>
 8005dce:	bf00      	nop
 8005dd0:	3708      	adds	r7, #8
 8005dd2:	46bd      	mov	sp, r7
 8005dd4:	bd80      	pop	{r7, pc}

08005dd6 <xQueueCreateMutex>:
 8005dd6:	b580      	push	{r7, lr}
 8005dd8:	b086      	sub	sp, #24
 8005dda:	af00      	add	r7, sp, #0
 8005ddc:	4603      	mov	r3, r0
 8005dde:	71fb      	strb	r3, [r7, #7]
 8005de0:	2301      	movs	r3, #1
 8005de2:	617b      	str	r3, [r7, #20]
 8005de4:	2300      	movs	r3, #0
 8005de6:	613b      	str	r3, [r7, #16]
 8005de8:	79fb      	ldrb	r3, [r7, #7]
 8005dea:	461a      	mov	r2, r3
 8005dec:	6939      	ldr	r1, [r7, #16]
 8005dee:	6978      	ldr	r0, [r7, #20]
 8005df0:	f7ff ff7d 	bl	8005cee <xQueueGenericCreate>
 8005df4:	60f8      	str	r0, [r7, #12]
 8005df6:	68f8      	ldr	r0, [r7, #12]
 8005df8:	f7ff ffd3 	bl	8005da2 <prvInitialiseMutex>
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	4618      	mov	r0, r3
 8005e00:	3718      	adds	r7, #24
 8005e02:	46bd      	mov	sp, r7
 8005e04:	bd80      	pop	{r7, pc}

08005e06 <xQueueCreateMutexStatic>:
 8005e06:	b580      	push	{r7, lr}
 8005e08:	b088      	sub	sp, #32
 8005e0a:	af02      	add	r7, sp, #8
 8005e0c:	4603      	mov	r3, r0
 8005e0e:	6039      	str	r1, [r7, #0]
 8005e10:	71fb      	strb	r3, [r7, #7]
 8005e12:	2301      	movs	r3, #1
 8005e14:	617b      	str	r3, [r7, #20]
 8005e16:	2300      	movs	r3, #0
 8005e18:	613b      	str	r3, [r7, #16]
 8005e1a:	79fb      	ldrb	r3, [r7, #7]
 8005e1c:	9300      	str	r3, [sp, #0]
 8005e1e:	683b      	ldr	r3, [r7, #0]
 8005e20:	2200      	movs	r2, #0
 8005e22:	6939      	ldr	r1, [r7, #16]
 8005e24:	6978      	ldr	r0, [r7, #20]
 8005e26:	f7ff fee5 	bl	8005bf4 <xQueueGenericCreateStatic>
 8005e2a:	60f8      	str	r0, [r7, #12]
 8005e2c:	68f8      	ldr	r0, [r7, #12]
 8005e2e:	f7ff ffb8 	bl	8005da2 <prvInitialiseMutex>
 8005e32:	68fb      	ldr	r3, [r7, #12]
 8005e34:	4618      	mov	r0, r3
 8005e36:	3718      	adds	r7, #24
 8005e38:	46bd      	mov	sp, r7
 8005e3a:	bd80      	pop	{r7, pc}

08005e3c <xQueueGenericSend>:
 8005e3c:	b580      	push	{r7, lr}
 8005e3e:	b08e      	sub	sp, #56	@ 0x38
 8005e40:	af00      	add	r7, sp, #0
 8005e42:	60f8      	str	r0, [r7, #12]
 8005e44:	60b9      	str	r1, [r7, #8]
 8005e46:	607a      	str	r2, [r7, #4]
 8005e48:	603b      	str	r3, [r7, #0]
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	637b      	str	r3, [r7, #52]	@ 0x34
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	633b      	str	r3, [r7, #48]	@ 0x30
 8005e52:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d10b      	bne.n	8005e70 <xQueueGenericSend+0x34>
 8005e58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005e5c:	f383 8811 	msr	BASEPRI, r3
 8005e60:	f3bf 8f6f 	isb	sy
 8005e64:	f3bf 8f4f 	dsb	sy
 8005e68:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e6a:	bf00      	nop
 8005e6c:	bf00      	nop
 8005e6e:	e7fd      	b.n	8005e6c <xQueueGenericSend+0x30>
 8005e70:	68bb      	ldr	r3, [r7, #8]
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d103      	bne.n	8005e7e <xQueueGenericSend+0x42>
 8005e76:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005e78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d101      	bne.n	8005e82 <xQueueGenericSend+0x46>
 8005e7e:	2301      	movs	r3, #1
 8005e80:	e000      	b.n	8005e84 <xQueueGenericSend+0x48>
 8005e82:	2300      	movs	r3, #0
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d10b      	bne.n	8005ea0 <xQueueGenericSend+0x64>
 8005e88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005e8c:	f383 8811 	msr	BASEPRI, r3
 8005e90:	f3bf 8f6f 	isb	sy
 8005e94:	f3bf 8f4f 	dsb	sy
 8005e98:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e9a:	bf00      	nop
 8005e9c:	bf00      	nop
 8005e9e:	e7fd      	b.n	8005e9c <xQueueGenericSend+0x60>
 8005ea0:	683b      	ldr	r3, [r7, #0]
 8005ea2:	2b02      	cmp	r3, #2
 8005ea4:	d103      	bne.n	8005eae <xQueueGenericSend+0x72>
 8005ea6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005ea8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005eaa:	2b01      	cmp	r3, #1
 8005eac:	d101      	bne.n	8005eb2 <xQueueGenericSend+0x76>
 8005eae:	2301      	movs	r3, #1
 8005eb0:	e000      	b.n	8005eb4 <xQueueGenericSend+0x78>
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	d10b      	bne.n	8005ed0 <xQueueGenericSend+0x94>
 8005eb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ebc:	f383 8811 	msr	BASEPRI, r3
 8005ec0:	f3bf 8f6f 	isb	sy
 8005ec4:	f3bf 8f4f 	dsb	sy
 8005ec8:	623b      	str	r3, [r7, #32]
 8005eca:	bf00      	nop
 8005ecc:	bf00      	nop
 8005ece:	e7fd      	b.n	8005ecc <xQueueGenericSend+0x90>
 8005ed0:	f001 fc9a 	bl	8007808 <xTaskGetSchedulerState>
 8005ed4:	4603      	mov	r3, r0
 8005ed6:	2b00      	cmp	r3, #0
 8005ed8:	d102      	bne.n	8005ee0 <xQueueGenericSend+0xa4>
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	2b00      	cmp	r3, #0
 8005ede:	d101      	bne.n	8005ee4 <xQueueGenericSend+0xa8>
 8005ee0:	2301      	movs	r3, #1
 8005ee2:	e000      	b.n	8005ee6 <xQueueGenericSend+0xaa>
 8005ee4:	2300      	movs	r3, #0
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d10b      	bne.n	8005f02 <xQueueGenericSend+0xc6>
 8005eea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005eee:	f383 8811 	msr	BASEPRI, r3
 8005ef2:	f3bf 8f6f 	isb	sy
 8005ef6:	f3bf 8f4f 	dsb	sy
 8005efa:	61fb      	str	r3, [r7, #28]
 8005efc:	bf00      	nop
 8005efe:	bf00      	nop
 8005f00:	e7fd      	b.n	8005efe <xQueueGenericSend+0xc2>
 8005f02:	f002 fc09 	bl	8008718 <vPortEnterCritical>
 8005f06:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f08:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005f0a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f0c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005f0e:	429a      	cmp	r2, r3
 8005f10:	d302      	bcc.n	8005f18 <xQueueGenericSend+0xdc>
 8005f12:	683b      	ldr	r3, [r7, #0]
 8005f14:	2b02      	cmp	r3, #2
 8005f16:	d129      	bne.n	8005f6c <xQueueGenericSend+0x130>
 8005f18:	683a      	ldr	r2, [r7, #0]
 8005f1a:	68b9      	ldr	r1, [r7, #8]
 8005f1c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8005f1e:	f000 fc49 	bl	80067b4 <prvCopyDataToQueue>
 8005f22:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8005f24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005f28:	2b00      	cmp	r3, #0
 8005f2a:	d010      	beq.n	8005f4e <xQueueGenericSend+0x112>
 8005f2c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f2e:	3324      	adds	r3, #36	@ 0x24
 8005f30:	4618      	mov	r0, r3
 8005f32:	f001 fa45 	bl	80073c0 <xTaskRemoveFromEventList>
 8005f36:	4603      	mov	r3, r0
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d013      	beq.n	8005f64 <xQueueGenericSend+0x128>
 8005f3c:	4b3f      	ldr	r3, [pc, #252]	@ (800603c <xQueueGenericSend+0x200>)
 8005f3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005f42:	601a      	str	r2, [r3, #0]
 8005f44:	f3bf 8f4f 	dsb	sy
 8005f48:	f3bf 8f6f 	isb	sy
 8005f4c:	e00a      	b.n	8005f64 <xQueueGenericSend+0x128>
 8005f4e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005f50:	2b00      	cmp	r3, #0
 8005f52:	d007      	beq.n	8005f64 <xQueueGenericSend+0x128>
 8005f54:	4b39      	ldr	r3, [pc, #228]	@ (800603c <xQueueGenericSend+0x200>)
 8005f56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005f5a:	601a      	str	r2, [r3, #0]
 8005f5c:	f3bf 8f4f 	dsb	sy
 8005f60:	f3bf 8f6f 	isb	sy
 8005f64:	f002 fc0a 	bl	800877c <vPortExitCritical>
 8005f68:	2301      	movs	r3, #1
 8005f6a:	e063      	b.n	8006034 <xQueueGenericSend+0x1f8>
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	d103      	bne.n	8005f7a <xQueueGenericSend+0x13e>
 8005f72:	f002 fc03 	bl	800877c <vPortExitCritical>
 8005f76:	2300      	movs	r3, #0
 8005f78:	e05c      	b.n	8006034 <xQueueGenericSend+0x1f8>
 8005f7a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	d106      	bne.n	8005f8e <xQueueGenericSend+0x152>
 8005f80:	f107 0314 	add.w	r3, r7, #20
 8005f84:	4618      	mov	r0, r3
 8005f86:	f001 fae3 	bl	8007550 <vTaskInternalSetTimeOutState>
 8005f8a:	2301      	movs	r3, #1
 8005f8c:	637b      	str	r3, [r7, #52]	@ 0x34
 8005f8e:	f002 fbf5 	bl	800877c <vPortExitCritical>
 8005f92:	f000 ffb3 	bl	8006efc <vTaskSuspendAll>
 8005f96:	f002 fbbf 	bl	8008718 <vPortEnterCritical>
 8005f9a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005f9c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005fa0:	b25b      	sxtb	r3, r3
 8005fa2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fa6:	d103      	bne.n	8005fb0 <xQueueGenericSend+0x174>
 8005fa8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005faa:	2200      	movs	r2, #0
 8005fac:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005fb0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005fb2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005fb6:	b25b      	sxtb	r3, r3
 8005fb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fbc:	d103      	bne.n	8005fc6 <xQueueGenericSend+0x18a>
 8005fbe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005fc0:	2200      	movs	r2, #0
 8005fc2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005fc6:	f002 fbd9 	bl	800877c <vPortExitCritical>
 8005fca:	1d3a      	adds	r2, r7, #4
 8005fcc:	f107 0314 	add.w	r3, r7, #20
 8005fd0:	4611      	mov	r1, r2
 8005fd2:	4618      	mov	r0, r3
 8005fd4:	f001 fad2 	bl	800757c <xTaskCheckForTimeOut>
 8005fd8:	4603      	mov	r3, r0
 8005fda:	2b00      	cmp	r3, #0
 8005fdc:	d124      	bne.n	8006028 <xQueueGenericSend+0x1ec>
 8005fde:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8005fe0:	f000 fce0 	bl	80069a4 <prvIsQueueFull>
 8005fe4:	4603      	mov	r3, r0
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d018      	beq.n	800601c <xQueueGenericSend+0x1e0>
 8005fea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005fec:	3310      	adds	r3, #16
 8005fee:	687a      	ldr	r2, [r7, #4]
 8005ff0:	4611      	mov	r1, r2
 8005ff2:	4618      	mov	r0, r3
 8005ff4:	f001 f954 	bl	80072a0 <vTaskPlaceOnEventList>
 8005ff8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8005ffa:	f000 fc6b 	bl	80068d4 <prvUnlockQueue>
 8005ffe:	f000 ff8b 	bl	8006f18 <xTaskResumeAll>
 8006002:	4603      	mov	r3, r0
 8006004:	2b00      	cmp	r3, #0
 8006006:	f47f af7c 	bne.w	8005f02 <xQueueGenericSend+0xc6>
 800600a:	4b0c      	ldr	r3, [pc, #48]	@ (800603c <xQueueGenericSend+0x200>)
 800600c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006010:	601a      	str	r2, [r3, #0]
 8006012:	f3bf 8f4f 	dsb	sy
 8006016:	f3bf 8f6f 	isb	sy
 800601a:	e772      	b.n	8005f02 <xQueueGenericSend+0xc6>
 800601c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800601e:	f000 fc59 	bl	80068d4 <prvUnlockQueue>
 8006022:	f000 ff79 	bl	8006f18 <xTaskResumeAll>
 8006026:	e76c      	b.n	8005f02 <xQueueGenericSend+0xc6>
 8006028:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800602a:	f000 fc53 	bl	80068d4 <prvUnlockQueue>
 800602e:	f000 ff73 	bl	8006f18 <xTaskResumeAll>
 8006032:	2300      	movs	r3, #0
 8006034:	4618      	mov	r0, r3
 8006036:	3738      	adds	r7, #56	@ 0x38
 8006038:	46bd      	mov	sp, r7
 800603a:	bd80      	pop	{r7, pc}
 800603c:	e000ed04 	.word	0xe000ed04

08006040 <xQueueGenericSendFromISR>:
 8006040:	b580      	push	{r7, lr}
 8006042:	b090      	sub	sp, #64	@ 0x40
 8006044:	af00      	add	r7, sp, #0
 8006046:	60f8      	str	r0, [r7, #12]
 8006048:	60b9      	str	r1, [r7, #8]
 800604a:	607a      	str	r2, [r7, #4]
 800604c:	603b      	str	r3, [r7, #0]
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006052:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006054:	2b00      	cmp	r3, #0
 8006056:	d10b      	bne.n	8006070 <xQueueGenericSendFromISR+0x30>
 8006058:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800605c:	f383 8811 	msr	BASEPRI, r3
 8006060:	f3bf 8f6f 	isb	sy
 8006064:	f3bf 8f4f 	dsb	sy
 8006068:	62bb      	str	r3, [r7, #40]	@ 0x28
 800606a:	bf00      	nop
 800606c:	bf00      	nop
 800606e:	e7fd      	b.n	800606c <xQueueGenericSendFromISR+0x2c>
 8006070:	68bb      	ldr	r3, [r7, #8]
 8006072:	2b00      	cmp	r3, #0
 8006074:	d103      	bne.n	800607e <xQueueGenericSendFromISR+0x3e>
 8006076:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006078:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800607a:	2b00      	cmp	r3, #0
 800607c:	d101      	bne.n	8006082 <xQueueGenericSendFromISR+0x42>
 800607e:	2301      	movs	r3, #1
 8006080:	e000      	b.n	8006084 <xQueueGenericSendFromISR+0x44>
 8006082:	2300      	movs	r3, #0
 8006084:	2b00      	cmp	r3, #0
 8006086:	d10b      	bne.n	80060a0 <xQueueGenericSendFromISR+0x60>
 8006088:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800608c:	f383 8811 	msr	BASEPRI, r3
 8006090:	f3bf 8f6f 	isb	sy
 8006094:	f3bf 8f4f 	dsb	sy
 8006098:	627b      	str	r3, [r7, #36]	@ 0x24
 800609a:	bf00      	nop
 800609c:	bf00      	nop
 800609e:	e7fd      	b.n	800609c <xQueueGenericSendFromISR+0x5c>
 80060a0:	683b      	ldr	r3, [r7, #0]
 80060a2:	2b02      	cmp	r3, #2
 80060a4:	d103      	bne.n	80060ae <xQueueGenericSendFromISR+0x6e>
 80060a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80060a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80060aa:	2b01      	cmp	r3, #1
 80060ac:	d101      	bne.n	80060b2 <xQueueGenericSendFromISR+0x72>
 80060ae:	2301      	movs	r3, #1
 80060b0:	e000      	b.n	80060b4 <xQueueGenericSendFromISR+0x74>
 80060b2:	2300      	movs	r3, #0
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d10b      	bne.n	80060d0 <xQueueGenericSendFromISR+0x90>
 80060b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80060bc:	f383 8811 	msr	BASEPRI, r3
 80060c0:	f3bf 8f6f 	isb	sy
 80060c4:	f3bf 8f4f 	dsb	sy
 80060c8:	623b      	str	r3, [r7, #32]
 80060ca:	bf00      	nop
 80060cc:	bf00      	nop
 80060ce:	e7fd      	b.n	80060cc <xQueueGenericSendFromISR+0x8c>
 80060d0:	f002 fc02 	bl	80088d8 <vPortValidateInterruptPriority>
 80060d4:	f3ef 8211 	mrs	r2, BASEPRI
 80060d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80060dc:	f383 8811 	msr	BASEPRI, r3
 80060e0:	f3bf 8f6f 	isb	sy
 80060e4:	f3bf 8f4f 	dsb	sy
 80060e8:	61fa      	str	r2, [r7, #28]
 80060ea:	61bb      	str	r3, [r7, #24]
 80060ec:	69fb      	ldr	r3, [r7, #28]
 80060ee:	637b      	str	r3, [r7, #52]	@ 0x34
 80060f0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80060f2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80060f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80060f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80060f8:	429a      	cmp	r2, r3
 80060fa:	d302      	bcc.n	8006102 <xQueueGenericSendFromISR+0xc2>
 80060fc:	683b      	ldr	r3, [r7, #0]
 80060fe:	2b02      	cmp	r3, #2
 8006100:	d12f      	bne.n	8006162 <xQueueGenericSendFromISR+0x122>
 8006102:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006104:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8006108:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800610c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800610e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006110:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006112:	683a      	ldr	r2, [r7, #0]
 8006114:	68b9      	ldr	r1, [r7, #8]
 8006116:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8006118:	f000 fb4c 	bl	80067b4 <prvCopyDataToQueue>
 800611c:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8006120:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006124:	d112      	bne.n	800614c <xQueueGenericSendFromISR+0x10c>
 8006126:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006128:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800612a:	2b00      	cmp	r3, #0
 800612c:	d016      	beq.n	800615c <xQueueGenericSendFromISR+0x11c>
 800612e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006130:	3324      	adds	r3, #36	@ 0x24
 8006132:	4618      	mov	r0, r3
 8006134:	f001 f944 	bl	80073c0 <xTaskRemoveFromEventList>
 8006138:	4603      	mov	r3, r0
 800613a:	2b00      	cmp	r3, #0
 800613c:	d00e      	beq.n	800615c <xQueueGenericSendFromISR+0x11c>
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	2b00      	cmp	r3, #0
 8006142:	d00b      	beq.n	800615c <xQueueGenericSendFromISR+0x11c>
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	2201      	movs	r2, #1
 8006148:	601a      	str	r2, [r3, #0]
 800614a:	e007      	b.n	800615c <xQueueGenericSendFromISR+0x11c>
 800614c:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8006150:	3301      	adds	r3, #1
 8006152:	b2db      	uxtb	r3, r3
 8006154:	b25a      	sxtb	r2, r3
 8006156:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006158:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800615c:	2301      	movs	r3, #1
 800615e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006160:	e001      	b.n	8006166 <xQueueGenericSendFromISR+0x126>
 8006162:	2300      	movs	r3, #0
 8006164:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006166:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006168:	617b      	str	r3, [r7, #20]
 800616a:	697b      	ldr	r3, [r7, #20]
 800616c:	f383 8811 	msr	BASEPRI, r3
 8006170:	bf00      	nop
 8006172:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006174:	4618      	mov	r0, r3
 8006176:	3740      	adds	r7, #64	@ 0x40
 8006178:	46bd      	mov	sp, r7
 800617a:	bd80      	pop	{r7, pc}

0800617c <xQueueGiveFromISR>:
 800617c:	b580      	push	{r7, lr}
 800617e:	b08e      	sub	sp, #56	@ 0x38
 8006180:	af00      	add	r7, sp, #0
 8006182:	6078      	str	r0, [r7, #4]
 8006184:	6039      	str	r1, [r7, #0]
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	633b      	str	r3, [r7, #48]	@ 0x30
 800618a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800618c:	2b00      	cmp	r3, #0
 800618e:	d10b      	bne.n	80061a8 <xQueueGiveFromISR+0x2c>
 8006190:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006194:	f383 8811 	msr	BASEPRI, r3
 8006198:	f3bf 8f6f 	isb	sy
 800619c:	f3bf 8f4f 	dsb	sy
 80061a0:	623b      	str	r3, [r7, #32]
 80061a2:	bf00      	nop
 80061a4:	bf00      	nop
 80061a6:	e7fd      	b.n	80061a4 <xQueueGiveFromISR+0x28>
 80061a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80061aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d00b      	beq.n	80061c8 <xQueueGiveFromISR+0x4c>
 80061b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80061b4:	f383 8811 	msr	BASEPRI, r3
 80061b8:	f3bf 8f6f 	isb	sy
 80061bc:	f3bf 8f4f 	dsb	sy
 80061c0:	61fb      	str	r3, [r7, #28]
 80061c2:	bf00      	nop
 80061c4:	bf00      	nop
 80061c6:	e7fd      	b.n	80061c4 <xQueueGiveFromISR+0x48>
 80061c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	d103      	bne.n	80061d8 <xQueueGiveFromISR+0x5c>
 80061d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80061d2:	689b      	ldr	r3, [r3, #8]
 80061d4:	2b00      	cmp	r3, #0
 80061d6:	d101      	bne.n	80061dc <xQueueGiveFromISR+0x60>
 80061d8:	2301      	movs	r3, #1
 80061da:	e000      	b.n	80061de <xQueueGiveFromISR+0x62>
 80061dc:	2300      	movs	r3, #0
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d10b      	bne.n	80061fa <xQueueGiveFromISR+0x7e>
 80061e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80061e6:	f383 8811 	msr	BASEPRI, r3
 80061ea:	f3bf 8f6f 	isb	sy
 80061ee:	f3bf 8f4f 	dsb	sy
 80061f2:	61bb      	str	r3, [r7, #24]
 80061f4:	bf00      	nop
 80061f6:	bf00      	nop
 80061f8:	e7fd      	b.n	80061f6 <xQueueGiveFromISR+0x7a>
 80061fa:	f002 fb6d 	bl	80088d8 <vPortValidateInterruptPriority>
 80061fe:	f3ef 8211 	mrs	r2, BASEPRI
 8006202:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006206:	f383 8811 	msr	BASEPRI, r3
 800620a:	f3bf 8f6f 	isb	sy
 800620e:	f3bf 8f4f 	dsb	sy
 8006212:	617a      	str	r2, [r7, #20]
 8006214:	613b      	str	r3, [r7, #16]
 8006216:	697b      	ldr	r3, [r7, #20]
 8006218:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800621a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800621c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800621e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006220:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006222:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006224:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006226:	429a      	cmp	r2, r3
 8006228:	d22b      	bcs.n	8006282 <xQueueGiveFromISR+0x106>
 800622a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800622c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8006230:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006234:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006236:	1c5a      	adds	r2, r3, #1
 8006238:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800623a:	639a      	str	r2, [r3, #56]	@ 0x38
 800623c:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 8006240:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006244:	d112      	bne.n	800626c <xQueueGiveFromISR+0xf0>
 8006246:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800624a:	2b00      	cmp	r3, #0
 800624c:	d016      	beq.n	800627c <xQueueGiveFromISR+0x100>
 800624e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006250:	3324      	adds	r3, #36	@ 0x24
 8006252:	4618      	mov	r0, r3
 8006254:	f001 f8b4 	bl	80073c0 <xTaskRemoveFromEventList>
 8006258:	4603      	mov	r3, r0
 800625a:	2b00      	cmp	r3, #0
 800625c:	d00e      	beq.n	800627c <xQueueGiveFromISR+0x100>
 800625e:	683b      	ldr	r3, [r7, #0]
 8006260:	2b00      	cmp	r3, #0
 8006262:	d00b      	beq.n	800627c <xQueueGiveFromISR+0x100>
 8006264:	683b      	ldr	r3, [r7, #0]
 8006266:	2201      	movs	r2, #1
 8006268:	601a      	str	r2, [r3, #0]
 800626a:	e007      	b.n	800627c <xQueueGiveFromISR+0x100>
 800626c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8006270:	3301      	adds	r3, #1
 8006272:	b2db      	uxtb	r3, r3
 8006274:	b25a      	sxtb	r2, r3
 8006276:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006278:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800627c:	2301      	movs	r3, #1
 800627e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006280:	e001      	b.n	8006286 <xQueueGiveFromISR+0x10a>
 8006282:	2300      	movs	r3, #0
 8006284:	637b      	str	r3, [r7, #52]	@ 0x34
 8006286:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006288:	60fb      	str	r3, [r7, #12]
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	f383 8811 	msr	BASEPRI, r3
 8006290:	bf00      	nop
 8006292:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006294:	4618      	mov	r0, r3
 8006296:	3738      	adds	r7, #56	@ 0x38
 8006298:	46bd      	mov	sp, r7
 800629a:	bd80      	pop	{r7, pc}

0800629c <xQueueReceive>:
 800629c:	b580      	push	{r7, lr}
 800629e:	b08c      	sub	sp, #48	@ 0x30
 80062a0:	af00      	add	r7, sp, #0
 80062a2:	60f8      	str	r0, [r7, #12]
 80062a4:	60b9      	str	r1, [r7, #8]
 80062a6:	607a      	str	r2, [r7, #4]
 80062a8:	2300      	movs	r3, #0
 80062aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80062b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d10b      	bne.n	80062ce <xQueueReceive+0x32>
 80062b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80062ba:	f383 8811 	msr	BASEPRI, r3
 80062be:	f3bf 8f6f 	isb	sy
 80062c2:	f3bf 8f4f 	dsb	sy
 80062c6:	623b      	str	r3, [r7, #32]
 80062c8:	bf00      	nop
 80062ca:	bf00      	nop
 80062cc:	e7fd      	b.n	80062ca <xQueueReceive+0x2e>
 80062ce:	68bb      	ldr	r3, [r7, #8]
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d103      	bne.n	80062dc <xQueueReceive+0x40>
 80062d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80062d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d101      	bne.n	80062e0 <xQueueReceive+0x44>
 80062dc:	2301      	movs	r3, #1
 80062de:	e000      	b.n	80062e2 <xQueueReceive+0x46>
 80062e0:	2300      	movs	r3, #0
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	d10b      	bne.n	80062fe <xQueueReceive+0x62>
 80062e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80062ea:	f383 8811 	msr	BASEPRI, r3
 80062ee:	f3bf 8f6f 	isb	sy
 80062f2:	f3bf 8f4f 	dsb	sy
 80062f6:	61fb      	str	r3, [r7, #28]
 80062f8:	bf00      	nop
 80062fa:	bf00      	nop
 80062fc:	e7fd      	b.n	80062fa <xQueueReceive+0x5e>
 80062fe:	f001 fa83 	bl	8007808 <xTaskGetSchedulerState>
 8006302:	4603      	mov	r3, r0
 8006304:	2b00      	cmp	r3, #0
 8006306:	d102      	bne.n	800630e <xQueueReceive+0x72>
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	2b00      	cmp	r3, #0
 800630c:	d101      	bne.n	8006312 <xQueueReceive+0x76>
 800630e:	2301      	movs	r3, #1
 8006310:	e000      	b.n	8006314 <xQueueReceive+0x78>
 8006312:	2300      	movs	r3, #0
 8006314:	2b00      	cmp	r3, #0
 8006316:	d10b      	bne.n	8006330 <xQueueReceive+0x94>
 8006318:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800631c:	f383 8811 	msr	BASEPRI, r3
 8006320:	f3bf 8f6f 	isb	sy
 8006324:	f3bf 8f4f 	dsb	sy
 8006328:	61bb      	str	r3, [r7, #24]
 800632a:	bf00      	nop
 800632c:	bf00      	nop
 800632e:	e7fd      	b.n	800632c <xQueueReceive+0x90>
 8006330:	f002 f9f2 	bl	8008718 <vPortEnterCritical>
 8006334:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006336:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006338:	627b      	str	r3, [r7, #36]	@ 0x24
 800633a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800633c:	2b00      	cmp	r3, #0
 800633e:	d01f      	beq.n	8006380 <xQueueReceive+0xe4>
 8006340:	68b9      	ldr	r1, [r7, #8]
 8006342:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006344:	f000 faa0 	bl	8006888 <prvCopyDataFromQueue>
 8006348:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800634a:	1e5a      	subs	r2, r3, #1
 800634c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800634e:	639a      	str	r2, [r3, #56]	@ 0x38
 8006350:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006352:	691b      	ldr	r3, [r3, #16]
 8006354:	2b00      	cmp	r3, #0
 8006356:	d00f      	beq.n	8006378 <xQueueReceive+0xdc>
 8006358:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800635a:	3310      	adds	r3, #16
 800635c:	4618      	mov	r0, r3
 800635e:	f001 f82f 	bl	80073c0 <xTaskRemoveFromEventList>
 8006362:	4603      	mov	r3, r0
 8006364:	2b00      	cmp	r3, #0
 8006366:	d007      	beq.n	8006378 <xQueueReceive+0xdc>
 8006368:	4b3c      	ldr	r3, [pc, #240]	@ (800645c <xQueueReceive+0x1c0>)
 800636a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800636e:	601a      	str	r2, [r3, #0]
 8006370:	f3bf 8f4f 	dsb	sy
 8006374:	f3bf 8f6f 	isb	sy
 8006378:	f002 fa00 	bl	800877c <vPortExitCritical>
 800637c:	2301      	movs	r3, #1
 800637e:	e069      	b.n	8006454 <xQueueReceive+0x1b8>
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	2b00      	cmp	r3, #0
 8006384:	d103      	bne.n	800638e <xQueueReceive+0xf2>
 8006386:	f002 f9f9 	bl	800877c <vPortExitCritical>
 800638a:	2300      	movs	r3, #0
 800638c:	e062      	b.n	8006454 <xQueueReceive+0x1b8>
 800638e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006390:	2b00      	cmp	r3, #0
 8006392:	d106      	bne.n	80063a2 <xQueueReceive+0x106>
 8006394:	f107 0310 	add.w	r3, r7, #16
 8006398:	4618      	mov	r0, r3
 800639a:	f001 f8d9 	bl	8007550 <vTaskInternalSetTimeOutState>
 800639e:	2301      	movs	r3, #1
 80063a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80063a2:	f002 f9eb 	bl	800877c <vPortExitCritical>
 80063a6:	f000 fda9 	bl	8006efc <vTaskSuspendAll>
 80063aa:	f002 f9b5 	bl	8008718 <vPortEnterCritical>
 80063ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80063b0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80063b4:	b25b      	sxtb	r3, r3
 80063b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063ba:	d103      	bne.n	80063c4 <xQueueReceive+0x128>
 80063bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80063be:	2200      	movs	r2, #0
 80063c0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80063c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80063c6:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80063ca:	b25b      	sxtb	r3, r3
 80063cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063d0:	d103      	bne.n	80063da <xQueueReceive+0x13e>
 80063d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80063d4:	2200      	movs	r2, #0
 80063d6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80063da:	f002 f9cf 	bl	800877c <vPortExitCritical>
 80063de:	1d3a      	adds	r2, r7, #4
 80063e0:	f107 0310 	add.w	r3, r7, #16
 80063e4:	4611      	mov	r1, r2
 80063e6:	4618      	mov	r0, r3
 80063e8:	f001 f8c8 	bl	800757c <xTaskCheckForTimeOut>
 80063ec:	4603      	mov	r3, r0
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d123      	bne.n	800643a <xQueueReceive+0x19e>
 80063f2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80063f4:	f000 fac0 	bl	8006978 <prvIsQueueEmpty>
 80063f8:	4603      	mov	r3, r0
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	d017      	beq.n	800642e <xQueueReceive+0x192>
 80063fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006400:	3324      	adds	r3, #36	@ 0x24
 8006402:	687a      	ldr	r2, [r7, #4]
 8006404:	4611      	mov	r1, r2
 8006406:	4618      	mov	r0, r3
 8006408:	f000 ff4a 	bl	80072a0 <vTaskPlaceOnEventList>
 800640c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800640e:	f000 fa61 	bl	80068d4 <prvUnlockQueue>
 8006412:	f000 fd81 	bl	8006f18 <xTaskResumeAll>
 8006416:	4603      	mov	r3, r0
 8006418:	2b00      	cmp	r3, #0
 800641a:	d189      	bne.n	8006330 <xQueueReceive+0x94>
 800641c:	4b0f      	ldr	r3, [pc, #60]	@ (800645c <xQueueReceive+0x1c0>)
 800641e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006422:	601a      	str	r2, [r3, #0]
 8006424:	f3bf 8f4f 	dsb	sy
 8006428:	f3bf 8f6f 	isb	sy
 800642c:	e780      	b.n	8006330 <xQueueReceive+0x94>
 800642e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006430:	f000 fa50 	bl	80068d4 <prvUnlockQueue>
 8006434:	f000 fd70 	bl	8006f18 <xTaskResumeAll>
 8006438:	e77a      	b.n	8006330 <xQueueReceive+0x94>
 800643a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800643c:	f000 fa4a 	bl	80068d4 <prvUnlockQueue>
 8006440:	f000 fd6a 	bl	8006f18 <xTaskResumeAll>
 8006444:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006446:	f000 fa97 	bl	8006978 <prvIsQueueEmpty>
 800644a:	4603      	mov	r3, r0
 800644c:	2b00      	cmp	r3, #0
 800644e:	f43f af6f 	beq.w	8006330 <xQueueReceive+0x94>
 8006452:	2300      	movs	r3, #0
 8006454:	4618      	mov	r0, r3
 8006456:	3730      	adds	r7, #48	@ 0x30
 8006458:	46bd      	mov	sp, r7
 800645a:	bd80      	pop	{r7, pc}
 800645c:	e000ed04 	.word	0xe000ed04

08006460 <xQueueSemaphoreTake>:
 8006460:	b580      	push	{r7, lr}
 8006462:	b08e      	sub	sp, #56	@ 0x38
 8006464:	af00      	add	r7, sp, #0
 8006466:	6078      	str	r0, [r7, #4]
 8006468:	6039      	str	r1, [r7, #0]
 800646a:	2300      	movs	r3, #0
 800646c:	637b      	str	r3, [r7, #52]	@ 0x34
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006472:	2300      	movs	r3, #0
 8006474:	633b      	str	r3, [r7, #48]	@ 0x30
 8006476:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006478:	2b00      	cmp	r3, #0
 800647a:	d10b      	bne.n	8006494 <xQueueSemaphoreTake+0x34>
 800647c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006480:	f383 8811 	msr	BASEPRI, r3
 8006484:	f3bf 8f6f 	isb	sy
 8006488:	f3bf 8f4f 	dsb	sy
 800648c:	623b      	str	r3, [r7, #32]
 800648e:	bf00      	nop
 8006490:	bf00      	nop
 8006492:	e7fd      	b.n	8006490 <xQueueSemaphoreTake+0x30>
 8006494:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006496:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006498:	2b00      	cmp	r3, #0
 800649a:	d00b      	beq.n	80064b4 <xQueueSemaphoreTake+0x54>
 800649c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80064a0:	f383 8811 	msr	BASEPRI, r3
 80064a4:	f3bf 8f6f 	isb	sy
 80064a8:	f3bf 8f4f 	dsb	sy
 80064ac:	61fb      	str	r3, [r7, #28]
 80064ae:	bf00      	nop
 80064b0:	bf00      	nop
 80064b2:	e7fd      	b.n	80064b0 <xQueueSemaphoreTake+0x50>
 80064b4:	f001 f9a8 	bl	8007808 <xTaskGetSchedulerState>
 80064b8:	4603      	mov	r3, r0
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d102      	bne.n	80064c4 <xQueueSemaphoreTake+0x64>
 80064be:	683b      	ldr	r3, [r7, #0]
 80064c0:	2b00      	cmp	r3, #0
 80064c2:	d101      	bne.n	80064c8 <xQueueSemaphoreTake+0x68>
 80064c4:	2301      	movs	r3, #1
 80064c6:	e000      	b.n	80064ca <xQueueSemaphoreTake+0x6a>
 80064c8:	2300      	movs	r3, #0
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d10b      	bne.n	80064e6 <xQueueSemaphoreTake+0x86>
 80064ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80064d2:	f383 8811 	msr	BASEPRI, r3
 80064d6:	f3bf 8f6f 	isb	sy
 80064da:	f3bf 8f4f 	dsb	sy
 80064de:	61bb      	str	r3, [r7, #24]
 80064e0:	bf00      	nop
 80064e2:	bf00      	nop
 80064e4:	e7fd      	b.n	80064e2 <xQueueSemaphoreTake+0x82>
 80064e6:	f002 f917 	bl	8008718 <vPortEnterCritical>
 80064ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80064ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 80064f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d024      	beq.n	8006540 <xQueueSemaphoreTake+0xe0>
 80064f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80064f8:	1e5a      	subs	r2, r3, #1
 80064fa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80064fc:	639a      	str	r2, [r3, #56]	@ 0x38
 80064fe:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006500:	681b      	ldr	r3, [r3, #0]
 8006502:	2b00      	cmp	r3, #0
 8006504:	d104      	bne.n	8006510 <xQueueSemaphoreTake+0xb0>
 8006506:	f001 fb43 	bl	8007b90 <pvTaskIncrementMutexHeldCount>
 800650a:	4602      	mov	r2, r0
 800650c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800650e:	609a      	str	r2, [r3, #8]
 8006510:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006512:	691b      	ldr	r3, [r3, #16]
 8006514:	2b00      	cmp	r3, #0
 8006516:	d00f      	beq.n	8006538 <xQueueSemaphoreTake+0xd8>
 8006518:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800651a:	3310      	adds	r3, #16
 800651c:	4618      	mov	r0, r3
 800651e:	f000 ff4f 	bl	80073c0 <xTaskRemoveFromEventList>
 8006522:	4603      	mov	r3, r0
 8006524:	2b00      	cmp	r3, #0
 8006526:	d007      	beq.n	8006538 <xQueueSemaphoreTake+0xd8>
 8006528:	4b54      	ldr	r3, [pc, #336]	@ (800667c <xQueueSemaphoreTake+0x21c>)
 800652a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800652e:	601a      	str	r2, [r3, #0]
 8006530:	f3bf 8f4f 	dsb	sy
 8006534:	f3bf 8f6f 	isb	sy
 8006538:	f002 f920 	bl	800877c <vPortExitCritical>
 800653c:	2301      	movs	r3, #1
 800653e:	e098      	b.n	8006672 <xQueueSemaphoreTake+0x212>
 8006540:	683b      	ldr	r3, [r7, #0]
 8006542:	2b00      	cmp	r3, #0
 8006544:	d112      	bne.n	800656c <xQueueSemaphoreTake+0x10c>
 8006546:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006548:	2b00      	cmp	r3, #0
 800654a:	d00b      	beq.n	8006564 <xQueueSemaphoreTake+0x104>
 800654c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006550:	f383 8811 	msr	BASEPRI, r3
 8006554:	f3bf 8f6f 	isb	sy
 8006558:	f3bf 8f4f 	dsb	sy
 800655c:	617b      	str	r3, [r7, #20]
 800655e:	bf00      	nop
 8006560:	bf00      	nop
 8006562:	e7fd      	b.n	8006560 <xQueueSemaphoreTake+0x100>
 8006564:	f002 f90a 	bl	800877c <vPortExitCritical>
 8006568:	2300      	movs	r3, #0
 800656a:	e082      	b.n	8006672 <xQueueSemaphoreTake+0x212>
 800656c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800656e:	2b00      	cmp	r3, #0
 8006570:	d106      	bne.n	8006580 <xQueueSemaphoreTake+0x120>
 8006572:	f107 030c 	add.w	r3, r7, #12
 8006576:	4618      	mov	r0, r3
 8006578:	f000 ffea 	bl	8007550 <vTaskInternalSetTimeOutState>
 800657c:	2301      	movs	r3, #1
 800657e:	637b      	str	r3, [r7, #52]	@ 0x34
 8006580:	f002 f8fc 	bl	800877c <vPortExitCritical>
 8006584:	f000 fcba 	bl	8006efc <vTaskSuspendAll>
 8006588:	f002 f8c6 	bl	8008718 <vPortEnterCritical>
 800658c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800658e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8006592:	b25b      	sxtb	r3, r3
 8006594:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006598:	d103      	bne.n	80065a2 <xQueueSemaphoreTake+0x142>
 800659a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800659c:	2200      	movs	r2, #0
 800659e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80065a2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80065a4:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80065a8:	b25b      	sxtb	r3, r3
 80065aa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065ae:	d103      	bne.n	80065b8 <xQueueSemaphoreTake+0x158>
 80065b0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80065b2:	2200      	movs	r2, #0
 80065b4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80065b8:	f002 f8e0 	bl	800877c <vPortExitCritical>
 80065bc:	463a      	mov	r2, r7
 80065be:	f107 030c 	add.w	r3, r7, #12
 80065c2:	4611      	mov	r1, r2
 80065c4:	4618      	mov	r0, r3
 80065c6:	f000 ffd9 	bl	800757c <xTaskCheckForTimeOut>
 80065ca:	4603      	mov	r3, r0
 80065cc:	2b00      	cmp	r3, #0
 80065ce:	d132      	bne.n	8006636 <xQueueSemaphoreTake+0x1d6>
 80065d0:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 80065d2:	f000 f9d1 	bl	8006978 <prvIsQueueEmpty>
 80065d6:	4603      	mov	r3, r0
 80065d8:	2b00      	cmp	r3, #0
 80065da:	d026      	beq.n	800662a <xQueueSemaphoreTake+0x1ca>
 80065dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	2b00      	cmp	r3, #0
 80065e2:	d109      	bne.n	80065f8 <xQueueSemaphoreTake+0x198>
 80065e4:	f002 f898 	bl	8008718 <vPortEnterCritical>
 80065e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80065ea:	689b      	ldr	r3, [r3, #8]
 80065ec:	4618      	mov	r0, r3
 80065ee:	f001 f929 	bl	8007844 <xTaskPriorityInherit>
 80065f2:	6338      	str	r0, [r7, #48]	@ 0x30
 80065f4:	f002 f8c2 	bl	800877c <vPortExitCritical>
 80065f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80065fa:	3324      	adds	r3, #36	@ 0x24
 80065fc:	683a      	ldr	r2, [r7, #0]
 80065fe:	4611      	mov	r1, r2
 8006600:	4618      	mov	r0, r3
 8006602:	f000 fe4d 	bl	80072a0 <vTaskPlaceOnEventList>
 8006606:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8006608:	f000 f964 	bl	80068d4 <prvUnlockQueue>
 800660c:	f000 fc84 	bl	8006f18 <xTaskResumeAll>
 8006610:	4603      	mov	r3, r0
 8006612:	2b00      	cmp	r3, #0
 8006614:	f47f af67 	bne.w	80064e6 <xQueueSemaphoreTake+0x86>
 8006618:	4b18      	ldr	r3, [pc, #96]	@ (800667c <xQueueSemaphoreTake+0x21c>)
 800661a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800661e:	601a      	str	r2, [r3, #0]
 8006620:	f3bf 8f4f 	dsb	sy
 8006624:	f3bf 8f6f 	isb	sy
 8006628:	e75d      	b.n	80064e6 <xQueueSemaphoreTake+0x86>
 800662a:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800662c:	f000 f952 	bl	80068d4 <prvUnlockQueue>
 8006630:	f000 fc72 	bl	8006f18 <xTaskResumeAll>
 8006634:	e757      	b.n	80064e6 <xQueueSemaphoreTake+0x86>
 8006636:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8006638:	f000 f94c 	bl	80068d4 <prvUnlockQueue>
 800663c:	f000 fc6c 	bl	8006f18 <xTaskResumeAll>
 8006640:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8006642:	f000 f999 	bl	8006978 <prvIsQueueEmpty>
 8006646:	4603      	mov	r3, r0
 8006648:	2b00      	cmp	r3, #0
 800664a:	f43f af4c 	beq.w	80064e6 <xQueueSemaphoreTake+0x86>
 800664e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006650:	2b00      	cmp	r3, #0
 8006652:	d00d      	beq.n	8006670 <xQueueSemaphoreTake+0x210>
 8006654:	f002 f860 	bl	8008718 <vPortEnterCritical>
 8006658:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800665a:	f000 f893 	bl	8006784 <prvGetDisinheritPriorityAfterTimeout>
 800665e:	6278      	str	r0, [r7, #36]	@ 0x24
 8006660:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006662:	689b      	ldr	r3, [r3, #8]
 8006664:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8006666:	4618      	mov	r0, r3
 8006668:	f001 f9ea 	bl	8007a40 <vTaskPriorityDisinheritAfterTimeout>
 800666c:	f002 f886 	bl	800877c <vPortExitCritical>
 8006670:	2300      	movs	r3, #0
 8006672:	4618      	mov	r0, r3
 8006674:	3738      	adds	r7, #56	@ 0x38
 8006676:	46bd      	mov	sp, r7
 8006678:	bd80      	pop	{r7, pc}
 800667a:	bf00      	nop
 800667c:	e000ed04 	.word	0xe000ed04

08006680 <xQueueReceiveFromISR>:
 8006680:	b580      	push	{r7, lr}
 8006682:	b08e      	sub	sp, #56	@ 0x38
 8006684:	af00      	add	r7, sp, #0
 8006686:	60f8      	str	r0, [r7, #12]
 8006688:	60b9      	str	r1, [r7, #8]
 800668a:	607a      	str	r2, [r7, #4]
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	633b      	str	r3, [r7, #48]	@ 0x30
 8006690:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006692:	2b00      	cmp	r3, #0
 8006694:	d10b      	bne.n	80066ae <xQueueReceiveFromISR+0x2e>
 8006696:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800669a:	f383 8811 	msr	BASEPRI, r3
 800669e:	f3bf 8f6f 	isb	sy
 80066a2:	f3bf 8f4f 	dsb	sy
 80066a6:	623b      	str	r3, [r7, #32]
 80066a8:	bf00      	nop
 80066aa:	bf00      	nop
 80066ac:	e7fd      	b.n	80066aa <xQueueReceiveFromISR+0x2a>
 80066ae:	68bb      	ldr	r3, [r7, #8]
 80066b0:	2b00      	cmp	r3, #0
 80066b2:	d103      	bne.n	80066bc <xQueueReceiveFromISR+0x3c>
 80066b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	d101      	bne.n	80066c0 <xQueueReceiveFromISR+0x40>
 80066bc:	2301      	movs	r3, #1
 80066be:	e000      	b.n	80066c2 <xQueueReceiveFromISR+0x42>
 80066c0:	2300      	movs	r3, #0
 80066c2:	2b00      	cmp	r3, #0
 80066c4:	d10b      	bne.n	80066de <xQueueReceiveFromISR+0x5e>
 80066c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80066ca:	f383 8811 	msr	BASEPRI, r3
 80066ce:	f3bf 8f6f 	isb	sy
 80066d2:	f3bf 8f4f 	dsb	sy
 80066d6:	61fb      	str	r3, [r7, #28]
 80066d8:	bf00      	nop
 80066da:	bf00      	nop
 80066dc:	e7fd      	b.n	80066da <xQueueReceiveFromISR+0x5a>
 80066de:	f002 f8fb 	bl	80088d8 <vPortValidateInterruptPriority>
 80066e2:	f3ef 8211 	mrs	r2, BASEPRI
 80066e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80066ea:	f383 8811 	msr	BASEPRI, r3
 80066ee:	f3bf 8f6f 	isb	sy
 80066f2:	f3bf 8f4f 	dsb	sy
 80066f6:	61ba      	str	r2, [r7, #24]
 80066f8:	617b      	str	r3, [r7, #20]
 80066fa:	69bb      	ldr	r3, [r7, #24]
 80066fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80066fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006700:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006702:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006704:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006706:	2b00      	cmp	r3, #0
 8006708:	d02f      	beq.n	800676a <xQueueReceiveFromISR+0xea>
 800670a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800670c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8006710:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006714:	68b9      	ldr	r1, [r7, #8]
 8006716:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8006718:	f000 f8b6 	bl	8006888 <prvCopyDataFromQueue>
 800671c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800671e:	1e5a      	subs	r2, r3, #1
 8006720:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006722:	639a      	str	r2, [r3, #56]	@ 0x38
 8006724:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 8006728:	f1b3 3fff 	cmp.w	r3, #4294967295
 800672c:	d112      	bne.n	8006754 <xQueueReceiveFromISR+0xd4>
 800672e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006730:	691b      	ldr	r3, [r3, #16]
 8006732:	2b00      	cmp	r3, #0
 8006734:	d016      	beq.n	8006764 <xQueueReceiveFromISR+0xe4>
 8006736:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006738:	3310      	adds	r3, #16
 800673a:	4618      	mov	r0, r3
 800673c:	f000 fe40 	bl	80073c0 <xTaskRemoveFromEventList>
 8006740:	4603      	mov	r3, r0
 8006742:	2b00      	cmp	r3, #0
 8006744:	d00e      	beq.n	8006764 <xQueueReceiveFromISR+0xe4>
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	2b00      	cmp	r3, #0
 800674a:	d00b      	beq.n	8006764 <xQueueReceiveFromISR+0xe4>
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	2201      	movs	r2, #1
 8006750:	601a      	str	r2, [r3, #0]
 8006752:	e007      	b.n	8006764 <xQueueReceiveFromISR+0xe4>
 8006754:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8006758:	3301      	adds	r3, #1
 800675a:	b2db      	uxtb	r3, r3
 800675c:	b25a      	sxtb	r2, r3
 800675e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006760:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006764:	2301      	movs	r3, #1
 8006766:	637b      	str	r3, [r7, #52]	@ 0x34
 8006768:	e001      	b.n	800676e <xQueueReceiveFromISR+0xee>
 800676a:	2300      	movs	r3, #0
 800676c:	637b      	str	r3, [r7, #52]	@ 0x34
 800676e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006770:	613b      	str	r3, [r7, #16]
 8006772:	693b      	ldr	r3, [r7, #16]
 8006774:	f383 8811 	msr	BASEPRI, r3
 8006778:	bf00      	nop
 800677a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800677c:	4618      	mov	r0, r3
 800677e:	3738      	adds	r7, #56	@ 0x38
 8006780:	46bd      	mov	sp, r7
 8006782:	bd80      	pop	{r7, pc}

08006784 <prvGetDisinheritPriorityAfterTimeout>:
 8006784:	b480      	push	{r7}
 8006786:	b085      	sub	sp, #20
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006790:	2b00      	cmp	r3, #0
 8006792:	d006      	beq.n	80067a2 <prvGetDisinheritPriorityAfterTimeout+0x1e>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	f1c3 0307 	rsb	r3, r3, #7
 800679e:	60fb      	str	r3, [r7, #12]
 80067a0:	e001      	b.n	80067a6 <prvGetDisinheritPriorityAfterTimeout+0x22>
 80067a2:	2300      	movs	r3, #0
 80067a4:	60fb      	str	r3, [r7, #12]
 80067a6:	68fb      	ldr	r3, [r7, #12]
 80067a8:	4618      	mov	r0, r3
 80067aa:	3714      	adds	r7, #20
 80067ac:	46bd      	mov	sp, r7
 80067ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067b2:	4770      	bx	lr

080067b4 <prvCopyDataToQueue>:
 80067b4:	b580      	push	{r7, lr}
 80067b6:	b086      	sub	sp, #24
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	60f8      	str	r0, [r7, #12]
 80067bc:	60b9      	str	r1, [r7, #8]
 80067be:	607a      	str	r2, [r7, #4]
 80067c0:	2300      	movs	r3, #0
 80067c2:	617b      	str	r3, [r7, #20]
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067c8:	613b      	str	r3, [r7, #16]
 80067ca:	68fb      	ldr	r3, [r7, #12]
 80067cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d10d      	bne.n	80067ee <prvCopyDataToQueue+0x3a>
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	681b      	ldr	r3, [r3, #0]
 80067d6:	2b00      	cmp	r3, #0
 80067d8:	d14d      	bne.n	8006876 <prvCopyDataToQueue+0xc2>
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	689b      	ldr	r3, [r3, #8]
 80067de:	4618      	mov	r0, r3
 80067e0:	f001 f8a6 	bl	8007930 <xTaskPriorityDisinherit>
 80067e4:	6178      	str	r0, [r7, #20]
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	2200      	movs	r2, #0
 80067ea:	609a      	str	r2, [r3, #8]
 80067ec:	e043      	b.n	8006876 <prvCopyDataToQueue+0xc2>
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	2b00      	cmp	r3, #0
 80067f2:	d119      	bne.n	8006828 <prvCopyDataToQueue+0x74>
 80067f4:	68fb      	ldr	r3, [r7, #12]
 80067f6:	6858      	ldr	r0, [r3, #4]
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80067fc:	461a      	mov	r2, r3
 80067fe:	68b9      	ldr	r1, [r7, #8]
 8006800:	f002 fb02 	bl	8008e08 <memcpy>
 8006804:	68fb      	ldr	r3, [r7, #12]
 8006806:	685a      	ldr	r2, [r3, #4]
 8006808:	68fb      	ldr	r3, [r7, #12]
 800680a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800680c:	441a      	add	r2, r3
 800680e:	68fb      	ldr	r3, [r7, #12]
 8006810:	605a      	str	r2, [r3, #4]
 8006812:	68fb      	ldr	r3, [r7, #12]
 8006814:	685a      	ldr	r2, [r3, #4]
 8006816:	68fb      	ldr	r3, [r7, #12]
 8006818:	689b      	ldr	r3, [r3, #8]
 800681a:	429a      	cmp	r2, r3
 800681c:	d32b      	bcc.n	8006876 <prvCopyDataToQueue+0xc2>
 800681e:	68fb      	ldr	r3, [r7, #12]
 8006820:	681a      	ldr	r2, [r3, #0]
 8006822:	68fb      	ldr	r3, [r7, #12]
 8006824:	605a      	str	r2, [r3, #4]
 8006826:	e026      	b.n	8006876 <prvCopyDataToQueue+0xc2>
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	68d8      	ldr	r0, [r3, #12]
 800682c:	68fb      	ldr	r3, [r7, #12]
 800682e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006830:	461a      	mov	r2, r3
 8006832:	68b9      	ldr	r1, [r7, #8]
 8006834:	f002 fae8 	bl	8008e08 <memcpy>
 8006838:	68fb      	ldr	r3, [r7, #12]
 800683a:	68da      	ldr	r2, [r3, #12]
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006840:	425b      	negs	r3, r3
 8006842:	441a      	add	r2, r3
 8006844:	68fb      	ldr	r3, [r7, #12]
 8006846:	60da      	str	r2, [r3, #12]
 8006848:	68fb      	ldr	r3, [r7, #12]
 800684a:	68da      	ldr	r2, [r3, #12]
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	429a      	cmp	r2, r3
 8006852:	d207      	bcs.n	8006864 <prvCopyDataToQueue+0xb0>
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	689a      	ldr	r2, [r3, #8]
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800685c:	425b      	negs	r3, r3
 800685e:	441a      	add	r2, r3
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	60da      	str	r2, [r3, #12]
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	2b02      	cmp	r3, #2
 8006868:	d105      	bne.n	8006876 <prvCopyDataToQueue+0xc2>
 800686a:	693b      	ldr	r3, [r7, #16]
 800686c:	2b00      	cmp	r3, #0
 800686e:	d002      	beq.n	8006876 <prvCopyDataToQueue+0xc2>
 8006870:	693b      	ldr	r3, [r7, #16]
 8006872:	3b01      	subs	r3, #1
 8006874:	613b      	str	r3, [r7, #16]
 8006876:	693b      	ldr	r3, [r7, #16]
 8006878:	1c5a      	adds	r2, r3, #1
 800687a:	68fb      	ldr	r3, [r7, #12]
 800687c:	639a      	str	r2, [r3, #56]	@ 0x38
 800687e:	697b      	ldr	r3, [r7, #20]
 8006880:	4618      	mov	r0, r3
 8006882:	3718      	adds	r7, #24
 8006884:	46bd      	mov	sp, r7
 8006886:	bd80      	pop	{r7, pc}

08006888 <prvCopyDataFromQueue>:
 8006888:	b580      	push	{r7, lr}
 800688a:	b082      	sub	sp, #8
 800688c:	af00      	add	r7, sp, #0
 800688e:	6078      	str	r0, [r7, #4]
 8006890:	6039      	str	r1, [r7, #0]
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006896:	2b00      	cmp	r3, #0
 8006898:	d018      	beq.n	80068cc <prvCopyDataFromQueue+0x44>
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	68da      	ldr	r2, [r3, #12]
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80068a2:	441a      	add	r2, r3
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	60da      	str	r2, [r3, #12]
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	68da      	ldr	r2, [r3, #12]
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	689b      	ldr	r3, [r3, #8]
 80068b0:	429a      	cmp	r2, r3
 80068b2:	d303      	bcc.n	80068bc <prvCopyDataFromQueue+0x34>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	681a      	ldr	r2, [r3, #0]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	60da      	str	r2, [r3, #12]
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	68d9      	ldr	r1, [r3, #12]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80068c4:	461a      	mov	r2, r3
 80068c6:	6838      	ldr	r0, [r7, #0]
 80068c8:	f002 fa9e 	bl	8008e08 <memcpy>
 80068cc:	bf00      	nop
 80068ce:	3708      	adds	r7, #8
 80068d0:	46bd      	mov	sp, r7
 80068d2:	bd80      	pop	{r7, pc}

080068d4 <prvUnlockQueue>:
 80068d4:	b580      	push	{r7, lr}
 80068d6:	b084      	sub	sp, #16
 80068d8:	af00      	add	r7, sp, #0
 80068da:	6078      	str	r0, [r7, #4]
 80068dc:	f001 ff1c 	bl	8008718 <vPortEnterCritical>
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80068e6:	73fb      	strb	r3, [r7, #15]
 80068e8:	e011      	b.n	800690e <prvUnlockQueue+0x3a>
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d012      	beq.n	8006918 <prvUnlockQueue+0x44>
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	3324      	adds	r3, #36	@ 0x24
 80068f6:	4618      	mov	r0, r3
 80068f8:	f000 fd62 	bl	80073c0 <xTaskRemoveFromEventList>
 80068fc:	4603      	mov	r3, r0
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d001      	beq.n	8006906 <prvUnlockQueue+0x32>
 8006902:	f000 fe9f 	bl	8007644 <vTaskMissedYield>
 8006906:	7bfb      	ldrb	r3, [r7, #15]
 8006908:	3b01      	subs	r3, #1
 800690a:	b2db      	uxtb	r3, r3
 800690c:	73fb      	strb	r3, [r7, #15]
 800690e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006912:	2b00      	cmp	r3, #0
 8006914:	dce9      	bgt.n	80068ea <prvUnlockQueue+0x16>
 8006916:	e000      	b.n	800691a <prvUnlockQueue+0x46>
 8006918:	bf00      	nop
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	22ff      	movs	r2, #255	@ 0xff
 800691e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006922:	f001 ff2b 	bl	800877c <vPortExitCritical>
 8006926:	f001 fef7 	bl	8008718 <vPortEnterCritical>
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8006930:	73bb      	strb	r3, [r7, #14]
 8006932:	e011      	b.n	8006958 <prvUnlockQueue+0x84>
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	691b      	ldr	r3, [r3, #16]
 8006938:	2b00      	cmp	r3, #0
 800693a:	d012      	beq.n	8006962 <prvUnlockQueue+0x8e>
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	3310      	adds	r3, #16
 8006940:	4618      	mov	r0, r3
 8006942:	f000 fd3d 	bl	80073c0 <xTaskRemoveFromEventList>
 8006946:	4603      	mov	r3, r0
 8006948:	2b00      	cmp	r3, #0
 800694a:	d001      	beq.n	8006950 <prvUnlockQueue+0x7c>
 800694c:	f000 fe7a 	bl	8007644 <vTaskMissedYield>
 8006950:	7bbb      	ldrb	r3, [r7, #14]
 8006952:	3b01      	subs	r3, #1
 8006954:	b2db      	uxtb	r3, r3
 8006956:	73bb      	strb	r3, [r7, #14]
 8006958:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800695c:	2b00      	cmp	r3, #0
 800695e:	dce9      	bgt.n	8006934 <prvUnlockQueue+0x60>
 8006960:	e000      	b.n	8006964 <prvUnlockQueue+0x90>
 8006962:	bf00      	nop
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	22ff      	movs	r2, #255	@ 0xff
 8006968:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800696c:	f001 ff06 	bl	800877c <vPortExitCritical>
 8006970:	bf00      	nop
 8006972:	3710      	adds	r7, #16
 8006974:	46bd      	mov	sp, r7
 8006976:	bd80      	pop	{r7, pc}

08006978 <prvIsQueueEmpty>:
 8006978:	b580      	push	{r7, lr}
 800697a:	b084      	sub	sp, #16
 800697c:	af00      	add	r7, sp, #0
 800697e:	6078      	str	r0, [r7, #4]
 8006980:	f001 feca 	bl	8008718 <vPortEnterCritical>
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006988:	2b00      	cmp	r3, #0
 800698a:	d102      	bne.n	8006992 <prvIsQueueEmpty+0x1a>
 800698c:	2301      	movs	r3, #1
 800698e:	60fb      	str	r3, [r7, #12]
 8006990:	e001      	b.n	8006996 <prvIsQueueEmpty+0x1e>
 8006992:	2300      	movs	r3, #0
 8006994:	60fb      	str	r3, [r7, #12]
 8006996:	f001 fef1 	bl	800877c <vPortExitCritical>
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	4618      	mov	r0, r3
 800699e:	3710      	adds	r7, #16
 80069a0:	46bd      	mov	sp, r7
 80069a2:	bd80      	pop	{r7, pc}

080069a4 <prvIsQueueFull>:
 80069a4:	b580      	push	{r7, lr}
 80069a6:	b084      	sub	sp, #16
 80069a8:	af00      	add	r7, sp, #0
 80069aa:	6078      	str	r0, [r7, #4]
 80069ac:	f001 feb4 	bl	8008718 <vPortEnterCritical>
 80069b0:	687b      	ldr	r3, [r7, #4]
 80069b2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80069b8:	429a      	cmp	r2, r3
 80069ba:	d102      	bne.n	80069c2 <prvIsQueueFull+0x1e>
 80069bc:	2301      	movs	r3, #1
 80069be:	60fb      	str	r3, [r7, #12]
 80069c0:	e001      	b.n	80069c6 <prvIsQueueFull+0x22>
 80069c2:	2300      	movs	r3, #0
 80069c4:	60fb      	str	r3, [r7, #12]
 80069c6:	f001 fed9 	bl	800877c <vPortExitCritical>
 80069ca:	68fb      	ldr	r3, [r7, #12]
 80069cc:	4618      	mov	r0, r3
 80069ce:	3710      	adds	r7, #16
 80069d0:	46bd      	mov	sp, r7
 80069d2:	bd80      	pop	{r7, pc}

080069d4 <vQueueAddToRegistry>:
 80069d4:	b480      	push	{r7}
 80069d6:	b085      	sub	sp, #20
 80069d8:	af00      	add	r7, sp, #0
 80069da:	6078      	str	r0, [r7, #4]
 80069dc:	6039      	str	r1, [r7, #0]
 80069de:	2300      	movs	r3, #0
 80069e0:	60fb      	str	r3, [r7, #12]
 80069e2:	e014      	b.n	8006a0e <vQueueAddToRegistry+0x3a>
 80069e4:	4a0f      	ldr	r2, [pc, #60]	@ (8006a24 <vQueueAddToRegistry+0x50>)
 80069e6:	68fb      	ldr	r3, [r7, #12]
 80069e8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80069ec:	2b00      	cmp	r3, #0
 80069ee:	d10b      	bne.n	8006a08 <vQueueAddToRegistry+0x34>
 80069f0:	490c      	ldr	r1, [pc, #48]	@ (8006a24 <vQueueAddToRegistry+0x50>)
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	683a      	ldr	r2, [r7, #0]
 80069f6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 80069fa:	4a0a      	ldr	r2, [pc, #40]	@ (8006a24 <vQueueAddToRegistry+0x50>)
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	00db      	lsls	r3, r3, #3
 8006a00:	4413      	add	r3, r2
 8006a02:	687a      	ldr	r2, [r7, #4]
 8006a04:	605a      	str	r2, [r3, #4]
 8006a06:	e006      	b.n	8006a16 <vQueueAddToRegistry+0x42>
 8006a08:	68fb      	ldr	r3, [r7, #12]
 8006a0a:	3301      	adds	r3, #1
 8006a0c:	60fb      	str	r3, [r7, #12]
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	2b07      	cmp	r3, #7
 8006a12:	d9e7      	bls.n	80069e4 <vQueueAddToRegistry+0x10>
 8006a14:	bf00      	nop
 8006a16:	bf00      	nop
 8006a18:	3714      	adds	r7, #20
 8006a1a:	46bd      	mov	sp, r7
 8006a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a20:	4770      	bx	lr
 8006a22:	bf00      	nop
 8006a24:	200009ac 	.word	0x200009ac

08006a28 <vQueueWaitForMessageRestricted>:
 8006a28:	b580      	push	{r7, lr}
 8006a2a:	b086      	sub	sp, #24
 8006a2c:	af00      	add	r7, sp, #0
 8006a2e:	60f8      	str	r0, [r7, #12]
 8006a30:	60b9      	str	r1, [r7, #8]
 8006a32:	607a      	str	r2, [r7, #4]
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	617b      	str	r3, [r7, #20]
 8006a38:	f001 fe6e 	bl	8008718 <vPortEnterCritical>
 8006a3c:	697b      	ldr	r3, [r7, #20]
 8006a3e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8006a42:	b25b      	sxtb	r3, r3
 8006a44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a48:	d103      	bne.n	8006a52 <vQueueWaitForMessageRestricted+0x2a>
 8006a4a:	697b      	ldr	r3, [r7, #20]
 8006a4c:	2200      	movs	r2, #0
 8006a4e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006a52:	697b      	ldr	r3, [r7, #20]
 8006a54:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8006a58:	b25b      	sxtb	r3, r3
 8006a5a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a5e:	d103      	bne.n	8006a68 <vQueueWaitForMessageRestricted+0x40>
 8006a60:	697b      	ldr	r3, [r7, #20]
 8006a62:	2200      	movs	r2, #0
 8006a64:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006a68:	f001 fe88 	bl	800877c <vPortExitCritical>
 8006a6c:	697b      	ldr	r3, [r7, #20]
 8006a6e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	d106      	bne.n	8006a82 <vQueueWaitForMessageRestricted+0x5a>
 8006a74:	697b      	ldr	r3, [r7, #20]
 8006a76:	3324      	adds	r3, #36	@ 0x24
 8006a78:	687a      	ldr	r2, [r7, #4]
 8006a7a:	68b9      	ldr	r1, [r7, #8]
 8006a7c:	4618      	mov	r0, r3
 8006a7e:	f000 fc73 	bl	8007368 <vTaskPlaceOnEventListRestricted>
 8006a82:	6978      	ldr	r0, [r7, #20]
 8006a84:	f7ff ff26 	bl	80068d4 <prvUnlockQueue>
 8006a88:	bf00      	nop
 8006a8a:	3718      	adds	r7, #24
 8006a8c:	46bd      	mov	sp, r7
 8006a8e:	bd80      	pop	{r7, pc}

08006a90 <xTaskCreateStatic>:
 8006a90:	b580      	push	{r7, lr}
 8006a92:	b08e      	sub	sp, #56	@ 0x38
 8006a94:	af04      	add	r7, sp, #16
 8006a96:	60f8      	str	r0, [r7, #12]
 8006a98:	60b9      	str	r1, [r7, #8]
 8006a9a:	607a      	str	r2, [r7, #4]
 8006a9c:	603b      	str	r3, [r7, #0]
 8006a9e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006aa0:	2b00      	cmp	r3, #0
 8006aa2:	d10b      	bne.n	8006abc <xTaskCreateStatic+0x2c>
 8006aa4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006aa8:	f383 8811 	msr	BASEPRI, r3
 8006aac:	f3bf 8f6f 	isb	sy
 8006ab0:	f3bf 8f4f 	dsb	sy
 8006ab4:	623b      	str	r3, [r7, #32]
 8006ab6:	bf00      	nop
 8006ab8:	bf00      	nop
 8006aba:	e7fd      	b.n	8006ab8 <xTaskCreateStatic+0x28>
 8006abc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006abe:	2b00      	cmp	r3, #0
 8006ac0:	d10b      	bne.n	8006ada <xTaskCreateStatic+0x4a>
 8006ac2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006ac6:	f383 8811 	msr	BASEPRI, r3
 8006aca:	f3bf 8f6f 	isb	sy
 8006ace:	f3bf 8f4f 	dsb	sy
 8006ad2:	61fb      	str	r3, [r7, #28]
 8006ad4:	bf00      	nop
 8006ad6:	bf00      	nop
 8006ad8:	e7fd      	b.n	8006ad6 <xTaskCreateStatic+0x46>
 8006ada:	2354      	movs	r3, #84	@ 0x54
 8006adc:	613b      	str	r3, [r7, #16]
 8006ade:	693b      	ldr	r3, [r7, #16]
 8006ae0:	2b54      	cmp	r3, #84	@ 0x54
 8006ae2:	d00b      	beq.n	8006afc <xTaskCreateStatic+0x6c>
 8006ae4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006ae8:	f383 8811 	msr	BASEPRI, r3
 8006aec:	f3bf 8f6f 	isb	sy
 8006af0:	f3bf 8f4f 	dsb	sy
 8006af4:	61bb      	str	r3, [r7, #24]
 8006af6:	bf00      	nop
 8006af8:	bf00      	nop
 8006afa:	e7fd      	b.n	8006af8 <xTaskCreateStatic+0x68>
 8006afc:	693b      	ldr	r3, [r7, #16]
 8006afe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006b00:	2b00      	cmp	r3, #0
 8006b02:	d01e      	beq.n	8006b42 <xTaskCreateStatic+0xb2>
 8006b04:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006b06:	2b00      	cmp	r3, #0
 8006b08:	d01b      	beq.n	8006b42 <xTaskCreateStatic+0xb2>
 8006b0a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006b0c:	627b      	str	r3, [r7, #36]	@ 0x24
 8006b0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b10:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8006b12:	631a      	str	r2, [r3, #48]	@ 0x30
 8006b14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b16:	2202      	movs	r2, #2
 8006b18:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8006b1c:	2300      	movs	r3, #0
 8006b1e:	9303      	str	r3, [sp, #12]
 8006b20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b22:	9302      	str	r3, [sp, #8]
 8006b24:	f107 0314 	add.w	r3, r7, #20
 8006b28:	9301      	str	r3, [sp, #4]
 8006b2a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006b2c:	9300      	str	r3, [sp, #0]
 8006b2e:	683b      	ldr	r3, [r7, #0]
 8006b30:	687a      	ldr	r2, [r7, #4]
 8006b32:	68b9      	ldr	r1, [r7, #8]
 8006b34:	68f8      	ldr	r0, [r7, #12]
 8006b36:	f000 f850 	bl	8006bda <prvInitialiseNewTask>
 8006b3a:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8006b3c:	f000 f8d6 	bl	8006cec <prvAddNewTaskToReadyList>
 8006b40:	e001      	b.n	8006b46 <xTaskCreateStatic+0xb6>
 8006b42:	2300      	movs	r3, #0
 8006b44:	617b      	str	r3, [r7, #20]
 8006b46:	697b      	ldr	r3, [r7, #20]
 8006b48:	4618      	mov	r0, r3
 8006b4a:	3728      	adds	r7, #40	@ 0x28
 8006b4c:	46bd      	mov	sp, r7
 8006b4e:	bd80      	pop	{r7, pc}

08006b50 <xTaskCreate>:
 8006b50:	b580      	push	{r7, lr}
 8006b52:	b08c      	sub	sp, #48	@ 0x30
 8006b54:	af04      	add	r7, sp, #16
 8006b56:	60f8      	str	r0, [r7, #12]
 8006b58:	60b9      	str	r1, [r7, #8]
 8006b5a:	603b      	str	r3, [r7, #0]
 8006b5c:	4613      	mov	r3, r2
 8006b5e:	80fb      	strh	r3, [r7, #6]
 8006b60:	88fb      	ldrh	r3, [r7, #6]
 8006b62:	009b      	lsls	r3, r3, #2
 8006b64:	4618      	mov	r0, r3
 8006b66:	f001 fef9 	bl	800895c <pvPortMalloc>
 8006b6a:	6178      	str	r0, [r7, #20]
 8006b6c:	697b      	ldr	r3, [r7, #20]
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	d00e      	beq.n	8006b90 <xTaskCreate+0x40>
 8006b72:	2054      	movs	r0, #84	@ 0x54
 8006b74:	f001 fef2 	bl	800895c <pvPortMalloc>
 8006b78:	61f8      	str	r0, [r7, #28]
 8006b7a:	69fb      	ldr	r3, [r7, #28]
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	d003      	beq.n	8006b88 <xTaskCreate+0x38>
 8006b80:	69fb      	ldr	r3, [r7, #28]
 8006b82:	697a      	ldr	r2, [r7, #20]
 8006b84:	631a      	str	r2, [r3, #48]	@ 0x30
 8006b86:	e005      	b.n	8006b94 <xTaskCreate+0x44>
 8006b88:	6978      	ldr	r0, [r7, #20]
 8006b8a:	f001 ffb5 	bl	8008af8 <vPortFree>
 8006b8e:	e001      	b.n	8006b94 <xTaskCreate+0x44>
 8006b90:	2300      	movs	r3, #0
 8006b92:	61fb      	str	r3, [r7, #28]
 8006b94:	69fb      	ldr	r3, [r7, #28]
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d017      	beq.n	8006bca <xTaskCreate+0x7a>
 8006b9a:	69fb      	ldr	r3, [r7, #28]
 8006b9c:	2200      	movs	r2, #0
 8006b9e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8006ba2:	88fa      	ldrh	r2, [r7, #6]
 8006ba4:	2300      	movs	r3, #0
 8006ba6:	9303      	str	r3, [sp, #12]
 8006ba8:	69fb      	ldr	r3, [r7, #28]
 8006baa:	9302      	str	r3, [sp, #8]
 8006bac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006bae:	9301      	str	r3, [sp, #4]
 8006bb0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006bb2:	9300      	str	r3, [sp, #0]
 8006bb4:	683b      	ldr	r3, [r7, #0]
 8006bb6:	68b9      	ldr	r1, [r7, #8]
 8006bb8:	68f8      	ldr	r0, [r7, #12]
 8006bba:	f000 f80e 	bl	8006bda <prvInitialiseNewTask>
 8006bbe:	69f8      	ldr	r0, [r7, #28]
 8006bc0:	f000 f894 	bl	8006cec <prvAddNewTaskToReadyList>
 8006bc4:	2301      	movs	r3, #1
 8006bc6:	61bb      	str	r3, [r7, #24]
 8006bc8:	e002      	b.n	8006bd0 <xTaskCreate+0x80>
 8006bca:	f04f 33ff 	mov.w	r3, #4294967295
 8006bce:	61bb      	str	r3, [r7, #24]
 8006bd0:	69bb      	ldr	r3, [r7, #24]
 8006bd2:	4618      	mov	r0, r3
 8006bd4:	3720      	adds	r7, #32
 8006bd6:	46bd      	mov	sp, r7
 8006bd8:	bd80      	pop	{r7, pc}

08006bda <prvInitialiseNewTask>:
 8006bda:	b580      	push	{r7, lr}
 8006bdc:	b088      	sub	sp, #32
 8006bde:	af00      	add	r7, sp, #0
 8006be0:	60f8      	str	r0, [r7, #12]
 8006be2:	60b9      	str	r1, [r7, #8]
 8006be4:	607a      	str	r2, [r7, #4]
 8006be6:	603b      	str	r3, [r7, #0]
 8006be8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006bea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8006bf2:	3b01      	subs	r3, #1
 8006bf4:	009b      	lsls	r3, r3, #2
 8006bf6:	4413      	add	r3, r2
 8006bf8:	61bb      	str	r3, [r7, #24]
 8006bfa:	69bb      	ldr	r3, [r7, #24]
 8006bfc:	f023 0307 	bic.w	r3, r3, #7
 8006c00:	61bb      	str	r3, [r7, #24]
 8006c02:	69bb      	ldr	r3, [r7, #24]
 8006c04:	f003 0307 	and.w	r3, r3, #7
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	d00b      	beq.n	8006c24 <prvInitialiseNewTask+0x4a>
 8006c0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006c10:	f383 8811 	msr	BASEPRI, r3
 8006c14:	f3bf 8f6f 	isb	sy
 8006c18:	f3bf 8f4f 	dsb	sy
 8006c1c:	617b      	str	r3, [r7, #20]
 8006c1e:	bf00      	nop
 8006c20:	bf00      	nop
 8006c22:	e7fd      	b.n	8006c20 <prvInitialiseNewTask+0x46>
 8006c24:	68bb      	ldr	r3, [r7, #8]
 8006c26:	2b00      	cmp	r3, #0
 8006c28:	d01f      	beq.n	8006c6a <prvInitialiseNewTask+0x90>
 8006c2a:	2300      	movs	r3, #0
 8006c2c:	61fb      	str	r3, [r7, #28]
 8006c2e:	e012      	b.n	8006c56 <prvInitialiseNewTask+0x7c>
 8006c30:	68ba      	ldr	r2, [r7, #8]
 8006c32:	69fb      	ldr	r3, [r7, #28]
 8006c34:	4413      	add	r3, r2
 8006c36:	7819      	ldrb	r1, [r3, #0]
 8006c38:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006c3a:	69fb      	ldr	r3, [r7, #28]
 8006c3c:	4413      	add	r3, r2
 8006c3e:	3334      	adds	r3, #52	@ 0x34
 8006c40:	460a      	mov	r2, r1
 8006c42:	701a      	strb	r2, [r3, #0]
 8006c44:	68ba      	ldr	r2, [r7, #8]
 8006c46:	69fb      	ldr	r3, [r7, #28]
 8006c48:	4413      	add	r3, r2
 8006c4a:	781b      	ldrb	r3, [r3, #0]
 8006c4c:	2b00      	cmp	r3, #0
 8006c4e:	d006      	beq.n	8006c5e <prvInitialiseNewTask+0x84>
 8006c50:	69fb      	ldr	r3, [r7, #28]
 8006c52:	3301      	adds	r3, #1
 8006c54:	61fb      	str	r3, [r7, #28]
 8006c56:	69fb      	ldr	r3, [r7, #28]
 8006c58:	2b0f      	cmp	r3, #15
 8006c5a:	d9e9      	bls.n	8006c30 <prvInitialiseNewTask+0x56>
 8006c5c:	e000      	b.n	8006c60 <prvInitialiseNewTask+0x86>
 8006c5e:	bf00      	nop
 8006c60:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c62:	2200      	movs	r2, #0
 8006c64:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006c68:	e003      	b.n	8006c72 <prvInitialiseNewTask+0x98>
 8006c6a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c6c:	2200      	movs	r2, #0
 8006c6e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8006c72:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006c74:	2b06      	cmp	r3, #6
 8006c76:	d901      	bls.n	8006c7c <prvInitialiseNewTask+0xa2>
 8006c78:	2306      	movs	r3, #6
 8006c7a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006c7c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c7e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006c80:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006c82:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c84:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8006c86:	645a      	str	r2, [r3, #68]	@ 0x44
 8006c88:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c8a:	2200      	movs	r2, #0
 8006c8c:	649a      	str	r2, [r3, #72]	@ 0x48
 8006c8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c90:	3304      	adds	r3, #4
 8006c92:	4618      	mov	r0, r3
 8006c94:	f7fe feaf 	bl	80059f6 <vListInitialiseItem>
 8006c98:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006c9a:	3318      	adds	r3, #24
 8006c9c:	4618      	mov	r0, r3
 8006c9e:	f7fe feaa 	bl	80059f6 <vListInitialiseItem>
 8006ca2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006ca4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ca6:	611a      	str	r2, [r3, #16]
 8006ca8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006caa:	f1c3 0207 	rsb	r2, r3, #7
 8006cae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006cb0:	619a      	str	r2, [r3, #24]
 8006cb2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006cb4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006cb6:	625a      	str	r2, [r3, #36]	@ 0x24
 8006cb8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006cba:	2200      	movs	r2, #0
 8006cbc:	64da      	str	r2, [r3, #76]	@ 0x4c
 8006cbe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006cc0:	2200      	movs	r2, #0
 8006cc2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8006cc6:	683a      	ldr	r2, [r7, #0]
 8006cc8:	68f9      	ldr	r1, [r7, #12]
 8006cca:	69b8      	ldr	r0, [r7, #24]
 8006ccc:	f001 fbf2 	bl	80084b4 <pxPortInitialiseStack>
 8006cd0:	4602      	mov	r2, r0
 8006cd2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006cd4:	601a      	str	r2, [r3, #0]
 8006cd6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006cd8:	2b00      	cmp	r3, #0
 8006cda:	d002      	beq.n	8006ce2 <prvInitialiseNewTask+0x108>
 8006cdc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006cde:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ce0:	601a      	str	r2, [r3, #0]
 8006ce2:	bf00      	nop
 8006ce4:	3720      	adds	r7, #32
 8006ce6:	46bd      	mov	sp, r7
 8006ce8:	bd80      	pop	{r7, pc}
	...

08006cec <prvAddNewTaskToReadyList>:
 8006cec:	b580      	push	{r7, lr}
 8006cee:	b082      	sub	sp, #8
 8006cf0:	af00      	add	r7, sp, #0
 8006cf2:	6078      	str	r0, [r7, #4]
 8006cf4:	f001 fd10 	bl	8008718 <vPortEnterCritical>
 8006cf8:	4b2a      	ldr	r3, [pc, #168]	@ (8006da4 <prvAddNewTaskToReadyList+0xb8>)
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	3301      	adds	r3, #1
 8006cfe:	4a29      	ldr	r2, [pc, #164]	@ (8006da4 <prvAddNewTaskToReadyList+0xb8>)
 8006d00:	6013      	str	r3, [r2, #0]
 8006d02:	4b29      	ldr	r3, [pc, #164]	@ (8006da8 <prvAddNewTaskToReadyList+0xbc>)
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	2b00      	cmp	r3, #0
 8006d08:	d109      	bne.n	8006d1e <prvAddNewTaskToReadyList+0x32>
 8006d0a:	4a27      	ldr	r2, [pc, #156]	@ (8006da8 <prvAddNewTaskToReadyList+0xbc>)
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	6013      	str	r3, [r2, #0]
 8006d10:	4b24      	ldr	r3, [pc, #144]	@ (8006da4 <prvAddNewTaskToReadyList+0xb8>)
 8006d12:	681b      	ldr	r3, [r3, #0]
 8006d14:	2b01      	cmp	r3, #1
 8006d16:	d110      	bne.n	8006d3a <prvAddNewTaskToReadyList+0x4e>
 8006d18:	f000 fcb8 	bl	800768c <prvInitialiseTaskLists>
 8006d1c:	e00d      	b.n	8006d3a <prvAddNewTaskToReadyList+0x4e>
 8006d1e:	4b23      	ldr	r3, [pc, #140]	@ (8006dac <prvAddNewTaskToReadyList+0xc0>)
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d109      	bne.n	8006d3a <prvAddNewTaskToReadyList+0x4e>
 8006d26:	4b20      	ldr	r3, [pc, #128]	@ (8006da8 <prvAddNewTaskToReadyList+0xbc>)
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006d30:	429a      	cmp	r2, r3
 8006d32:	d802      	bhi.n	8006d3a <prvAddNewTaskToReadyList+0x4e>
 8006d34:	4a1c      	ldr	r2, [pc, #112]	@ (8006da8 <prvAddNewTaskToReadyList+0xbc>)
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	6013      	str	r3, [r2, #0]
 8006d3a:	4b1d      	ldr	r3, [pc, #116]	@ (8006db0 <prvAddNewTaskToReadyList+0xc4>)
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	3301      	adds	r3, #1
 8006d40:	4a1b      	ldr	r2, [pc, #108]	@ (8006db0 <prvAddNewTaskToReadyList+0xc4>)
 8006d42:	6013      	str	r3, [r2, #0]
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006d48:	2201      	movs	r2, #1
 8006d4a:	409a      	lsls	r2, r3
 8006d4c:	4b19      	ldr	r3, [pc, #100]	@ (8006db4 <prvAddNewTaskToReadyList+0xc8>)
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	4313      	orrs	r3, r2
 8006d52:	4a18      	ldr	r2, [pc, #96]	@ (8006db4 <prvAddNewTaskToReadyList+0xc8>)
 8006d54:	6013      	str	r3, [r2, #0]
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006d5a:	4613      	mov	r3, r2
 8006d5c:	009b      	lsls	r3, r3, #2
 8006d5e:	4413      	add	r3, r2
 8006d60:	009b      	lsls	r3, r3, #2
 8006d62:	4a15      	ldr	r2, [pc, #84]	@ (8006db8 <prvAddNewTaskToReadyList+0xcc>)
 8006d64:	441a      	add	r2, r3
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	3304      	adds	r3, #4
 8006d6a:	4619      	mov	r1, r3
 8006d6c:	4610      	mov	r0, r2
 8006d6e:	f7fe fe4f 	bl	8005a10 <vListInsertEnd>
 8006d72:	f001 fd03 	bl	800877c <vPortExitCritical>
 8006d76:	4b0d      	ldr	r3, [pc, #52]	@ (8006dac <prvAddNewTaskToReadyList+0xc0>)
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d00e      	beq.n	8006d9c <prvAddNewTaskToReadyList+0xb0>
 8006d7e:	4b0a      	ldr	r3, [pc, #40]	@ (8006da8 <prvAddNewTaskToReadyList+0xbc>)
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006d88:	429a      	cmp	r2, r3
 8006d8a:	d207      	bcs.n	8006d9c <prvAddNewTaskToReadyList+0xb0>
 8006d8c:	4b0b      	ldr	r3, [pc, #44]	@ (8006dbc <prvAddNewTaskToReadyList+0xd0>)
 8006d8e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006d92:	601a      	str	r2, [r3, #0]
 8006d94:	f3bf 8f4f 	dsb	sy
 8006d98:	f3bf 8f6f 	isb	sy
 8006d9c:	bf00      	nop
 8006d9e:	3708      	adds	r7, #8
 8006da0:	46bd      	mov	sp, r7
 8006da2:	bd80      	pop	{r7, pc}
 8006da4:	20000aec 	.word	0x20000aec
 8006da8:	200009ec 	.word	0x200009ec
 8006dac:	20000af8 	.word	0x20000af8
 8006db0:	20000b08 	.word	0x20000b08
 8006db4:	20000af4 	.word	0x20000af4
 8006db8:	200009f0 	.word	0x200009f0
 8006dbc:	e000ed04 	.word	0xe000ed04

08006dc0 <vTaskDelay>:
 8006dc0:	b580      	push	{r7, lr}
 8006dc2:	b084      	sub	sp, #16
 8006dc4:	af00      	add	r7, sp, #0
 8006dc6:	6078      	str	r0, [r7, #4]
 8006dc8:	2300      	movs	r3, #0
 8006dca:	60fb      	str	r3, [r7, #12]
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2b00      	cmp	r3, #0
 8006dd0:	d018      	beq.n	8006e04 <vTaskDelay+0x44>
 8006dd2:	4b14      	ldr	r3, [pc, #80]	@ (8006e24 <vTaskDelay+0x64>)
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	2b00      	cmp	r3, #0
 8006dd8:	d00b      	beq.n	8006df2 <vTaskDelay+0x32>
 8006dda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006dde:	f383 8811 	msr	BASEPRI, r3
 8006de2:	f3bf 8f6f 	isb	sy
 8006de6:	f3bf 8f4f 	dsb	sy
 8006dea:	60bb      	str	r3, [r7, #8]
 8006dec:	bf00      	nop
 8006dee:	bf00      	nop
 8006df0:	e7fd      	b.n	8006dee <vTaskDelay+0x2e>
 8006df2:	f000 f883 	bl	8006efc <vTaskSuspendAll>
 8006df6:	2100      	movs	r1, #0
 8006df8:	6878      	ldr	r0, [r7, #4]
 8006dfa:	f000 fedd 	bl	8007bb8 <prvAddCurrentTaskToDelayedList>
 8006dfe:	f000 f88b 	bl	8006f18 <xTaskResumeAll>
 8006e02:	60f8      	str	r0, [r7, #12]
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	d107      	bne.n	8006e1a <vTaskDelay+0x5a>
 8006e0a:	4b07      	ldr	r3, [pc, #28]	@ (8006e28 <vTaskDelay+0x68>)
 8006e0c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006e10:	601a      	str	r2, [r3, #0]
 8006e12:	f3bf 8f4f 	dsb	sy
 8006e16:	f3bf 8f6f 	isb	sy
 8006e1a:	bf00      	nop
 8006e1c:	3710      	adds	r7, #16
 8006e1e:	46bd      	mov	sp, r7
 8006e20:	bd80      	pop	{r7, pc}
 8006e22:	bf00      	nop
 8006e24:	20000b14 	.word	0x20000b14
 8006e28:	e000ed04 	.word	0xe000ed04

08006e2c <vTaskStartScheduler>:
 8006e2c:	b580      	push	{r7, lr}
 8006e2e:	b08a      	sub	sp, #40	@ 0x28
 8006e30:	af04      	add	r7, sp, #16
 8006e32:	2300      	movs	r3, #0
 8006e34:	60bb      	str	r3, [r7, #8]
 8006e36:	2300      	movs	r3, #0
 8006e38:	607b      	str	r3, [r7, #4]
 8006e3a:	463a      	mov	r2, r7
 8006e3c:	1d39      	adds	r1, r7, #4
 8006e3e:	f107 0308 	add.w	r3, r7, #8
 8006e42:	4618      	mov	r0, r3
 8006e44:	f7f9 fb94 	bl	8000570 <vApplicationGetIdleTaskMemory>
 8006e48:	6839      	ldr	r1, [r7, #0]
 8006e4a:	687b      	ldr	r3, [r7, #4]
 8006e4c:	68ba      	ldr	r2, [r7, #8]
 8006e4e:	9202      	str	r2, [sp, #8]
 8006e50:	9301      	str	r3, [sp, #4]
 8006e52:	2300      	movs	r3, #0
 8006e54:	9300      	str	r3, [sp, #0]
 8006e56:	2300      	movs	r3, #0
 8006e58:	460a      	mov	r2, r1
 8006e5a:	4922      	ldr	r1, [pc, #136]	@ (8006ee4 <vTaskStartScheduler+0xb8>)
 8006e5c:	4822      	ldr	r0, [pc, #136]	@ (8006ee8 <vTaskStartScheduler+0xbc>)
 8006e5e:	f7ff fe17 	bl	8006a90 <xTaskCreateStatic>
 8006e62:	4603      	mov	r3, r0
 8006e64:	4a21      	ldr	r2, [pc, #132]	@ (8006eec <vTaskStartScheduler+0xc0>)
 8006e66:	6013      	str	r3, [r2, #0]
 8006e68:	4b20      	ldr	r3, [pc, #128]	@ (8006eec <vTaskStartScheduler+0xc0>)
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	2b00      	cmp	r3, #0
 8006e6e:	d002      	beq.n	8006e76 <vTaskStartScheduler+0x4a>
 8006e70:	2301      	movs	r3, #1
 8006e72:	617b      	str	r3, [r7, #20]
 8006e74:	e001      	b.n	8006e7a <vTaskStartScheduler+0x4e>
 8006e76:	2300      	movs	r3, #0
 8006e78:	617b      	str	r3, [r7, #20]
 8006e7a:	697b      	ldr	r3, [r7, #20]
 8006e7c:	2b01      	cmp	r3, #1
 8006e7e:	d102      	bne.n	8006e86 <vTaskStartScheduler+0x5a>
 8006e80:	f000 ff00 	bl	8007c84 <xTimerCreateTimerTask>
 8006e84:	6178      	str	r0, [r7, #20]
 8006e86:	697b      	ldr	r3, [r7, #20]
 8006e88:	2b01      	cmp	r3, #1
 8006e8a:	d116      	bne.n	8006eba <vTaskStartScheduler+0x8e>
 8006e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006e90:	f383 8811 	msr	BASEPRI, r3
 8006e94:	f3bf 8f6f 	isb	sy
 8006e98:	f3bf 8f4f 	dsb	sy
 8006e9c:	613b      	str	r3, [r7, #16]
 8006e9e:	bf00      	nop
 8006ea0:	4b13      	ldr	r3, [pc, #76]	@ (8006ef0 <vTaskStartScheduler+0xc4>)
 8006ea2:	f04f 32ff 	mov.w	r2, #4294967295
 8006ea6:	601a      	str	r2, [r3, #0]
 8006ea8:	4b12      	ldr	r3, [pc, #72]	@ (8006ef4 <vTaskStartScheduler+0xc8>)
 8006eaa:	2201      	movs	r2, #1
 8006eac:	601a      	str	r2, [r3, #0]
 8006eae:	4b12      	ldr	r3, [pc, #72]	@ (8006ef8 <vTaskStartScheduler+0xcc>)
 8006eb0:	2200      	movs	r2, #0
 8006eb2:	601a      	str	r2, [r3, #0]
 8006eb4:	f001 fb8c 	bl	80085d0 <xPortStartScheduler>
 8006eb8:	e00f      	b.n	8006eda <vTaskStartScheduler+0xae>
 8006eba:	697b      	ldr	r3, [r7, #20]
 8006ebc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ec0:	d10b      	bne.n	8006eda <vTaskStartScheduler+0xae>
 8006ec2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006ec6:	f383 8811 	msr	BASEPRI, r3
 8006eca:	f3bf 8f6f 	isb	sy
 8006ece:	f3bf 8f4f 	dsb	sy
 8006ed2:	60fb      	str	r3, [r7, #12]
 8006ed4:	bf00      	nop
 8006ed6:	bf00      	nop
 8006ed8:	e7fd      	b.n	8006ed6 <vTaskStartScheduler+0xaa>
 8006eda:	bf00      	nop
 8006edc:	3718      	adds	r7, #24
 8006ede:	46bd      	mov	sp, r7
 8006ee0:	bd80      	pop	{r7, pc}
 8006ee2:	bf00      	nop
 8006ee4:	08009a08 	.word	0x08009a08
 8006ee8:	0800765d 	.word	0x0800765d
 8006eec:	20000b10 	.word	0x20000b10
 8006ef0:	20000b0c 	.word	0x20000b0c
 8006ef4:	20000af8 	.word	0x20000af8
 8006ef8:	20000af0 	.word	0x20000af0

08006efc <vTaskSuspendAll>:
 8006efc:	b480      	push	{r7}
 8006efe:	af00      	add	r7, sp, #0
 8006f00:	4b04      	ldr	r3, [pc, #16]	@ (8006f14 <vTaskSuspendAll+0x18>)
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	3301      	adds	r3, #1
 8006f06:	4a03      	ldr	r2, [pc, #12]	@ (8006f14 <vTaskSuspendAll+0x18>)
 8006f08:	6013      	str	r3, [r2, #0]
 8006f0a:	bf00      	nop
 8006f0c:	46bd      	mov	sp, r7
 8006f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f12:	4770      	bx	lr
 8006f14:	20000b14 	.word	0x20000b14

08006f18 <xTaskResumeAll>:
 8006f18:	b580      	push	{r7, lr}
 8006f1a:	b084      	sub	sp, #16
 8006f1c:	af00      	add	r7, sp, #0
 8006f1e:	2300      	movs	r3, #0
 8006f20:	60fb      	str	r3, [r7, #12]
 8006f22:	2300      	movs	r3, #0
 8006f24:	60bb      	str	r3, [r7, #8]
 8006f26:	4b42      	ldr	r3, [pc, #264]	@ (8007030 <xTaskResumeAll+0x118>)
 8006f28:	681b      	ldr	r3, [r3, #0]
 8006f2a:	2b00      	cmp	r3, #0
 8006f2c:	d10b      	bne.n	8006f46 <xTaskResumeAll+0x2e>
 8006f2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006f32:	f383 8811 	msr	BASEPRI, r3
 8006f36:	f3bf 8f6f 	isb	sy
 8006f3a:	f3bf 8f4f 	dsb	sy
 8006f3e:	603b      	str	r3, [r7, #0]
 8006f40:	bf00      	nop
 8006f42:	bf00      	nop
 8006f44:	e7fd      	b.n	8006f42 <xTaskResumeAll+0x2a>
 8006f46:	f001 fbe7 	bl	8008718 <vPortEnterCritical>
 8006f4a:	4b39      	ldr	r3, [pc, #228]	@ (8007030 <xTaskResumeAll+0x118>)
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	3b01      	subs	r3, #1
 8006f50:	4a37      	ldr	r2, [pc, #220]	@ (8007030 <xTaskResumeAll+0x118>)
 8006f52:	6013      	str	r3, [r2, #0]
 8006f54:	4b36      	ldr	r3, [pc, #216]	@ (8007030 <xTaskResumeAll+0x118>)
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	2b00      	cmp	r3, #0
 8006f5a:	d161      	bne.n	8007020 <xTaskResumeAll+0x108>
 8006f5c:	4b35      	ldr	r3, [pc, #212]	@ (8007034 <xTaskResumeAll+0x11c>)
 8006f5e:	681b      	ldr	r3, [r3, #0]
 8006f60:	2b00      	cmp	r3, #0
 8006f62:	d05d      	beq.n	8007020 <xTaskResumeAll+0x108>
 8006f64:	e02e      	b.n	8006fc4 <xTaskResumeAll+0xac>
 8006f66:	4b34      	ldr	r3, [pc, #208]	@ (8007038 <xTaskResumeAll+0x120>)
 8006f68:	68db      	ldr	r3, [r3, #12]
 8006f6a:	68db      	ldr	r3, [r3, #12]
 8006f6c:	60fb      	str	r3, [r7, #12]
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	3318      	adds	r3, #24
 8006f72:	4618      	mov	r0, r3
 8006f74:	f7fe fda9 	bl	8005aca <uxListRemove>
 8006f78:	68fb      	ldr	r3, [r7, #12]
 8006f7a:	3304      	adds	r3, #4
 8006f7c:	4618      	mov	r0, r3
 8006f7e:	f7fe fda4 	bl	8005aca <uxListRemove>
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f86:	2201      	movs	r2, #1
 8006f88:	409a      	lsls	r2, r3
 8006f8a:	4b2c      	ldr	r3, [pc, #176]	@ (800703c <xTaskResumeAll+0x124>)
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	4313      	orrs	r3, r2
 8006f90:	4a2a      	ldr	r2, [pc, #168]	@ (800703c <xTaskResumeAll+0x124>)
 8006f92:	6013      	str	r3, [r2, #0]
 8006f94:	68fb      	ldr	r3, [r7, #12]
 8006f96:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006f98:	4613      	mov	r3, r2
 8006f9a:	009b      	lsls	r3, r3, #2
 8006f9c:	4413      	add	r3, r2
 8006f9e:	009b      	lsls	r3, r3, #2
 8006fa0:	4a27      	ldr	r2, [pc, #156]	@ (8007040 <xTaskResumeAll+0x128>)
 8006fa2:	441a      	add	r2, r3
 8006fa4:	68fb      	ldr	r3, [r7, #12]
 8006fa6:	3304      	adds	r3, #4
 8006fa8:	4619      	mov	r1, r3
 8006faa:	4610      	mov	r0, r2
 8006fac:	f7fe fd30 	bl	8005a10 <vListInsertEnd>
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006fb4:	4b23      	ldr	r3, [pc, #140]	@ (8007044 <xTaskResumeAll+0x12c>)
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006fba:	429a      	cmp	r2, r3
 8006fbc:	d302      	bcc.n	8006fc4 <xTaskResumeAll+0xac>
 8006fbe:	4b22      	ldr	r3, [pc, #136]	@ (8007048 <xTaskResumeAll+0x130>)
 8006fc0:	2201      	movs	r2, #1
 8006fc2:	601a      	str	r2, [r3, #0]
 8006fc4:	4b1c      	ldr	r3, [pc, #112]	@ (8007038 <xTaskResumeAll+0x120>)
 8006fc6:	681b      	ldr	r3, [r3, #0]
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d1cc      	bne.n	8006f66 <xTaskResumeAll+0x4e>
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	2b00      	cmp	r3, #0
 8006fd0:	d001      	beq.n	8006fd6 <xTaskResumeAll+0xbe>
 8006fd2:	f000 fbf9 	bl	80077c8 <prvResetNextTaskUnblockTime>
 8006fd6:	4b1d      	ldr	r3, [pc, #116]	@ (800704c <xTaskResumeAll+0x134>)
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	607b      	str	r3, [r7, #4]
 8006fdc:	687b      	ldr	r3, [r7, #4]
 8006fde:	2b00      	cmp	r3, #0
 8006fe0:	d010      	beq.n	8007004 <xTaskResumeAll+0xec>
 8006fe2:	f000 f847 	bl	8007074 <xTaskIncrementTick>
 8006fe6:	4603      	mov	r3, r0
 8006fe8:	2b00      	cmp	r3, #0
 8006fea:	d002      	beq.n	8006ff2 <xTaskResumeAll+0xda>
 8006fec:	4b16      	ldr	r3, [pc, #88]	@ (8007048 <xTaskResumeAll+0x130>)
 8006fee:	2201      	movs	r2, #1
 8006ff0:	601a      	str	r2, [r3, #0]
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	3b01      	subs	r3, #1
 8006ff6:	607b      	str	r3, [r7, #4]
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d1f1      	bne.n	8006fe2 <xTaskResumeAll+0xca>
 8006ffe:	4b13      	ldr	r3, [pc, #76]	@ (800704c <xTaskResumeAll+0x134>)
 8007000:	2200      	movs	r2, #0
 8007002:	601a      	str	r2, [r3, #0]
 8007004:	4b10      	ldr	r3, [pc, #64]	@ (8007048 <xTaskResumeAll+0x130>)
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	2b00      	cmp	r3, #0
 800700a:	d009      	beq.n	8007020 <xTaskResumeAll+0x108>
 800700c:	2301      	movs	r3, #1
 800700e:	60bb      	str	r3, [r7, #8]
 8007010:	4b0f      	ldr	r3, [pc, #60]	@ (8007050 <xTaskResumeAll+0x138>)
 8007012:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007016:	601a      	str	r2, [r3, #0]
 8007018:	f3bf 8f4f 	dsb	sy
 800701c:	f3bf 8f6f 	isb	sy
 8007020:	f001 fbac 	bl	800877c <vPortExitCritical>
 8007024:	68bb      	ldr	r3, [r7, #8]
 8007026:	4618      	mov	r0, r3
 8007028:	3710      	adds	r7, #16
 800702a:	46bd      	mov	sp, r7
 800702c:	bd80      	pop	{r7, pc}
 800702e:	bf00      	nop
 8007030:	20000b14 	.word	0x20000b14
 8007034:	20000aec 	.word	0x20000aec
 8007038:	20000aac 	.word	0x20000aac
 800703c:	20000af4 	.word	0x20000af4
 8007040:	200009f0 	.word	0x200009f0
 8007044:	200009ec 	.word	0x200009ec
 8007048:	20000b00 	.word	0x20000b00
 800704c:	20000afc 	.word	0x20000afc
 8007050:	e000ed04 	.word	0xe000ed04

08007054 <xTaskGetTickCount>:
 8007054:	b480      	push	{r7}
 8007056:	b083      	sub	sp, #12
 8007058:	af00      	add	r7, sp, #0
 800705a:	4b05      	ldr	r3, [pc, #20]	@ (8007070 <xTaskGetTickCount+0x1c>)
 800705c:	681b      	ldr	r3, [r3, #0]
 800705e:	607b      	str	r3, [r7, #4]
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	4618      	mov	r0, r3
 8007064:	370c      	adds	r7, #12
 8007066:	46bd      	mov	sp, r7
 8007068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800706c:	4770      	bx	lr
 800706e:	bf00      	nop
 8007070:	20000af0 	.word	0x20000af0

08007074 <xTaskIncrementTick>:
 8007074:	b580      	push	{r7, lr}
 8007076:	b086      	sub	sp, #24
 8007078:	af00      	add	r7, sp, #0
 800707a:	2300      	movs	r3, #0
 800707c:	617b      	str	r3, [r7, #20]
 800707e:	4b4f      	ldr	r3, [pc, #316]	@ (80071bc <xTaskIncrementTick+0x148>)
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	2b00      	cmp	r3, #0
 8007084:	f040 808f 	bne.w	80071a6 <xTaskIncrementTick+0x132>
 8007088:	4b4d      	ldr	r3, [pc, #308]	@ (80071c0 <xTaskIncrementTick+0x14c>)
 800708a:	681b      	ldr	r3, [r3, #0]
 800708c:	3301      	adds	r3, #1
 800708e:	613b      	str	r3, [r7, #16]
 8007090:	4a4b      	ldr	r2, [pc, #300]	@ (80071c0 <xTaskIncrementTick+0x14c>)
 8007092:	693b      	ldr	r3, [r7, #16]
 8007094:	6013      	str	r3, [r2, #0]
 8007096:	693b      	ldr	r3, [r7, #16]
 8007098:	2b00      	cmp	r3, #0
 800709a:	d121      	bne.n	80070e0 <xTaskIncrementTick+0x6c>
 800709c:	4b49      	ldr	r3, [pc, #292]	@ (80071c4 <xTaskIncrementTick+0x150>)
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d00b      	beq.n	80070be <xTaskIncrementTick+0x4a>
 80070a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80070aa:	f383 8811 	msr	BASEPRI, r3
 80070ae:	f3bf 8f6f 	isb	sy
 80070b2:	f3bf 8f4f 	dsb	sy
 80070b6:	603b      	str	r3, [r7, #0]
 80070b8:	bf00      	nop
 80070ba:	bf00      	nop
 80070bc:	e7fd      	b.n	80070ba <xTaskIncrementTick+0x46>
 80070be:	4b41      	ldr	r3, [pc, #260]	@ (80071c4 <xTaskIncrementTick+0x150>)
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	60fb      	str	r3, [r7, #12]
 80070c4:	4b40      	ldr	r3, [pc, #256]	@ (80071c8 <xTaskIncrementTick+0x154>)
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	4a3e      	ldr	r2, [pc, #248]	@ (80071c4 <xTaskIncrementTick+0x150>)
 80070ca:	6013      	str	r3, [r2, #0]
 80070cc:	4a3e      	ldr	r2, [pc, #248]	@ (80071c8 <xTaskIncrementTick+0x154>)
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	6013      	str	r3, [r2, #0]
 80070d2:	4b3e      	ldr	r3, [pc, #248]	@ (80071cc <xTaskIncrementTick+0x158>)
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	3301      	adds	r3, #1
 80070d8:	4a3c      	ldr	r2, [pc, #240]	@ (80071cc <xTaskIncrementTick+0x158>)
 80070da:	6013      	str	r3, [r2, #0]
 80070dc:	f000 fb74 	bl	80077c8 <prvResetNextTaskUnblockTime>
 80070e0:	4b3b      	ldr	r3, [pc, #236]	@ (80071d0 <xTaskIncrementTick+0x15c>)
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	693a      	ldr	r2, [r7, #16]
 80070e6:	429a      	cmp	r2, r3
 80070e8:	d348      	bcc.n	800717c <xTaskIncrementTick+0x108>
 80070ea:	4b36      	ldr	r3, [pc, #216]	@ (80071c4 <xTaskIncrementTick+0x150>)
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d104      	bne.n	80070fe <xTaskIncrementTick+0x8a>
 80070f4:	4b36      	ldr	r3, [pc, #216]	@ (80071d0 <xTaskIncrementTick+0x15c>)
 80070f6:	f04f 32ff 	mov.w	r2, #4294967295
 80070fa:	601a      	str	r2, [r3, #0]
 80070fc:	e03e      	b.n	800717c <xTaskIncrementTick+0x108>
 80070fe:	4b31      	ldr	r3, [pc, #196]	@ (80071c4 <xTaskIncrementTick+0x150>)
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	68db      	ldr	r3, [r3, #12]
 8007104:	68db      	ldr	r3, [r3, #12]
 8007106:	60bb      	str	r3, [r7, #8]
 8007108:	68bb      	ldr	r3, [r7, #8]
 800710a:	685b      	ldr	r3, [r3, #4]
 800710c:	607b      	str	r3, [r7, #4]
 800710e:	693a      	ldr	r2, [r7, #16]
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	429a      	cmp	r2, r3
 8007114:	d203      	bcs.n	800711e <xTaskIncrementTick+0xaa>
 8007116:	4a2e      	ldr	r2, [pc, #184]	@ (80071d0 <xTaskIncrementTick+0x15c>)
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	6013      	str	r3, [r2, #0]
 800711c:	e02e      	b.n	800717c <xTaskIncrementTick+0x108>
 800711e:	68bb      	ldr	r3, [r7, #8]
 8007120:	3304      	adds	r3, #4
 8007122:	4618      	mov	r0, r3
 8007124:	f7fe fcd1 	bl	8005aca <uxListRemove>
 8007128:	68bb      	ldr	r3, [r7, #8]
 800712a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800712c:	2b00      	cmp	r3, #0
 800712e:	d004      	beq.n	800713a <xTaskIncrementTick+0xc6>
 8007130:	68bb      	ldr	r3, [r7, #8]
 8007132:	3318      	adds	r3, #24
 8007134:	4618      	mov	r0, r3
 8007136:	f7fe fcc8 	bl	8005aca <uxListRemove>
 800713a:	68bb      	ldr	r3, [r7, #8]
 800713c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800713e:	2201      	movs	r2, #1
 8007140:	409a      	lsls	r2, r3
 8007142:	4b24      	ldr	r3, [pc, #144]	@ (80071d4 <xTaskIncrementTick+0x160>)
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	4313      	orrs	r3, r2
 8007148:	4a22      	ldr	r2, [pc, #136]	@ (80071d4 <xTaskIncrementTick+0x160>)
 800714a:	6013      	str	r3, [r2, #0]
 800714c:	68bb      	ldr	r3, [r7, #8]
 800714e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007150:	4613      	mov	r3, r2
 8007152:	009b      	lsls	r3, r3, #2
 8007154:	4413      	add	r3, r2
 8007156:	009b      	lsls	r3, r3, #2
 8007158:	4a1f      	ldr	r2, [pc, #124]	@ (80071d8 <xTaskIncrementTick+0x164>)
 800715a:	441a      	add	r2, r3
 800715c:	68bb      	ldr	r3, [r7, #8]
 800715e:	3304      	adds	r3, #4
 8007160:	4619      	mov	r1, r3
 8007162:	4610      	mov	r0, r2
 8007164:	f7fe fc54 	bl	8005a10 <vListInsertEnd>
 8007168:	68bb      	ldr	r3, [r7, #8]
 800716a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800716c:	4b1b      	ldr	r3, [pc, #108]	@ (80071dc <xTaskIncrementTick+0x168>)
 800716e:	681b      	ldr	r3, [r3, #0]
 8007170:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007172:	429a      	cmp	r2, r3
 8007174:	d3b9      	bcc.n	80070ea <xTaskIncrementTick+0x76>
 8007176:	2301      	movs	r3, #1
 8007178:	617b      	str	r3, [r7, #20]
 800717a:	e7b6      	b.n	80070ea <xTaskIncrementTick+0x76>
 800717c:	4b17      	ldr	r3, [pc, #92]	@ (80071dc <xTaskIncrementTick+0x168>)
 800717e:	681b      	ldr	r3, [r3, #0]
 8007180:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007182:	4915      	ldr	r1, [pc, #84]	@ (80071d8 <xTaskIncrementTick+0x164>)
 8007184:	4613      	mov	r3, r2
 8007186:	009b      	lsls	r3, r3, #2
 8007188:	4413      	add	r3, r2
 800718a:	009b      	lsls	r3, r3, #2
 800718c:	440b      	add	r3, r1
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	2b01      	cmp	r3, #1
 8007192:	d901      	bls.n	8007198 <xTaskIncrementTick+0x124>
 8007194:	2301      	movs	r3, #1
 8007196:	617b      	str	r3, [r7, #20]
 8007198:	4b11      	ldr	r3, [pc, #68]	@ (80071e0 <xTaskIncrementTick+0x16c>)
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	2b00      	cmp	r3, #0
 800719e:	d007      	beq.n	80071b0 <xTaskIncrementTick+0x13c>
 80071a0:	2301      	movs	r3, #1
 80071a2:	617b      	str	r3, [r7, #20]
 80071a4:	e004      	b.n	80071b0 <xTaskIncrementTick+0x13c>
 80071a6:	4b0f      	ldr	r3, [pc, #60]	@ (80071e4 <xTaskIncrementTick+0x170>)
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	3301      	adds	r3, #1
 80071ac:	4a0d      	ldr	r2, [pc, #52]	@ (80071e4 <xTaskIncrementTick+0x170>)
 80071ae:	6013      	str	r3, [r2, #0]
 80071b0:	697b      	ldr	r3, [r7, #20]
 80071b2:	4618      	mov	r0, r3
 80071b4:	3718      	adds	r7, #24
 80071b6:	46bd      	mov	sp, r7
 80071b8:	bd80      	pop	{r7, pc}
 80071ba:	bf00      	nop
 80071bc:	20000b14 	.word	0x20000b14
 80071c0:	20000af0 	.word	0x20000af0
 80071c4:	20000aa4 	.word	0x20000aa4
 80071c8:	20000aa8 	.word	0x20000aa8
 80071cc:	20000b04 	.word	0x20000b04
 80071d0:	20000b0c 	.word	0x20000b0c
 80071d4:	20000af4 	.word	0x20000af4
 80071d8:	200009f0 	.word	0x200009f0
 80071dc:	200009ec 	.word	0x200009ec
 80071e0:	20000b00 	.word	0x20000b00
 80071e4:	20000afc 	.word	0x20000afc

080071e8 <vTaskSwitchContext>:
 80071e8:	b480      	push	{r7}
 80071ea:	b087      	sub	sp, #28
 80071ec:	af00      	add	r7, sp, #0
 80071ee:	4b27      	ldr	r3, [pc, #156]	@ (800728c <vTaskSwitchContext+0xa4>)
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d003      	beq.n	80071fe <vTaskSwitchContext+0x16>
 80071f6:	4b26      	ldr	r3, [pc, #152]	@ (8007290 <vTaskSwitchContext+0xa8>)
 80071f8:	2201      	movs	r2, #1
 80071fa:	601a      	str	r2, [r3, #0]
 80071fc:	e040      	b.n	8007280 <vTaskSwitchContext+0x98>
 80071fe:	4b24      	ldr	r3, [pc, #144]	@ (8007290 <vTaskSwitchContext+0xa8>)
 8007200:	2200      	movs	r2, #0
 8007202:	601a      	str	r2, [r3, #0]
 8007204:	4b23      	ldr	r3, [pc, #140]	@ (8007294 <vTaskSwitchContext+0xac>)
 8007206:	681b      	ldr	r3, [r3, #0]
 8007208:	60fb      	str	r3, [r7, #12]
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	fab3 f383 	clz	r3, r3
 8007210:	72fb      	strb	r3, [r7, #11]
 8007212:	7afb      	ldrb	r3, [r7, #11]
 8007214:	f1c3 031f 	rsb	r3, r3, #31
 8007218:	617b      	str	r3, [r7, #20]
 800721a:	491f      	ldr	r1, [pc, #124]	@ (8007298 <vTaskSwitchContext+0xb0>)
 800721c:	697a      	ldr	r2, [r7, #20]
 800721e:	4613      	mov	r3, r2
 8007220:	009b      	lsls	r3, r3, #2
 8007222:	4413      	add	r3, r2
 8007224:	009b      	lsls	r3, r3, #2
 8007226:	440b      	add	r3, r1
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	2b00      	cmp	r3, #0
 800722c:	d10b      	bne.n	8007246 <vTaskSwitchContext+0x5e>
 800722e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007232:	f383 8811 	msr	BASEPRI, r3
 8007236:	f3bf 8f6f 	isb	sy
 800723a:	f3bf 8f4f 	dsb	sy
 800723e:	607b      	str	r3, [r7, #4]
 8007240:	bf00      	nop
 8007242:	bf00      	nop
 8007244:	e7fd      	b.n	8007242 <vTaskSwitchContext+0x5a>
 8007246:	697a      	ldr	r2, [r7, #20]
 8007248:	4613      	mov	r3, r2
 800724a:	009b      	lsls	r3, r3, #2
 800724c:	4413      	add	r3, r2
 800724e:	009b      	lsls	r3, r3, #2
 8007250:	4a11      	ldr	r2, [pc, #68]	@ (8007298 <vTaskSwitchContext+0xb0>)
 8007252:	4413      	add	r3, r2
 8007254:	613b      	str	r3, [r7, #16]
 8007256:	693b      	ldr	r3, [r7, #16]
 8007258:	685b      	ldr	r3, [r3, #4]
 800725a:	685a      	ldr	r2, [r3, #4]
 800725c:	693b      	ldr	r3, [r7, #16]
 800725e:	605a      	str	r2, [r3, #4]
 8007260:	693b      	ldr	r3, [r7, #16]
 8007262:	685a      	ldr	r2, [r3, #4]
 8007264:	693b      	ldr	r3, [r7, #16]
 8007266:	3308      	adds	r3, #8
 8007268:	429a      	cmp	r2, r3
 800726a:	d104      	bne.n	8007276 <vTaskSwitchContext+0x8e>
 800726c:	693b      	ldr	r3, [r7, #16]
 800726e:	685b      	ldr	r3, [r3, #4]
 8007270:	685a      	ldr	r2, [r3, #4]
 8007272:	693b      	ldr	r3, [r7, #16]
 8007274:	605a      	str	r2, [r3, #4]
 8007276:	693b      	ldr	r3, [r7, #16]
 8007278:	685b      	ldr	r3, [r3, #4]
 800727a:	68db      	ldr	r3, [r3, #12]
 800727c:	4a07      	ldr	r2, [pc, #28]	@ (800729c <vTaskSwitchContext+0xb4>)
 800727e:	6013      	str	r3, [r2, #0]
 8007280:	bf00      	nop
 8007282:	371c      	adds	r7, #28
 8007284:	46bd      	mov	sp, r7
 8007286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800728a:	4770      	bx	lr
 800728c:	20000b14 	.word	0x20000b14
 8007290:	20000b00 	.word	0x20000b00
 8007294:	20000af4 	.word	0x20000af4
 8007298:	200009f0 	.word	0x200009f0
 800729c:	200009ec 	.word	0x200009ec

080072a0 <vTaskPlaceOnEventList>:
 80072a0:	b580      	push	{r7, lr}
 80072a2:	b084      	sub	sp, #16
 80072a4:	af00      	add	r7, sp, #0
 80072a6:	6078      	str	r0, [r7, #4]
 80072a8:	6039      	str	r1, [r7, #0]
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d10b      	bne.n	80072c8 <vTaskPlaceOnEventList+0x28>
 80072b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80072b4:	f383 8811 	msr	BASEPRI, r3
 80072b8:	f3bf 8f6f 	isb	sy
 80072bc:	f3bf 8f4f 	dsb	sy
 80072c0:	60fb      	str	r3, [r7, #12]
 80072c2:	bf00      	nop
 80072c4:	bf00      	nop
 80072c6:	e7fd      	b.n	80072c4 <vTaskPlaceOnEventList+0x24>
 80072c8:	4b07      	ldr	r3, [pc, #28]	@ (80072e8 <vTaskPlaceOnEventList+0x48>)
 80072ca:	681b      	ldr	r3, [r3, #0]
 80072cc:	3318      	adds	r3, #24
 80072ce:	4619      	mov	r1, r3
 80072d0:	6878      	ldr	r0, [r7, #4]
 80072d2:	f7fe fbc1 	bl	8005a58 <vListInsert>
 80072d6:	2101      	movs	r1, #1
 80072d8:	6838      	ldr	r0, [r7, #0]
 80072da:	f000 fc6d 	bl	8007bb8 <prvAddCurrentTaskToDelayedList>
 80072de:	bf00      	nop
 80072e0:	3710      	adds	r7, #16
 80072e2:	46bd      	mov	sp, r7
 80072e4:	bd80      	pop	{r7, pc}
 80072e6:	bf00      	nop
 80072e8:	200009ec 	.word	0x200009ec

080072ec <vTaskPlaceOnUnorderedEventList>:
 80072ec:	b580      	push	{r7, lr}
 80072ee:	b086      	sub	sp, #24
 80072f0:	af00      	add	r7, sp, #0
 80072f2:	60f8      	str	r0, [r7, #12]
 80072f4:	60b9      	str	r1, [r7, #8]
 80072f6:	607a      	str	r2, [r7, #4]
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d10b      	bne.n	8007316 <vTaskPlaceOnUnorderedEventList+0x2a>
 80072fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007302:	f383 8811 	msr	BASEPRI, r3
 8007306:	f3bf 8f6f 	isb	sy
 800730a:	f3bf 8f4f 	dsb	sy
 800730e:	617b      	str	r3, [r7, #20]
 8007310:	bf00      	nop
 8007312:	bf00      	nop
 8007314:	e7fd      	b.n	8007312 <vTaskPlaceOnUnorderedEventList+0x26>
 8007316:	4b12      	ldr	r3, [pc, #72]	@ (8007360 <vTaskPlaceOnUnorderedEventList+0x74>)
 8007318:	681b      	ldr	r3, [r3, #0]
 800731a:	2b00      	cmp	r3, #0
 800731c:	d10b      	bne.n	8007336 <vTaskPlaceOnUnorderedEventList+0x4a>
 800731e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007322:	f383 8811 	msr	BASEPRI, r3
 8007326:	f3bf 8f6f 	isb	sy
 800732a:	f3bf 8f4f 	dsb	sy
 800732e:	613b      	str	r3, [r7, #16]
 8007330:	bf00      	nop
 8007332:	bf00      	nop
 8007334:	e7fd      	b.n	8007332 <vTaskPlaceOnUnorderedEventList+0x46>
 8007336:	4b0b      	ldr	r3, [pc, #44]	@ (8007364 <vTaskPlaceOnUnorderedEventList+0x78>)
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	68ba      	ldr	r2, [r7, #8]
 800733c:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
 8007340:	619a      	str	r2, [r3, #24]
 8007342:	4b08      	ldr	r3, [pc, #32]	@ (8007364 <vTaskPlaceOnUnorderedEventList+0x78>)
 8007344:	681b      	ldr	r3, [r3, #0]
 8007346:	3318      	adds	r3, #24
 8007348:	4619      	mov	r1, r3
 800734a:	68f8      	ldr	r0, [r7, #12]
 800734c:	f7fe fb60 	bl	8005a10 <vListInsertEnd>
 8007350:	2101      	movs	r1, #1
 8007352:	6878      	ldr	r0, [r7, #4]
 8007354:	f000 fc30 	bl	8007bb8 <prvAddCurrentTaskToDelayedList>
 8007358:	bf00      	nop
 800735a:	3718      	adds	r7, #24
 800735c:	46bd      	mov	sp, r7
 800735e:	bd80      	pop	{r7, pc}
 8007360:	20000b14 	.word	0x20000b14
 8007364:	200009ec 	.word	0x200009ec

08007368 <vTaskPlaceOnEventListRestricted>:
 8007368:	b580      	push	{r7, lr}
 800736a:	b086      	sub	sp, #24
 800736c:	af00      	add	r7, sp, #0
 800736e:	60f8      	str	r0, [r7, #12]
 8007370:	60b9      	str	r1, [r7, #8]
 8007372:	607a      	str	r2, [r7, #4]
 8007374:	68fb      	ldr	r3, [r7, #12]
 8007376:	2b00      	cmp	r3, #0
 8007378:	d10b      	bne.n	8007392 <vTaskPlaceOnEventListRestricted+0x2a>
 800737a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800737e:	f383 8811 	msr	BASEPRI, r3
 8007382:	f3bf 8f6f 	isb	sy
 8007386:	f3bf 8f4f 	dsb	sy
 800738a:	617b      	str	r3, [r7, #20]
 800738c:	bf00      	nop
 800738e:	bf00      	nop
 8007390:	e7fd      	b.n	800738e <vTaskPlaceOnEventListRestricted+0x26>
 8007392:	4b0a      	ldr	r3, [pc, #40]	@ (80073bc <vTaskPlaceOnEventListRestricted+0x54>)
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	3318      	adds	r3, #24
 8007398:	4619      	mov	r1, r3
 800739a:	68f8      	ldr	r0, [r7, #12]
 800739c:	f7fe fb38 	bl	8005a10 <vListInsertEnd>
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	2b00      	cmp	r3, #0
 80073a4:	d002      	beq.n	80073ac <vTaskPlaceOnEventListRestricted+0x44>
 80073a6:	f04f 33ff 	mov.w	r3, #4294967295
 80073aa:	60bb      	str	r3, [r7, #8]
 80073ac:	6879      	ldr	r1, [r7, #4]
 80073ae:	68b8      	ldr	r0, [r7, #8]
 80073b0:	f000 fc02 	bl	8007bb8 <prvAddCurrentTaskToDelayedList>
 80073b4:	bf00      	nop
 80073b6:	3718      	adds	r7, #24
 80073b8:	46bd      	mov	sp, r7
 80073ba:	bd80      	pop	{r7, pc}
 80073bc:	200009ec 	.word	0x200009ec

080073c0 <xTaskRemoveFromEventList>:
 80073c0:	b580      	push	{r7, lr}
 80073c2:	b086      	sub	sp, #24
 80073c4:	af00      	add	r7, sp, #0
 80073c6:	6078      	str	r0, [r7, #4]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	68db      	ldr	r3, [r3, #12]
 80073cc:	68db      	ldr	r3, [r3, #12]
 80073ce:	613b      	str	r3, [r7, #16]
 80073d0:	693b      	ldr	r3, [r7, #16]
 80073d2:	2b00      	cmp	r3, #0
 80073d4:	d10b      	bne.n	80073ee <xTaskRemoveFromEventList+0x2e>
 80073d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073da:	f383 8811 	msr	BASEPRI, r3
 80073de:	f3bf 8f6f 	isb	sy
 80073e2:	f3bf 8f4f 	dsb	sy
 80073e6:	60fb      	str	r3, [r7, #12]
 80073e8:	bf00      	nop
 80073ea:	bf00      	nop
 80073ec:	e7fd      	b.n	80073ea <xTaskRemoveFromEventList+0x2a>
 80073ee:	693b      	ldr	r3, [r7, #16]
 80073f0:	3318      	adds	r3, #24
 80073f2:	4618      	mov	r0, r3
 80073f4:	f7fe fb69 	bl	8005aca <uxListRemove>
 80073f8:	4b1d      	ldr	r3, [pc, #116]	@ (8007470 <xTaskRemoveFromEventList+0xb0>)
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	2b00      	cmp	r3, #0
 80073fe:	d11c      	bne.n	800743a <xTaskRemoveFromEventList+0x7a>
 8007400:	693b      	ldr	r3, [r7, #16]
 8007402:	3304      	adds	r3, #4
 8007404:	4618      	mov	r0, r3
 8007406:	f7fe fb60 	bl	8005aca <uxListRemove>
 800740a:	693b      	ldr	r3, [r7, #16]
 800740c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800740e:	2201      	movs	r2, #1
 8007410:	409a      	lsls	r2, r3
 8007412:	4b18      	ldr	r3, [pc, #96]	@ (8007474 <xTaskRemoveFromEventList+0xb4>)
 8007414:	681b      	ldr	r3, [r3, #0]
 8007416:	4313      	orrs	r3, r2
 8007418:	4a16      	ldr	r2, [pc, #88]	@ (8007474 <xTaskRemoveFromEventList+0xb4>)
 800741a:	6013      	str	r3, [r2, #0]
 800741c:	693b      	ldr	r3, [r7, #16]
 800741e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007420:	4613      	mov	r3, r2
 8007422:	009b      	lsls	r3, r3, #2
 8007424:	4413      	add	r3, r2
 8007426:	009b      	lsls	r3, r3, #2
 8007428:	4a13      	ldr	r2, [pc, #76]	@ (8007478 <xTaskRemoveFromEventList+0xb8>)
 800742a:	441a      	add	r2, r3
 800742c:	693b      	ldr	r3, [r7, #16]
 800742e:	3304      	adds	r3, #4
 8007430:	4619      	mov	r1, r3
 8007432:	4610      	mov	r0, r2
 8007434:	f7fe faec 	bl	8005a10 <vListInsertEnd>
 8007438:	e005      	b.n	8007446 <xTaskRemoveFromEventList+0x86>
 800743a:	693b      	ldr	r3, [r7, #16]
 800743c:	3318      	adds	r3, #24
 800743e:	4619      	mov	r1, r3
 8007440:	480e      	ldr	r0, [pc, #56]	@ (800747c <xTaskRemoveFromEventList+0xbc>)
 8007442:	f7fe fae5 	bl	8005a10 <vListInsertEnd>
 8007446:	693b      	ldr	r3, [r7, #16]
 8007448:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800744a:	4b0d      	ldr	r3, [pc, #52]	@ (8007480 <xTaskRemoveFromEventList+0xc0>)
 800744c:	681b      	ldr	r3, [r3, #0]
 800744e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007450:	429a      	cmp	r2, r3
 8007452:	d905      	bls.n	8007460 <xTaskRemoveFromEventList+0xa0>
 8007454:	2301      	movs	r3, #1
 8007456:	617b      	str	r3, [r7, #20]
 8007458:	4b0a      	ldr	r3, [pc, #40]	@ (8007484 <xTaskRemoveFromEventList+0xc4>)
 800745a:	2201      	movs	r2, #1
 800745c:	601a      	str	r2, [r3, #0]
 800745e:	e001      	b.n	8007464 <xTaskRemoveFromEventList+0xa4>
 8007460:	2300      	movs	r3, #0
 8007462:	617b      	str	r3, [r7, #20]
 8007464:	697b      	ldr	r3, [r7, #20]
 8007466:	4618      	mov	r0, r3
 8007468:	3718      	adds	r7, #24
 800746a:	46bd      	mov	sp, r7
 800746c:	bd80      	pop	{r7, pc}
 800746e:	bf00      	nop
 8007470:	20000b14 	.word	0x20000b14
 8007474:	20000af4 	.word	0x20000af4
 8007478:	200009f0 	.word	0x200009f0
 800747c:	20000aac 	.word	0x20000aac
 8007480:	200009ec 	.word	0x200009ec
 8007484:	20000b00 	.word	0x20000b00

08007488 <vTaskRemoveFromUnorderedEventList>:
 8007488:	b580      	push	{r7, lr}
 800748a:	b086      	sub	sp, #24
 800748c:	af00      	add	r7, sp, #0
 800748e:	6078      	str	r0, [r7, #4]
 8007490:	6039      	str	r1, [r7, #0]
 8007492:	4b2a      	ldr	r3, [pc, #168]	@ (800753c <vTaskRemoveFromUnorderedEventList+0xb4>)
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	2b00      	cmp	r3, #0
 8007498:	d10b      	bne.n	80074b2 <vTaskRemoveFromUnorderedEventList+0x2a>
 800749a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800749e:	f383 8811 	msr	BASEPRI, r3
 80074a2:	f3bf 8f6f 	isb	sy
 80074a6:	f3bf 8f4f 	dsb	sy
 80074aa:	613b      	str	r3, [r7, #16]
 80074ac:	bf00      	nop
 80074ae:	bf00      	nop
 80074b0:	e7fd      	b.n	80074ae <vTaskRemoveFromUnorderedEventList+0x26>
 80074b2:	683b      	ldr	r3, [r7, #0]
 80074b4:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	601a      	str	r2, [r3, #0]
 80074bc:	687b      	ldr	r3, [r7, #4]
 80074be:	68db      	ldr	r3, [r3, #12]
 80074c0:	617b      	str	r3, [r7, #20]
 80074c2:	697b      	ldr	r3, [r7, #20]
 80074c4:	2b00      	cmp	r3, #0
 80074c6:	d10b      	bne.n	80074e0 <vTaskRemoveFromUnorderedEventList+0x58>
 80074c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80074cc:	f383 8811 	msr	BASEPRI, r3
 80074d0:	f3bf 8f6f 	isb	sy
 80074d4:	f3bf 8f4f 	dsb	sy
 80074d8:	60fb      	str	r3, [r7, #12]
 80074da:	bf00      	nop
 80074dc:	bf00      	nop
 80074de:	e7fd      	b.n	80074dc <vTaskRemoveFromUnorderedEventList+0x54>
 80074e0:	6878      	ldr	r0, [r7, #4]
 80074e2:	f7fe faf2 	bl	8005aca <uxListRemove>
 80074e6:	697b      	ldr	r3, [r7, #20]
 80074e8:	3304      	adds	r3, #4
 80074ea:	4618      	mov	r0, r3
 80074ec:	f7fe faed 	bl	8005aca <uxListRemove>
 80074f0:	697b      	ldr	r3, [r7, #20]
 80074f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074f4:	2201      	movs	r2, #1
 80074f6:	409a      	lsls	r2, r3
 80074f8:	4b11      	ldr	r3, [pc, #68]	@ (8007540 <vTaskRemoveFromUnorderedEventList+0xb8>)
 80074fa:	681b      	ldr	r3, [r3, #0]
 80074fc:	4313      	orrs	r3, r2
 80074fe:	4a10      	ldr	r2, [pc, #64]	@ (8007540 <vTaskRemoveFromUnorderedEventList+0xb8>)
 8007500:	6013      	str	r3, [r2, #0]
 8007502:	697b      	ldr	r3, [r7, #20]
 8007504:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007506:	4613      	mov	r3, r2
 8007508:	009b      	lsls	r3, r3, #2
 800750a:	4413      	add	r3, r2
 800750c:	009b      	lsls	r3, r3, #2
 800750e:	4a0d      	ldr	r2, [pc, #52]	@ (8007544 <vTaskRemoveFromUnorderedEventList+0xbc>)
 8007510:	441a      	add	r2, r3
 8007512:	697b      	ldr	r3, [r7, #20]
 8007514:	3304      	adds	r3, #4
 8007516:	4619      	mov	r1, r3
 8007518:	4610      	mov	r0, r2
 800751a:	f7fe fa79 	bl	8005a10 <vListInsertEnd>
 800751e:	697b      	ldr	r3, [r7, #20]
 8007520:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007522:	4b09      	ldr	r3, [pc, #36]	@ (8007548 <vTaskRemoveFromUnorderedEventList+0xc0>)
 8007524:	681b      	ldr	r3, [r3, #0]
 8007526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007528:	429a      	cmp	r2, r3
 800752a:	d902      	bls.n	8007532 <vTaskRemoveFromUnorderedEventList+0xaa>
 800752c:	4b07      	ldr	r3, [pc, #28]	@ (800754c <vTaskRemoveFromUnorderedEventList+0xc4>)
 800752e:	2201      	movs	r2, #1
 8007530:	601a      	str	r2, [r3, #0]
 8007532:	bf00      	nop
 8007534:	3718      	adds	r7, #24
 8007536:	46bd      	mov	sp, r7
 8007538:	bd80      	pop	{r7, pc}
 800753a:	bf00      	nop
 800753c:	20000b14 	.word	0x20000b14
 8007540:	20000af4 	.word	0x20000af4
 8007544:	200009f0 	.word	0x200009f0
 8007548:	200009ec 	.word	0x200009ec
 800754c:	20000b00 	.word	0x20000b00

08007550 <vTaskInternalSetTimeOutState>:
 8007550:	b480      	push	{r7}
 8007552:	b083      	sub	sp, #12
 8007554:	af00      	add	r7, sp, #0
 8007556:	6078      	str	r0, [r7, #4]
 8007558:	4b06      	ldr	r3, [pc, #24]	@ (8007574 <vTaskInternalSetTimeOutState+0x24>)
 800755a:	681a      	ldr	r2, [r3, #0]
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	601a      	str	r2, [r3, #0]
 8007560:	4b05      	ldr	r3, [pc, #20]	@ (8007578 <vTaskInternalSetTimeOutState+0x28>)
 8007562:	681a      	ldr	r2, [r3, #0]
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	605a      	str	r2, [r3, #4]
 8007568:	bf00      	nop
 800756a:	370c      	adds	r7, #12
 800756c:	46bd      	mov	sp, r7
 800756e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007572:	4770      	bx	lr
 8007574:	20000b04 	.word	0x20000b04
 8007578:	20000af0 	.word	0x20000af0

0800757c <xTaskCheckForTimeOut>:
 800757c:	b580      	push	{r7, lr}
 800757e:	b088      	sub	sp, #32
 8007580:	af00      	add	r7, sp, #0
 8007582:	6078      	str	r0, [r7, #4]
 8007584:	6039      	str	r1, [r7, #0]
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	2b00      	cmp	r3, #0
 800758a:	d10b      	bne.n	80075a4 <xTaskCheckForTimeOut+0x28>
 800758c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007590:	f383 8811 	msr	BASEPRI, r3
 8007594:	f3bf 8f6f 	isb	sy
 8007598:	f3bf 8f4f 	dsb	sy
 800759c:	613b      	str	r3, [r7, #16]
 800759e:	bf00      	nop
 80075a0:	bf00      	nop
 80075a2:	e7fd      	b.n	80075a0 <xTaskCheckForTimeOut+0x24>
 80075a4:	683b      	ldr	r3, [r7, #0]
 80075a6:	2b00      	cmp	r3, #0
 80075a8:	d10b      	bne.n	80075c2 <xTaskCheckForTimeOut+0x46>
 80075aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075ae:	f383 8811 	msr	BASEPRI, r3
 80075b2:	f3bf 8f6f 	isb	sy
 80075b6:	f3bf 8f4f 	dsb	sy
 80075ba:	60fb      	str	r3, [r7, #12]
 80075bc:	bf00      	nop
 80075be:	bf00      	nop
 80075c0:	e7fd      	b.n	80075be <xTaskCheckForTimeOut+0x42>
 80075c2:	f001 f8a9 	bl	8008718 <vPortEnterCritical>
 80075c6:	4b1d      	ldr	r3, [pc, #116]	@ (800763c <xTaskCheckForTimeOut+0xc0>)
 80075c8:	681b      	ldr	r3, [r3, #0]
 80075ca:	61bb      	str	r3, [r7, #24]
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	685b      	ldr	r3, [r3, #4]
 80075d0:	69ba      	ldr	r2, [r7, #24]
 80075d2:	1ad3      	subs	r3, r2, r3
 80075d4:	617b      	str	r3, [r7, #20]
 80075d6:	683b      	ldr	r3, [r7, #0]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80075de:	d102      	bne.n	80075e6 <xTaskCheckForTimeOut+0x6a>
 80075e0:	2300      	movs	r3, #0
 80075e2:	61fb      	str	r3, [r7, #28]
 80075e4:	e023      	b.n	800762e <xTaskCheckForTimeOut+0xb2>
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	681a      	ldr	r2, [r3, #0]
 80075ea:	4b15      	ldr	r3, [pc, #84]	@ (8007640 <xTaskCheckForTimeOut+0xc4>)
 80075ec:	681b      	ldr	r3, [r3, #0]
 80075ee:	429a      	cmp	r2, r3
 80075f0:	d007      	beq.n	8007602 <xTaskCheckForTimeOut+0x86>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	685b      	ldr	r3, [r3, #4]
 80075f6:	69ba      	ldr	r2, [r7, #24]
 80075f8:	429a      	cmp	r2, r3
 80075fa:	d302      	bcc.n	8007602 <xTaskCheckForTimeOut+0x86>
 80075fc:	2301      	movs	r3, #1
 80075fe:	61fb      	str	r3, [r7, #28]
 8007600:	e015      	b.n	800762e <xTaskCheckForTimeOut+0xb2>
 8007602:	683b      	ldr	r3, [r7, #0]
 8007604:	681b      	ldr	r3, [r3, #0]
 8007606:	697a      	ldr	r2, [r7, #20]
 8007608:	429a      	cmp	r2, r3
 800760a:	d20b      	bcs.n	8007624 <xTaskCheckForTimeOut+0xa8>
 800760c:	683b      	ldr	r3, [r7, #0]
 800760e:	681a      	ldr	r2, [r3, #0]
 8007610:	697b      	ldr	r3, [r7, #20]
 8007612:	1ad2      	subs	r2, r2, r3
 8007614:	683b      	ldr	r3, [r7, #0]
 8007616:	601a      	str	r2, [r3, #0]
 8007618:	6878      	ldr	r0, [r7, #4]
 800761a:	f7ff ff99 	bl	8007550 <vTaskInternalSetTimeOutState>
 800761e:	2300      	movs	r3, #0
 8007620:	61fb      	str	r3, [r7, #28]
 8007622:	e004      	b.n	800762e <xTaskCheckForTimeOut+0xb2>
 8007624:	683b      	ldr	r3, [r7, #0]
 8007626:	2200      	movs	r2, #0
 8007628:	601a      	str	r2, [r3, #0]
 800762a:	2301      	movs	r3, #1
 800762c:	61fb      	str	r3, [r7, #28]
 800762e:	f001 f8a5 	bl	800877c <vPortExitCritical>
 8007632:	69fb      	ldr	r3, [r7, #28]
 8007634:	4618      	mov	r0, r3
 8007636:	3720      	adds	r7, #32
 8007638:	46bd      	mov	sp, r7
 800763a:	bd80      	pop	{r7, pc}
 800763c:	20000af0 	.word	0x20000af0
 8007640:	20000b04 	.word	0x20000b04

08007644 <vTaskMissedYield>:
 8007644:	b480      	push	{r7}
 8007646:	af00      	add	r7, sp, #0
 8007648:	4b03      	ldr	r3, [pc, #12]	@ (8007658 <vTaskMissedYield+0x14>)
 800764a:	2201      	movs	r2, #1
 800764c:	601a      	str	r2, [r3, #0]
 800764e:	bf00      	nop
 8007650:	46bd      	mov	sp, r7
 8007652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007656:	4770      	bx	lr
 8007658:	20000b00 	.word	0x20000b00

0800765c <prvIdleTask>:
 800765c:	b580      	push	{r7, lr}
 800765e:	b082      	sub	sp, #8
 8007660:	af00      	add	r7, sp, #0
 8007662:	6078      	str	r0, [r7, #4]
 8007664:	f000 f852 	bl	800770c <prvCheckTasksWaitingTermination>
 8007668:	4b06      	ldr	r3, [pc, #24]	@ (8007684 <prvIdleTask+0x28>)
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	2b01      	cmp	r3, #1
 800766e:	d9f9      	bls.n	8007664 <prvIdleTask+0x8>
 8007670:	4b05      	ldr	r3, [pc, #20]	@ (8007688 <prvIdleTask+0x2c>)
 8007672:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007676:	601a      	str	r2, [r3, #0]
 8007678:	f3bf 8f4f 	dsb	sy
 800767c:	f3bf 8f6f 	isb	sy
 8007680:	e7f0      	b.n	8007664 <prvIdleTask+0x8>
 8007682:	bf00      	nop
 8007684:	200009f0 	.word	0x200009f0
 8007688:	e000ed04 	.word	0xe000ed04

0800768c <prvInitialiseTaskLists>:
 800768c:	b580      	push	{r7, lr}
 800768e:	b082      	sub	sp, #8
 8007690:	af00      	add	r7, sp, #0
 8007692:	2300      	movs	r3, #0
 8007694:	607b      	str	r3, [r7, #4]
 8007696:	e00c      	b.n	80076b2 <prvInitialiseTaskLists+0x26>
 8007698:	687a      	ldr	r2, [r7, #4]
 800769a:	4613      	mov	r3, r2
 800769c:	009b      	lsls	r3, r3, #2
 800769e:	4413      	add	r3, r2
 80076a0:	009b      	lsls	r3, r3, #2
 80076a2:	4a12      	ldr	r2, [pc, #72]	@ (80076ec <prvInitialiseTaskLists+0x60>)
 80076a4:	4413      	add	r3, r2
 80076a6:	4618      	mov	r0, r3
 80076a8:	f7fe f985 	bl	80059b6 <vListInitialise>
 80076ac:	687b      	ldr	r3, [r7, #4]
 80076ae:	3301      	adds	r3, #1
 80076b0:	607b      	str	r3, [r7, #4]
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	2b06      	cmp	r3, #6
 80076b6:	d9ef      	bls.n	8007698 <prvInitialiseTaskLists+0xc>
 80076b8:	480d      	ldr	r0, [pc, #52]	@ (80076f0 <prvInitialiseTaskLists+0x64>)
 80076ba:	f7fe f97c 	bl	80059b6 <vListInitialise>
 80076be:	480d      	ldr	r0, [pc, #52]	@ (80076f4 <prvInitialiseTaskLists+0x68>)
 80076c0:	f7fe f979 	bl	80059b6 <vListInitialise>
 80076c4:	480c      	ldr	r0, [pc, #48]	@ (80076f8 <prvInitialiseTaskLists+0x6c>)
 80076c6:	f7fe f976 	bl	80059b6 <vListInitialise>
 80076ca:	480c      	ldr	r0, [pc, #48]	@ (80076fc <prvInitialiseTaskLists+0x70>)
 80076cc:	f7fe f973 	bl	80059b6 <vListInitialise>
 80076d0:	480b      	ldr	r0, [pc, #44]	@ (8007700 <prvInitialiseTaskLists+0x74>)
 80076d2:	f7fe f970 	bl	80059b6 <vListInitialise>
 80076d6:	4b0b      	ldr	r3, [pc, #44]	@ (8007704 <prvInitialiseTaskLists+0x78>)
 80076d8:	4a05      	ldr	r2, [pc, #20]	@ (80076f0 <prvInitialiseTaskLists+0x64>)
 80076da:	601a      	str	r2, [r3, #0]
 80076dc:	4b0a      	ldr	r3, [pc, #40]	@ (8007708 <prvInitialiseTaskLists+0x7c>)
 80076de:	4a05      	ldr	r2, [pc, #20]	@ (80076f4 <prvInitialiseTaskLists+0x68>)
 80076e0:	601a      	str	r2, [r3, #0]
 80076e2:	bf00      	nop
 80076e4:	3708      	adds	r7, #8
 80076e6:	46bd      	mov	sp, r7
 80076e8:	bd80      	pop	{r7, pc}
 80076ea:	bf00      	nop
 80076ec:	200009f0 	.word	0x200009f0
 80076f0:	20000a7c 	.word	0x20000a7c
 80076f4:	20000a90 	.word	0x20000a90
 80076f8:	20000aac 	.word	0x20000aac
 80076fc:	20000ac0 	.word	0x20000ac0
 8007700:	20000ad8 	.word	0x20000ad8
 8007704:	20000aa4 	.word	0x20000aa4
 8007708:	20000aa8 	.word	0x20000aa8

0800770c <prvCheckTasksWaitingTermination>:
 800770c:	b580      	push	{r7, lr}
 800770e:	b082      	sub	sp, #8
 8007710:	af00      	add	r7, sp, #0
 8007712:	e019      	b.n	8007748 <prvCheckTasksWaitingTermination+0x3c>
 8007714:	f001 f800 	bl	8008718 <vPortEnterCritical>
 8007718:	4b10      	ldr	r3, [pc, #64]	@ (800775c <prvCheckTasksWaitingTermination+0x50>)
 800771a:	68db      	ldr	r3, [r3, #12]
 800771c:	68db      	ldr	r3, [r3, #12]
 800771e:	607b      	str	r3, [r7, #4]
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	3304      	adds	r3, #4
 8007724:	4618      	mov	r0, r3
 8007726:	f7fe f9d0 	bl	8005aca <uxListRemove>
 800772a:	4b0d      	ldr	r3, [pc, #52]	@ (8007760 <prvCheckTasksWaitingTermination+0x54>)
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	3b01      	subs	r3, #1
 8007730:	4a0b      	ldr	r2, [pc, #44]	@ (8007760 <prvCheckTasksWaitingTermination+0x54>)
 8007732:	6013      	str	r3, [r2, #0]
 8007734:	4b0b      	ldr	r3, [pc, #44]	@ (8007764 <prvCheckTasksWaitingTermination+0x58>)
 8007736:	681b      	ldr	r3, [r3, #0]
 8007738:	3b01      	subs	r3, #1
 800773a:	4a0a      	ldr	r2, [pc, #40]	@ (8007764 <prvCheckTasksWaitingTermination+0x58>)
 800773c:	6013      	str	r3, [r2, #0]
 800773e:	f001 f81d 	bl	800877c <vPortExitCritical>
 8007742:	6878      	ldr	r0, [r7, #4]
 8007744:	f000 f810 	bl	8007768 <prvDeleteTCB>
 8007748:	4b06      	ldr	r3, [pc, #24]	@ (8007764 <prvCheckTasksWaitingTermination+0x58>)
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	2b00      	cmp	r3, #0
 800774e:	d1e1      	bne.n	8007714 <prvCheckTasksWaitingTermination+0x8>
 8007750:	bf00      	nop
 8007752:	bf00      	nop
 8007754:	3708      	adds	r7, #8
 8007756:	46bd      	mov	sp, r7
 8007758:	bd80      	pop	{r7, pc}
 800775a:	bf00      	nop
 800775c:	20000ac0 	.word	0x20000ac0
 8007760:	20000aec 	.word	0x20000aec
 8007764:	20000ad4 	.word	0x20000ad4

08007768 <prvDeleteTCB>:
 8007768:	b580      	push	{r7, lr}
 800776a:	b084      	sub	sp, #16
 800776c:	af00      	add	r7, sp, #0
 800776e:	6078      	str	r0, [r7, #4]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007776:	2b00      	cmp	r3, #0
 8007778:	d108      	bne.n	800778c <prvDeleteTCB+0x24>
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800777e:	4618      	mov	r0, r3
 8007780:	f001 f9ba 	bl	8008af8 <vPortFree>
 8007784:	6878      	ldr	r0, [r7, #4]
 8007786:	f001 f9b7 	bl	8008af8 <vPortFree>
 800778a:	e019      	b.n	80077c0 <prvDeleteTCB+0x58>
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007792:	2b01      	cmp	r3, #1
 8007794:	d103      	bne.n	800779e <prvDeleteTCB+0x36>
 8007796:	6878      	ldr	r0, [r7, #4]
 8007798:	f001 f9ae 	bl	8008af8 <vPortFree>
 800779c:	e010      	b.n	80077c0 <prvDeleteTCB+0x58>
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80077a4:	2b02      	cmp	r3, #2
 80077a6:	d00b      	beq.n	80077c0 <prvDeleteTCB+0x58>
 80077a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077ac:	f383 8811 	msr	BASEPRI, r3
 80077b0:	f3bf 8f6f 	isb	sy
 80077b4:	f3bf 8f4f 	dsb	sy
 80077b8:	60fb      	str	r3, [r7, #12]
 80077ba:	bf00      	nop
 80077bc:	bf00      	nop
 80077be:	e7fd      	b.n	80077bc <prvDeleteTCB+0x54>
 80077c0:	bf00      	nop
 80077c2:	3710      	adds	r7, #16
 80077c4:	46bd      	mov	sp, r7
 80077c6:	bd80      	pop	{r7, pc}

080077c8 <prvResetNextTaskUnblockTime>:
 80077c8:	b480      	push	{r7}
 80077ca:	b083      	sub	sp, #12
 80077cc:	af00      	add	r7, sp, #0
 80077ce:	4b0c      	ldr	r3, [pc, #48]	@ (8007800 <prvResetNextTaskUnblockTime+0x38>)
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	681b      	ldr	r3, [r3, #0]
 80077d4:	2b00      	cmp	r3, #0
 80077d6:	d104      	bne.n	80077e2 <prvResetNextTaskUnblockTime+0x1a>
 80077d8:	4b0a      	ldr	r3, [pc, #40]	@ (8007804 <prvResetNextTaskUnblockTime+0x3c>)
 80077da:	f04f 32ff 	mov.w	r2, #4294967295
 80077de:	601a      	str	r2, [r3, #0]
 80077e0:	e008      	b.n	80077f4 <prvResetNextTaskUnblockTime+0x2c>
 80077e2:	4b07      	ldr	r3, [pc, #28]	@ (8007800 <prvResetNextTaskUnblockTime+0x38>)
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	68db      	ldr	r3, [r3, #12]
 80077e8:	68db      	ldr	r3, [r3, #12]
 80077ea:	607b      	str	r3, [r7, #4]
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	685b      	ldr	r3, [r3, #4]
 80077f0:	4a04      	ldr	r2, [pc, #16]	@ (8007804 <prvResetNextTaskUnblockTime+0x3c>)
 80077f2:	6013      	str	r3, [r2, #0]
 80077f4:	bf00      	nop
 80077f6:	370c      	adds	r7, #12
 80077f8:	46bd      	mov	sp, r7
 80077fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fe:	4770      	bx	lr
 8007800:	20000aa4 	.word	0x20000aa4
 8007804:	20000b0c 	.word	0x20000b0c

08007808 <xTaskGetSchedulerState>:
 8007808:	b480      	push	{r7}
 800780a:	b083      	sub	sp, #12
 800780c:	af00      	add	r7, sp, #0
 800780e:	4b0b      	ldr	r3, [pc, #44]	@ (800783c <xTaskGetSchedulerState+0x34>)
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	2b00      	cmp	r3, #0
 8007814:	d102      	bne.n	800781c <xTaskGetSchedulerState+0x14>
 8007816:	2301      	movs	r3, #1
 8007818:	607b      	str	r3, [r7, #4]
 800781a:	e008      	b.n	800782e <xTaskGetSchedulerState+0x26>
 800781c:	4b08      	ldr	r3, [pc, #32]	@ (8007840 <xTaskGetSchedulerState+0x38>)
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	2b00      	cmp	r3, #0
 8007822:	d102      	bne.n	800782a <xTaskGetSchedulerState+0x22>
 8007824:	2302      	movs	r3, #2
 8007826:	607b      	str	r3, [r7, #4]
 8007828:	e001      	b.n	800782e <xTaskGetSchedulerState+0x26>
 800782a:	2300      	movs	r3, #0
 800782c:	607b      	str	r3, [r7, #4]
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	4618      	mov	r0, r3
 8007832:	370c      	adds	r7, #12
 8007834:	46bd      	mov	sp, r7
 8007836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800783a:	4770      	bx	lr
 800783c:	20000af8 	.word	0x20000af8
 8007840:	20000b14 	.word	0x20000b14

08007844 <xTaskPriorityInherit>:
 8007844:	b580      	push	{r7, lr}
 8007846:	b084      	sub	sp, #16
 8007848:	af00      	add	r7, sp, #0
 800784a:	6078      	str	r0, [r7, #4]
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	60bb      	str	r3, [r7, #8]
 8007850:	2300      	movs	r3, #0
 8007852:	60fb      	str	r3, [r7, #12]
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	2b00      	cmp	r3, #0
 8007858:	d05e      	beq.n	8007918 <xTaskPriorityInherit+0xd4>
 800785a:	68bb      	ldr	r3, [r7, #8]
 800785c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800785e:	4b31      	ldr	r3, [pc, #196]	@ (8007924 <xTaskPriorityInherit+0xe0>)
 8007860:	681b      	ldr	r3, [r3, #0]
 8007862:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007864:	429a      	cmp	r2, r3
 8007866:	d24e      	bcs.n	8007906 <xTaskPriorityInherit+0xc2>
 8007868:	68bb      	ldr	r3, [r7, #8]
 800786a:	699b      	ldr	r3, [r3, #24]
 800786c:	2b00      	cmp	r3, #0
 800786e:	db06      	blt.n	800787e <xTaskPriorityInherit+0x3a>
 8007870:	4b2c      	ldr	r3, [pc, #176]	@ (8007924 <xTaskPriorityInherit+0xe0>)
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007876:	f1c3 0207 	rsb	r2, r3, #7
 800787a:	68bb      	ldr	r3, [r7, #8]
 800787c:	619a      	str	r2, [r3, #24]
 800787e:	68bb      	ldr	r3, [r7, #8]
 8007880:	6959      	ldr	r1, [r3, #20]
 8007882:	68bb      	ldr	r3, [r7, #8]
 8007884:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007886:	4613      	mov	r3, r2
 8007888:	009b      	lsls	r3, r3, #2
 800788a:	4413      	add	r3, r2
 800788c:	009b      	lsls	r3, r3, #2
 800788e:	4a26      	ldr	r2, [pc, #152]	@ (8007928 <xTaskPriorityInherit+0xe4>)
 8007890:	4413      	add	r3, r2
 8007892:	4299      	cmp	r1, r3
 8007894:	d12f      	bne.n	80078f6 <xTaskPriorityInherit+0xb2>
 8007896:	68bb      	ldr	r3, [r7, #8]
 8007898:	3304      	adds	r3, #4
 800789a:	4618      	mov	r0, r3
 800789c:	f7fe f915 	bl	8005aca <uxListRemove>
 80078a0:	4603      	mov	r3, r0
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	d10a      	bne.n	80078bc <xTaskPriorityInherit+0x78>
 80078a6:	68bb      	ldr	r3, [r7, #8]
 80078a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078aa:	2201      	movs	r2, #1
 80078ac:	fa02 f303 	lsl.w	r3, r2, r3
 80078b0:	43da      	mvns	r2, r3
 80078b2:	4b1e      	ldr	r3, [pc, #120]	@ (800792c <xTaskPriorityInherit+0xe8>)
 80078b4:	681b      	ldr	r3, [r3, #0]
 80078b6:	4013      	ands	r3, r2
 80078b8:	4a1c      	ldr	r2, [pc, #112]	@ (800792c <xTaskPriorityInherit+0xe8>)
 80078ba:	6013      	str	r3, [r2, #0]
 80078bc:	4b19      	ldr	r3, [pc, #100]	@ (8007924 <xTaskPriorityInherit+0xe0>)
 80078be:	681b      	ldr	r3, [r3, #0]
 80078c0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80078c2:	68bb      	ldr	r3, [r7, #8]
 80078c4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80078c6:	68bb      	ldr	r3, [r7, #8]
 80078c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078ca:	2201      	movs	r2, #1
 80078cc:	409a      	lsls	r2, r3
 80078ce:	4b17      	ldr	r3, [pc, #92]	@ (800792c <xTaskPriorityInherit+0xe8>)
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	4313      	orrs	r3, r2
 80078d4:	4a15      	ldr	r2, [pc, #84]	@ (800792c <xTaskPriorityInherit+0xe8>)
 80078d6:	6013      	str	r3, [r2, #0]
 80078d8:	68bb      	ldr	r3, [r7, #8]
 80078da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80078dc:	4613      	mov	r3, r2
 80078de:	009b      	lsls	r3, r3, #2
 80078e0:	4413      	add	r3, r2
 80078e2:	009b      	lsls	r3, r3, #2
 80078e4:	4a10      	ldr	r2, [pc, #64]	@ (8007928 <xTaskPriorityInherit+0xe4>)
 80078e6:	441a      	add	r2, r3
 80078e8:	68bb      	ldr	r3, [r7, #8]
 80078ea:	3304      	adds	r3, #4
 80078ec:	4619      	mov	r1, r3
 80078ee:	4610      	mov	r0, r2
 80078f0:	f7fe f88e 	bl	8005a10 <vListInsertEnd>
 80078f4:	e004      	b.n	8007900 <xTaskPriorityInherit+0xbc>
 80078f6:	4b0b      	ldr	r3, [pc, #44]	@ (8007924 <xTaskPriorityInherit+0xe0>)
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80078fc:	68bb      	ldr	r3, [r7, #8]
 80078fe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007900:	2301      	movs	r3, #1
 8007902:	60fb      	str	r3, [r7, #12]
 8007904:	e008      	b.n	8007918 <xTaskPriorityInherit+0xd4>
 8007906:	68bb      	ldr	r3, [r7, #8]
 8007908:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800790a:	4b06      	ldr	r3, [pc, #24]	@ (8007924 <xTaskPriorityInherit+0xe0>)
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007910:	429a      	cmp	r2, r3
 8007912:	d201      	bcs.n	8007918 <xTaskPriorityInherit+0xd4>
 8007914:	2301      	movs	r3, #1
 8007916:	60fb      	str	r3, [r7, #12]
 8007918:	68fb      	ldr	r3, [r7, #12]
 800791a:	4618      	mov	r0, r3
 800791c:	3710      	adds	r7, #16
 800791e:	46bd      	mov	sp, r7
 8007920:	bd80      	pop	{r7, pc}
 8007922:	bf00      	nop
 8007924:	200009ec 	.word	0x200009ec
 8007928:	200009f0 	.word	0x200009f0
 800792c:	20000af4 	.word	0x20000af4

08007930 <xTaskPriorityDisinherit>:
 8007930:	b580      	push	{r7, lr}
 8007932:	b086      	sub	sp, #24
 8007934:	af00      	add	r7, sp, #0
 8007936:	6078      	str	r0, [r7, #4]
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	613b      	str	r3, [r7, #16]
 800793c:	2300      	movs	r3, #0
 800793e:	617b      	str	r3, [r7, #20]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	2b00      	cmp	r3, #0
 8007944:	d070      	beq.n	8007a28 <xTaskPriorityDisinherit+0xf8>
 8007946:	4b3b      	ldr	r3, [pc, #236]	@ (8007a34 <xTaskPriorityDisinherit+0x104>)
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	693a      	ldr	r2, [r7, #16]
 800794c:	429a      	cmp	r2, r3
 800794e:	d00b      	beq.n	8007968 <xTaskPriorityDisinherit+0x38>
 8007950:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007954:	f383 8811 	msr	BASEPRI, r3
 8007958:	f3bf 8f6f 	isb	sy
 800795c:	f3bf 8f4f 	dsb	sy
 8007960:	60fb      	str	r3, [r7, #12]
 8007962:	bf00      	nop
 8007964:	bf00      	nop
 8007966:	e7fd      	b.n	8007964 <xTaskPriorityDisinherit+0x34>
 8007968:	693b      	ldr	r3, [r7, #16]
 800796a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800796c:	2b00      	cmp	r3, #0
 800796e:	d10b      	bne.n	8007988 <xTaskPriorityDisinherit+0x58>
 8007970:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007974:	f383 8811 	msr	BASEPRI, r3
 8007978:	f3bf 8f6f 	isb	sy
 800797c:	f3bf 8f4f 	dsb	sy
 8007980:	60bb      	str	r3, [r7, #8]
 8007982:	bf00      	nop
 8007984:	bf00      	nop
 8007986:	e7fd      	b.n	8007984 <xTaskPriorityDisinherit+0x54>
 8007988:	693b      	ldr	r3, [r7, #16]
 800798a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800798c:	1e5a      	subs	r2, r3, #1
 800798e:	693b      	ldr	r3, [r7, #16]
 8007990:	649a      	str	r2, [r3, #72]	@ 0x48
 8007992:	693b      	ldr	r3, [r7, #16]
 8007994:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007996:	693b      	ldr	r3, [r7, #16]
 8007998:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800799a:	429a      	cmp	r2, r3
 800799c:	d044      	beq.n	8007a28 <xTaskPriorityDisinherit+0xf8>
 800799e:	693b      	ldr	r3, [r7, #16]
 80079a0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80079a2:	2b00      	cmp	r3, #0
 80079a4:	d140      	bne.n	8007a28 <xTaskPriorityDisinherit+0xf8>
 80079a6:	693b      	ldr	r3, [r7, #16]
 80079a8:	3304      	adds	r3, #4
 80079aa:	4618      	mov	r0, r3
 80079ac:	f7fe f88d 	bl	8005aca <uxListRemove>
 80079b0:	4603      	mov	r3, r0
 80079b2:	2b00      	cmp	r3, #0
 80079b4:	d115      	bne.n	80079e2 <xTaskPriorityDisinherit+0xb2>
 80079b6:	693b      	ldr	r3, [r7, #16]
 80079b8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80079ba:	491f      	ldr	r1, [pc, #124]	@ (8007a38 <xTaskPriorityDisinherit+0x108>)
 80079bc:	4613      	mov	r3, r2
 80079be:	009b      	lsls	r3, r3, #2
 80079c0:	4413      	add	r3, r2
 80079c2:	009b      	lsls	r3, r3, #2
 80079c4:	440b      	add	r3, r1
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	2b00      	cmp	r3, #0
 80079ca:	d10a      	bne.n	80079e2 <xTaskPriorityDisinherit+0xb2>
 80079cc:	693b      	ldr	r3, [r7, #16]
 80079ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80079d0:	2201      	movs	r2, #1
 80079d2:	fa02 f303 	lsl.w	r3, r2, r3
 80079d6:	43da      	mvns	r2, r3
 80079d8:	4b18      	ldr	r3, [pc, #96]	@ (8007a3c <xTaskPriorityDisinherit+0x10c>)
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	4013      	ands	r3, r2
 80079de:	4a17      	ldr	r2, [pc, #92]	@ (8007a3c <xTaskPriorityDisinherit+0x10c>)
 80079e0:	6013      	str	r3, [r2, #0]
 80079e2:	693b      	ldr	r3, [r7, #16]
 80079e4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80079e6:	693b      	ldr	r3, [r7, #16]
 80079e8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80079ea:	693b      	ldr	r3, [r7, #16]
 80079ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80079ee:	f1c3 0207 	rsb	r2, r3, #7
 80079f2:	693b      	ldr	r3, [r7, #16]
 80079f4:	619a      	str	r2, [r3, #24]
 80079f6:	693b      	ldr	r3, [r7, #16]
 80079f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80079fa:	2201      	movs	r2, #1
 80079fc:	409a      	lsls	r2, r3
 80079fe:	4b0f      	ldr	r3, [pc, #60]	@ (8007a3c <xTaskPriorityDisinherit+0x10c>)
 8007a00:	681b      	ldr	r3, [r3, #0]
 8007a02:	4313      	orrs	r3, r2
 8007a04:	4a0d      	ldr	r2, [pc, #52]	@ (8007a3c <xTaskPriorityDisinherit+0x10c>)
 8007a06:	6013      	str	r3, [r2, #0]
 8007a08:	693b      	ldr	r3, [r7, #16]
 8007a0a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007a0c:	4613      	mov	r3, r2
 8007a0e:	009b      	lsls	r3, r3, #2
 8007a10:	4413      	add	r3, r2
 8007a12:	009b      	lsls	r3, r3, #2
 8007a14:	4a08      	ldr	r2, [pc, #32]	@ (8007a38 <xTaskPriorityDisinherit+0x108>)
 8007a16:	441a      	add	r2, r3
 8007a18:	693b      	ldr	r3, [r7, #16]
 8007a1a:	3304      	adds	r3, #4
 8007a1c:	4619      	mov	r1, r3
 8007a1e:	4610      	mov	r0, r2
 8007a20:	f7fd fff6 	bl	8005a10 <vListInsertEnd>
 8007a24:	2301      	movs	r3, #1
 8007a26:	617b      	str	r3, [r7, #20]
 8007a28:	697b      	ldr	r3, [r7, #20]
 8007a2a:	4618      	mov	r0, r3
 8007a2c:	3718      	adds	r7, #24
 8007a2e:	46bd      	mov	sp, r7
 8007a30:	bd80      	pop	{r7, pc}
 8007a32:	bf00      	nop
 8007a34:	200009ec 	.word	0x200009ec
 8007a38:	200009f0 	.word	0x200009f0
 8007a3c:	20000af4 	.word	0x20000af4

08007a40 <vTaskPriorityDisinheritAfterTimeout>:
 8007a40:	b580      	push	{r7, lr}
 8007a42:	b088      	sub	sp, #32
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	6078      	str	r0, [r7, #4]
 8007a48:	6039      	str	r1, [r7, #0]
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	61bb      	str	r3, [r7, #24]
 8007a4e:	2301      	movs	r3, #1
 8007a50:	617b      	str	r3, [r7, #20]
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	d079      	beq.n	8007b4c <vTaskPriorityDisinheritAfterTimeout+0x10c>
 8007a58:	69bb      	ldr	r3, [r7, #24]
 8007a5a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	d10b      	bne.n	8007a78 <vTaskPriorityDisinheritAfterTimeout+0x38>
 8007a60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a64:	f383 8811 	msr	BASEPRI, r3
 8007a68:	f3bf 8f6f 	isb	sy
 8007a6c:	f3bf 8f4f 	dsb	sy
 8007a70:	60fb      	str	r3, [r7, #12]
 8007a72:	bf00      	nop
 8007a74:	bf00      	nop
 8007a76:	e7fd      	b.n	8007a74 <vTaskPriorityDisinheritAfterTimeout+0x34>
 8007a78:	69bb      	ldr	r3, [r7, #24]
 8007a7a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007a7c:	683a      	ldr	r2, [r7, #0]
 8007a7e:	429a      	cmp	r2, r3
 8007a80:	d902      	bls.n	8007a88 <vTaskPriorityDisinheritAfterTimeout+0x48>
 8007a82:	683b      	ldr	r3, [r7, #0]
 8007a84:	61fb      	str	r3, [r7, #28]
 8007a86:	e002      	b.n	8007a8e <vTaskPriorityDisinheritAfterTimeout+0x4e>
 8007a88:	69bb      	ldr	r3, [r7, #24]
 8007a8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007a8c:	61fb      	str	r3, [r7, #28]
 8007a8e:	69bb      	ldr	r3, [r7, #24]
 8007a90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007a92:	69fa      	ldr	r2, [r7, #28]
 8007a94:	429a      	cmp	r2, r3
 8007a96:	d059      	beq.n	8007b4c <vTaskPriorityDisinheritAfterTimeout+0x10c>
 8007a98:	69bb      	ldr	r3, [r7, #24]
 8007a9a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007a9c:	697a      	ldr	r2, [r7, #20]
 8007a9e:	429a      	cmp	r2, r3
 8007aa0:	d154      	bne.n	8007b4c <vTaskPriorityDisinheritAfterTimeout+0x10c>
 8007aa2:	4b2c      	ldr	r3, [pc, #176]	@ (8007b54 <vTaskPriorityDisinheritAfterTimeout+0x114>)
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	69ba      	ldr	r2, [r7, #24]
 8007aa8:	429a      	cmp	r2, r3
 8007aaa:	d10b      	bne.n	8007ac4 <vTaskPriorityDisinheritAfterTimeout+0x84>
 8007aac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ab0:	f383 8811 	msr	BASEPRI, r3
 8007ab4:	f3bf 8f6f 	isb	sy
 8007ab8:	f3bf 8f4f 	dsb	sy
 8007abc:	60bb      	str	r3, [r7, #8]
 8007abe:	bf00      	nop
 8007ac0:	bf00      	nop
 8007ac2:	e7fd      	b.n	8007ac0 <vTaskPriorityDisinheritAfterTimeout+0x80>
 8007ac4:	69bb      	ldr	r3, [r7, #24]
 8007ac6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007ac8:	613b      	str	r3, [r7, #16]
 8007aca:	69bb      	ldr	r3, [r7, #24]
 8007acc:	69fa      	ldr	r2, [r7, #28]
 8007ace:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007ad0:	69bb      	ldr	r3, [r7, #24]
 8007ad2:	699b      	ldr	r3, [r3, #24]
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	db04      	blt.n	8007ae2 <vTaskPriorityDisinheritAfterTimeout+0xa2>
 8007ad8:	69fb      	ldr	r3, [r7, #28]
 8007ada:	f1c3 0207 	rsb	r2, r3, #7
 8007ade:	69bb      	ldr	r3, [r7, #24]
 8007ae0:	619a      	str	r2, [r3, #24]
 8007ae2:	69bb      	ldr	r3, [r7, #24]
 8007ae4:	6959      	ldr	r1, [r3, #20]
 8007ae6:	693a      	ldr	r2, [r7, #16]
 8007ae8:	4613      	mov	r3, r2
 8007aea:	009b      	lsls	r3, r3, #2
 8007aec:	4413      	add	r3, r2
 8007aee:	009b      	lsls	r3, r3, #2
 8007af0:	4a19      	ldr	r2, [pc, #100]	@ (8007b58 <vTaskPriorityDisinheritAfterTimeout+0x118>)
 8007af2:	4413      	add	r3, r2
 8007af4:	4299      	cmp	r1, r3
 8007af6:	d129      	bne.n	8007b4c <vTaskPriorityDisinheritAfterTimeout+0x10c>
 8007af8:	69bb      	ldr	r3, [r7, #24]
 8007afa:	3304      	adds	r3, #4
 8007afc:	4618      	mov	r0, r3
 8007afe:	f7fd ffe4 	bl	8005aca <uxListRemove>
 8007b02:	4603      	mov	r3, r0
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	d10a      	bne.n	8007b1e <vTaskPriorityDisinheritAfterTimeout+0xde>
 8007b08:	69bb      	ldr	r3, [r7, #24]
 8007b0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007b0c:	2201      	movs	r2, #1
 8007b0e:	fa02 f303 	lsl.w	r3, r2, r3
 8007b12:	43da      	mvns	r2, r3
 8007b14:	4b11      	ldr	r3, [pc, #68]	@ (8007b5c <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	4013      	ands	r3, r2
 8007b1a:	4a10      	ldr	r2, [pc, #64]	@ (8007b5c <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 8007b1c:	6013      	str	r3, [r2, #0]
 8007b1e:	69bb      	ldr	r3, [r7, #24]
 8007b20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007b22:	2201      	movs	r2, #1
 8007b24:	409a      	lsls	r2, r3
 8007b26:	4b0d      	ldr	r3, [pc, #52]	@ (8007b5c <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 8007b28:	681b      	ldr	r3, [r3, #0]
 8007b2a:	4313      	orrs	r3, r2
 8007b2c:	4a0b      	ldr	r2, [pc, #44]	@ (8007b5c <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 8007b2e:	6013      	str	r3, [r2, #0]
 8007b30:	69bb      	ldr	r3, [r7, #24]
 8007b32:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007b34:	4613      	mov	r3, r2
 8007b36:	009b      	lsls	r3, r3, #2
 8007b38:	4413      	add	r3, r2
 8007b3a:	009b      	lsls	r3, r3, #2
 8007b3c:	4a06      	ldr	r2, [pc, #24]	@ (8007b58 <vTaskPriorityDisinheritAfterTimeout+0x118>)
 8007b3e:	441a      	add	r2, r3
 8007b40:	69bb      	ldr	r3, [r7, #24]
 8007b42:	3304      	adds	r3, #4
 8007b44:	4619      	mov	r1, r3
 8007b46:	4610      	mov	r0, r2
 8007b48:	f7fd ff62 	bl	8005a10 <vListInsertEnd>
 8007b4c:	bf00      	nop
 8007b4e:	3720      	adds	r7, #32
 8007b50:	46bd      	mov	sp, r7
 8007b52:	bd80      	pop	{r7, pc}
 8007b54:	200009ec 	.word	0x200009ec
 8007b58:	200009f0 	.word	0x200009f0
 8007b5c:	20000af4 	.word	0x20000af4

08007b60 <uxTaskResetEventItemValue>:
 8007b60:	b480      	push	{r7}
 8007b62:	b083      	sub	sp, #12
 8007b64:	af00      	add	r7, sp, #0
 8007b66:	4b09      	ldr	r3, [pc, #36]	@ (8007b8c <uxTaskResetEventItemValue+0x2c>)
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	699b      	ldr	r3, [r3, #24]
 8007b6c:	607b      	str	r3, [r7, #4]
 8007b6e:	4b07      	ldr	r3, [pc, #28]	@ (8007b8c <uxTaskResetEventItemValue+0x2c>)
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007b74:	4b05      	ldr	r3, [pc, #20]	@ (8007b8c <uxTaskResetEventItemValue+0x2c>)
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	f1c2 0207 	rsb	r2, r2, #7
 8007b7c:	619a      	str	r2, [r3, #24]
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	4618      	mov	r0, r3
 8007b82:	370c      	adds	r7, #12
 8007b84:	46bd      	mov	sp, r7
 8007b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b8a:	4770      	bx	lr
 8007b8c:	200009ec 	.word	0x200009ec

08007b90 <pvTaskIncrementMutexHeldCount>:
 8007b90:	b480      	push	{r7}
 8007b92:	af00      	add	r7, sp, #0
 8007b94:	4b07      	ldr	r3, [pc, #28]	@ (8007bb4 <pvTaskIncrementMutexHeldCount+0x24>)
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	2b00      	cmp	r3, #0
 8007b9a:	d004      	beq.n	8007ba6 <pvTaskIncrementMutexHeldCount+0x16>
 8007b9c:	4b05      	ldr	r3, [pc, #20]	@ (8007bb4 <pvTaskIncrementMutexHeldCount+0x24>)
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8007ba2:	3201      	adds	r2, #1
 8007ba4:	649a      	str	r2, [r3, #72]	@ 0x48
 8007ba6:	4b03      	ldr	r3, [pc, #12]	@ (8007bb4 <pvTaskIncrementMutexHeldCount+0x24>)
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	4618      	mov	r0, r3
 8007bac:	46bd      	mov	sp, r7
 8007bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bb2:	4770      	bx	lr
 8007bb4:	200009ec 	.word	0x200009ec

08007bb8 <prvAddCurrentTaskToDelayedList>:
 8007bb8:	b580      	push	{r7, lr}
 8007bba:	b084      	sub	sp, #16
 8007bbc:	af00      	add	r7, sp, #0
 8007bbe:	6078      	str	r0, [r7, #4]
 8007bc0:	6039      	str	r1, [r7, #0]
 8007bc2:	4b29      	ldr	r3, [pc, #164]	@ (8007c68 <prvAddCurrentTaskToDelayedList+0xb0>)
 8007bc4:	681b      	ldr	r3, [r3, #0]
 8007bc6:	60fb      	str	r3, [r7, #12]
 8007bc8:	4b28      	ldr	r3, [pc, #160]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	3304      	adds	r3, #4
 8007bce:	4618      	mov	r0, r3
 8007bd0:	f7fd ff7b 	bl	8005aca <uxListRemove>
 8007bd4:	4603      	mov	r3, r0
 8007bd6:	2b00      	cmp	r3, #0
 8007bd8:	d10b      	bne.n	8007bf2 <prvAddCurrentTaskToDelayedList+0x3a>
 8007bda:	4b24      	ldr	r3, [pc, #144]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007be0:	2201      	movs	r2, #1
 8007be2:	fa02 f303 	lsl.w	r3, r2, r3
 8007be6:	43da      	mvns	r2, r3
 8007be8:	4b21      	ldr	r3, [pc, #132]	@ (8007c70 <prvAddCurrentTaskToDelayedList+0xb8>)
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	4013      	ands	r3, r2
 8007bee:	4a20      	ldr	r2, [pc, #128]	@ (8007c70 <prvAddCurrentTaskToDelayedList+0xb8>)
 8007bf0:	6013      	str	r3, [r2, #0]
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007bf8:	d10a      	bne.n	8007c10 <prvAddCurrentTaskToDelayedList+0x58>
 8007bfa:	683b      	ldr	r3, [r7, #0]
 8007bfc:	2b00      	cmp	r3, #0
 8007bfe:	d007      	beq.n	8007c10 <prvAddCurrentTaskToDelayedList+0x58>
 8007c00:	4b1a      	ldr	r3, [pc, #104]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	3304      	adds	r3, #4
 8007c06:	4619      	mov	r1, r3
 8007c08:	481a      	ldr	r0, [pc, #104]	@ (8007c74 <prvAddCurrentTaskToDelayedList+0xbc>)
 8007c0a:	f7fd ff01 	bl	8005a10 <vListInsertEnd>
 8007c0e:	e026      	b.n	8007c5e <prvAddCurrentTaskToDelayedList+0xa6>
 8007c10:	68fa      	ldr	r2, [r7, #12]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	4413      	add	r3, r2
 8007c16:	60bb      	str	r3, [r7, #8]
 8007c18:	4b14      	ldr	r3, [pc, #80]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007c1a:	681b      	ldr	r3, [r3, #0]
 8007c1c:	68ba      	ldr	r2, [r7, #8]
 8007c1e:	605a      	str	r2, [r3, #4]
 8007c20:	68ba      	ldr	r2, [r7, #8]
 8007c22:	68fb      	ldr	r3, [r7, #12]
 8007c24:	429a      	cmp	r2, r3
 8007c26:	d209      	bcs.n	8007c3c <prvAddCurrentTaskToDelayedList+0x84>
 8007c28:	4b13      	ldr	r3, [pc, #76]	@ (8007c78 <prvAddCurrentTaskToDelayedList+0xc0>)
 8007c2a:	681a      	ldr	r2, [r3, #0]
 8007c2c:	4b0f      	ldr	r3, [pc, #60]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	3304      	adds	r3, #4
 8007c32:	4619      	mov	r1, r3
 8007c34:	4610      	mov	r0, r2
 8007c36:	f7fd ff0f 	bl	8005a58 <vListInsert>
 8007c3a:	e010      	b.n	8007c5e <prvAddCurrentTaskToDelayedList+0xa6>
 8007c3c:	4b0f      	ldr	r3, [pc, #60]	@ (8007c7c <prvAddCurrentTaskToDelayedList+0xc4>)
 8007c3e:	681a      	ldr	r2, [r3, #0]
 8007c40:	4b0a      	ldr	r3, [pc, #40]	@ (8007c6c <prvAddCurrentTaskToDelayedList+0xb4>)
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	3304      	adds	r3, #4
 8007c46:	4619      	mov	r1, r3
 8007c48:	4610      	mov	r0, r2
 8007c4a:	f7fd ff05 	bl	8005a58 <vListInsert>
 8007c4e:	4b0c      	ldr	r3, [pc, #48]	@ (8007c80 <prvAddCurrentTaskToDelayedList+0xc8>)
 8007c50:	681b      	ldr	r3, [r3, #0]
 8007c52:	68ba      	ldr	r2, [r7, #8]
 8007c54:	429a      	cmp	r2, r3
 8007c56:	d202      	bcs.n	8007c5e <prvAddCurrentTaskToDelayedList+0xa6>
 8007c58:	4a09      	ldr	r2, [pc, #36]	@ (8007c80 <prvAddCurrentTaskToDelayedList+0xc8>)
 8007c5a:	68bb      	ldr	r3, [r7, #8]
 8007c5c:	6013      	str	r3, [r2, #0]
 8007c5e:	bf00      	nop
 8007c60:	3710      	adds	r7, #16
 8007c62:	46bd      	mov	sp, r7
 8007c64:	bd80      	pop	{r7, pc}
 8007c66:	bf00      	nop
 8007c68:	20000af0 	.word	0x20000af0
 8007c6c:	200009ec 	.word	0x200009ec
 8007c70:	20000af4 	.word	0x20000af4
 8007c74:	20000ad8 	.word	0x20000ad8
 8007c78:	20000aa8 	.word	0x20000aa8
 8007c7c:	20000aa4 	.word	0x20000aa4
 8007c80:	20000b0c 	.word	0x20000b0c

08007c84 <xTimerCreateTimerTask>:
 8007c84:	b580      	push	{r7, lr}
 8007c86:	b08a      	sub	sp, #40	@ 0x28
 8007c88:	af04      	add	r7, sp, #16
 8007c8a:	2300      	movs	r3, #0
 8007c8c:	617b      	str	r3, [r7, #20]
 8007c8e:	f000 fbb1 	bl	80083f4 <prvCheckForValidListAndQueue>
 8007c92:	4b1d      	ldr	r3, [pc, #116]	@ (8007d08 <xTimerCreateTimerTask+0x84>)
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d021      	beq.n	8007cde <xTimerCreateTimerTask+0x5a>
 8007c9a:	2300      	movs	r3, #0
 8007c9c:	60fb      	str	r3, [r7, #12]
 8007c9e:	2300      	movs	r3, #0
 8007ca0:	60bb      	str	r3, [r7, #8]
 8007ca2:	1d3a      	adds	r2, r7, #4
 8007ca4:	f107 0108 	add.w	r1, r7, #8
 8007ca8:	f107 030c 	add.w	r3, r7, #12
 8007cac:	4618      	mov	r0, r3
 8007cae:	f7f8 fc79 	bl	80005a4 <vApplicationGetTimerTaskMemory>
 8007cb2:	6879      	ldr	r1, [r7, #4]
 8007cb4:	68bb      	ldr	r3, [r7, #8]
 8007cb6:	68fa      	ldr	r2, [r7, #12]
 8007cb8:	9202      	str	r2, [sp, #8]
 8007cba:	9301      	str	r3, [sp, #4]
 8007cbc:	2302      	movs	r3, #2
 8007cbe:	9300      	str	r3, [sp, #0]
 8007cc0:	2300      	movs	r3, #0
 8007cc2:	460a      	mov	r2, r1
 8007cc4:	4911      	ldr	r1, [pc, #68]	@ (8007d0c <xTimerCreateTimerTask+0x88>)
 8007cc6:	4812      	ldr	r0, [pc, #72]	@ (8007d10 <xTimerCreateTimerTask+0x8c>)
 8007cc8:	f7fe fee2 	bl	8006a90 <xTaskCreateStatic>
 8007ccc:	4603      	mov	r3, r0
 8007cce:	4a11      	ldr	r2, [pc, #68]	@ (8007d14 <xTimerCreateTimerTask+0x90>)
 8007cd0:	6013      	str	r3, [r2, #0]
 8007cd2:	4b10      	ldr	r3, [pc, #64]	@ (8007d14 <xTimerCreateTimerTask+0x90>)
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	2b00      	cmp	r3, #0
 8007cd8:	d001      	beq.n	8007cde <xTimerCreateTimerTask+0x5a>
 8007cda:	2301      	movs	r3, #1
 8007cdc:	617b      	str	r3, [r7, #20]
 8007cde:	697b      	ldr	r3, [r7, #20]
 8007ce0:	2b00      	cmp	r3, #0
 8007ce2:	d10b      	bne.n	8007cfc <xTimerCreateTimerTask+0x78>
 8007ce4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ce8:	f383 8811 	msr	BASEPRI, r3
 8007cec:	f3bf 8f6f 	isb	sy
 8007cf0:	f3bf 8f4f 	dsb	sy
 8007cf4:	613b      	str	r3, [r7, #16]
 8007cf6:	bf00      	nop
 8007cf8:	bf00      	nop
 8007cfa:	e7fd      	b.n	8007cf8 <xTimerCreateTimerTask+0x74>
 8007cfc:	697b      	ldr	r3, [r7, #20]
 8007cfe:	4618      	mov	r0, r3
 8007d00:	3718      	adds	r7, #24
 8007d02:	46bd      	mov	sp, r7
 8007d04:	bd80      	pop	{r7, pc}
 8007d06:	bf00      	nop
 8007d08:	20000b48 	.word	0x20000b48
 8007d0c:	08009a10 	.word	0x08009a10
 8007d10:	08007f8d 	.word	0x08007f8d
 8007d14:	20000b4c 	.word	0x20000b4c

08007d18 <xTimerCreate>:
 8007d18:	b580      	push	{r7, lr}
 8007d1a:	b088      	sub	sp, #32
 8007d1c:	af02      	add	r7, sp, #8
 8007d1e:	60f8      	str	r0, [r7, #12]
 8007d20:	60b9      	str	r1, [r7, #8]
 8007d22:	607a      	str	r2, [r7, #4]
 8007d24:	603b      	str	r3, [r7, #0]
 8007d26:	2028      	movs	r0, #40	@ 0x28
 8007d28:	f000 fe18 	bl	800895c <pvPortMalloc>
 8007d2c:	6178      	str	r0, [r7, #20]
 8007d2e:	697b      	ldr	r3, [r7, #20]
 8007d30:	2b00      	cmp	r3, #0
 8007d32:	d00d      	beq.n	8007d50 <xTimerCreate+0x38>
 8007d34:	697b      	ldr	r3, [r7, #20]
 8007d36:	2200      	movs	r2, #0
 8007d38:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8007d3c:	697b      	ldr	r3, [r7, #20]
 8007d3e:	9301      	str	r3, [sp, #4]
 8007d40:	6a3b      	ldr	r3, [r7, #32]
 8007d42:	9300      	str	r3, [sp, #0]
 8007d44:	683b      	ldr	r3, [r7, #0]
 8007d46:	687a      	ldr	r2, [r7, #4]
 8007d48:	68b9      	ldr	r1, [r7, #8]
 8007d4a:	68f8      	ldr	r0, [r7, #12]
 8007d4c:	f000 f845 	bl	8007dda <prvInitialiseNewTimer>
 8007d50:	697b      	ldr	r3, [r7, #20]
 8007d52:	4618      	mov	r0, r3
 8007d54:	3718      	adds	r7, #24
 8007d56:	46bd      	mov	sp, r7
 8007d58:	bd80      	pop	{r7, pc}

08007d5a <xTimerCreateStatic>:
 8007d5a:	b580      	push	{r7, lr}
 8007d5c:	b08a      	sub	sp, #40	@ 0x28
 8007d5e:	af02      	add	r7, sp, #8
 8007d60:	60f8      	str	r0, [r7, #12]
 8007d62:	60b9      	str	r1, [r7, #8]
 8007d64:	607a      	str	r2, [r7, #4]
 8007d66:	603b      	str	r3, [r7, #0]
 8007d68:	2328      	movs	r3, #40	@ 0x28
 8007d6a:	613b      	str	r3, [r7, #16]
 8007d6c:	693b      	ldr	r3, [r7, #16]
 8007d6e:	2b28      	cmp	r3, #40	@ 0x28
 8007d70:	d00b      	beq.n	8007d8a <xTimerCreateStatic+0x30>
 8007d72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d76:	f383 8811 	msr	BASEPRI, r3
 8007d7a:	f3bf 8f6f 	isb	sy
 8007d7e:	f3bf 8f4f 	dsb	sy
 8007d82:	61bb      	str	r3, [r7, #24]
 8007d84:	bf00      	nop
 8007d86:	bf00      	nop
 8007d88:	e7fd      	b.n	8007d86 <xTimerCreateStatic+0x2c>
 8007d8a:	693b      	ldr	r3, [r7, #16]
 8007d8c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007d8e:	2b00      	cmp	r3, #0
 8007d90:	d10b      	bne.n	8007daa <xTimerCreateStatic+0x50>
 8007d92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d96:	f383 8811 	msr	BASEPRI, r3
 8007d9a:	f3bf 8f6f 	isb	sy
 8007d9e:	f3bf 8f4f 	dsb	sy
 8007da2:	617b      	str	r3, [r7, #20]
 8007da4:	bf00      	nop
 8007da6:	bf00      	nop
 8007da8:	e7fd      	b.n	8007da6 <xTimerCreateStatic+0x4c>
 8007daa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007dac:	61fb      	str	r3, [r7, #28]
 8007dae:	69fb      	ldr	r3, [r7, #28]
 8007db0:	2b00      	cmp	r3, #0
 8007db2:	d00d      	beq.n	8007dd0 <xTimerCreateStatic+0x76>
 8007db4:	69fb      	ldr	r3, [r7, #28]
 8007db6:	2202      	movs	r2, #2
 8007db8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8007dbc:	69fb      	ldr	r3, [r7, #28]
 8007dbe:	9301      	str	r3, [sp, #4]
 8007dc0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007dc2:	9300      	str	r3, [sp, #0]
 8007dc4:	683b      	ldr	r3, [r7, #0]
 8007dc6:	687a      	ldr	r2, [r7, #4]
 8007dc8:	68b9      	ldr	r1, [r7, #8]
 8007dca:	68f8      	ldr	r0, [r7, #12]
 8007dcc:	f000 f805 	bl	8007dda <prvInitialiseNewTimer>
 8007dd0:	69fb      	ldr	r3, [r7, #28]
 8007dd2:	4618      	mov	r0, r3
 8007dd4:	3720      	adds	r7, #32
 8007dd6:	46bd      	mov	sp, r7
 8007dd8:	bd80      	pop	{r7, pc}

08007dda <prvInitialiseNewTimer>:
 8007dda:	b580      	push	{r7, lr}
 8007ddc:	b086      	sub	sp, #24
 8007dde:	af00      	add	r7, sp, #0
 8007de0:	60f8      	str	r0, [r7, #12]
 8007de2:	60b9      	str	r1, [r7, #8]
 8007de4:	607a      	str	r2, [r7, #4]
 8007de6:	603b      	str	r3, [r7, #0]
 8007de8:	68bb      	ldr	r3, [r7, #8]
 8007dea:	2b00      	cmp	r3, #0
 8007dec:	d10b      	bne.n	8007e06 <prvInitialiseNewTimer+0x2c>
 8007dee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007df2:	f383 8811 	msr	BASEPRI, r3
 8007df6:	f3bf 8f6f 	isb	sy
 8007dfa:	f3bf 8f4f 	dsb	sy
 8007dfe:	617b      	str	r3, [r7, #20]
 8007e00:	bf00      	nop
 8007e02:	bf00      	nop
 8007e04:	e7fd      	b.n	8007e02 <prvInitialiseNewTimer+0x28>
 8007e06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e08:	2b00      	cmp	r3, #0
 8007e0a:	d01e      	beq.n	8007e4a <prvInitialiseNewTimer+0x70>
 8007e0c:	f000 faf2 	bl	80083f4 <prvCheckForValidListAndQueue>
 8007e10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e12:	68fa      	ldr	r2, [r7, #12]
 8007e14:	601a      	str	r2, [r3, #0]
 8007e16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e18:	68ba      	ldr	r2, [r7, #8]
 8007e1a:	619a      	str	r2, [r3, #24]
 8007e1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e1e:	683a      	ldr	r2, [r7, #0]
 8007e20:	61da      	str	r2, [r3, #28]
 8007e22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e24:	6a3a      	ldr	r2, [r7, #32]
 8007e26:	621a      	str	r2, [r3, #32]
 8007e28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e2a:	3304      	adds	r3, #4
 8007e2c:	4618      	mov	r0, r3
 8007e2e:	f7fd fde2 	bl	80059f6 <vListInitialiseItem>
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	d008      	beq.n	8007e4a <prvInitialiseNewTimer+0x70>
 8007e38:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e3a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8007e3e:	f043 0304 	orr.w	r3, r3, #4
 8007e42:	b2da      	uxtb	r2, r3
 8007e44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007e46:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8007e4a:	bf00      	nop
 8007e4c:	3718      	adds	r7, #24
 8007e4e:	46bd      	mov	sp, r7
 8007e50:	bd80      	pop	{r7, pc}
	...

08007e54 <xTimerGenericCommand>:
 8007e54:	b580      	push	{r7, lr}
 8007e56:	b08a      	sub	sp, #40	@ 0x28
 8007e58:	af00      	add	r7, sp, #0
 8007e5a:	60f8      	str	r0, [r7, #12]
 8007e5c:	60b9      	str	r1, [r7, #8]
 8007e5e:	607a      	str	r2, [r7, #4]
 8007e60:	603b      	str	r3, [r7, #0]
 8007e62:	2300      	movs	r3, #0
 8007e64:	627b      	str	r3, [r7, #36]	@ 0x24
 8007e66:	68fb      	ldr	r3, [r7, #12]
 8007e68:	2b00      	cmp	r3, #0
 8007e6a:	d10b      	bne.n	8007e84 <xTimerGenericCommand+0x30>
 8007e6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e70:	f383 8811 	msr	BASEPRI, r3
 8007e74:	f3bf 8f6f 	isb	sy
 8007e78:	f3bf 8f4f 	dsb	sy
 8007e7c:	623b      	str	r3, [r7, #32]
 8007e7e:	bf00      	nop
 8007e80:	bf00      	nop
 8007e82:	e7fd      	b.n	8007e80 <xTimerGenericCommand+0x2c>
 8007e84:	4b19      	ldr	r3, [pc, #100]	@ (8007eec <xTimerGenericCommand+0x98>)
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	2b00      	cmp	r3, #0
 8007e8a:	d02a      	beq.n	8007ee2 <xTimerGenericCommand+0x8e>
 8007e8c:	68bb      	ldr	r3, [r7, #8]
 8007e8e:	613b      	str	r3, [r7, #16]
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	617b      	str	r3, [r7, #20]
 8007e94:	68fb      	ldr	r3, [r7, #12]
 8007e96:	61bb      	str	r3, [r7, #24]
 8007e98:	68bb      	ldr	r3, [r7, #8]
 8007e9a:	2b05      	cmp	r3, #5
 8007e9c:	dc18      	bgt.n	8007ed0 <xTimerGenericCommand+0x7c>
 8007e9e:	f7ff fcb3 	bl	8007808 <xTaskGetSchedulerState>
 8007ea2:	4603      	mov	r3, r0
 8007ea4:	2b02      	cmp	r3, #2
 8007ea6:	d109      	bne.n	8007ebc <xTimerGenericCommand+0x68>
 8007ea8:	4b10      	ldr	r3, [pc, #64]	@ (8007eec <xTimerGenericCommand+0x98>)
 8007eaa:	6818      	ldr	r0, [r3, #0]
 8007eac:	f107 0110 	add.w	r1, r7, #16
 8007eb0:	2300      	movs	r3, #0
 8007eb2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007eb4:	f7fd ffc2 	bl	8005e3c <xQueueGenericSend>
 8007eb8:	6278      	str	r0, [r7, #36]	@ 0x24
 8007eba:	e012      	b.n	8007ee2 <xTimerGenericCommand+0x8e>
 8007ebc:	4b0b      	ldr	r3, [pc, #44]	@ (8007eec <xTimerGenericCommand+0x98>)
 8007ebe:	6818      	ldr	r0, [r3, #0]
 8007ec0:	f107 0110 	add.w	r1, r7, #16
 8007ec4:	2300      	movs	r3, #0
 8007ec6:	2200      	movs	r2, #0
 8007ec8:	f7fd ffb8 	bl	8005e3c <xQueueGenericSend>
 8007ecc:	6278      	str	r0, [r7, #36]	@ 0x24
 8007ece:	e008      	b.n	8007ee2 <xTimerGenericCommand+0x8e>
 8007ed0:	4b06      	ldr	r3, [pc, #24]	@ (8007eec <xTimerGenericCommand+0x98>)
 8007ed2:	6818      	ldr	r0, [r3, #0]
 8007ed4:	f107 0110 	add.w	r1, r7, #16
 8007ed8:	2300      	movs	r3, #0
 8007eda:	683a      	ldr	r2, [r7, #0]
 8007edc:	f7fe f8b0 	bl	8006040 <xQueueGenericSendFromISR>
 8007ee0:	6278      	str	r0, [r7, #36]	@ 0x24
 8007ee2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007ee4:	4618      	mov	r0, r3
 8007ee6:	3728      	adds	r7, #40	@ 0x28
 8007ee8:	46bd      	mov	sp, r7
 8007eea:	bd80      	pop	{r7, pc}
 8007eec:	20000b48 	.word	0x20000b48

08007ef0 <prvProcessExpiredTimer>:
 8007ef0:	b580      	push	{r7, lr}
 8007ef2:	b088      	sub	sp, #32
 8007ef4:	af02      	add	r7, sp, #8
 8007ef6:	6078      	str	r0, [r7, #4]
 8007ef8:	6039      	str	r1, [r7, #0]
 8007efa:	4b23      	ldr	r3, [pc, #140]	@ (8007f88 <prvProcessExpiredTimer+0x98>)
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	68db      	ldr	r3, [r3, #12]
 8007f00:	68db      	ldr	r3, [r3, #12]
 8007f02:	617b      	str	r3, [r7, #20]
 8007f04:	697b      	ldr	r3, [r7, #20]
 8007f06:	3304      	adds	r3, #4
 8007f08:	4618      	mov	r0, r3
 8007f0a:	f7fd fdde 	bl	8005aca <uxListRemove>
 8007f0e:	697b      	ldr	r3, [r7, #20]
 8007f10:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8007f14:	f003 0304 	and.w	r3, r3, #4
 8007f18:	2b00      	cmp	r3, #0
 8007f1a:	d023      	beq.n	8007f64 <prvProcessExpiredTimer+0x74>
 8007f1c:	697b      	ldr	r3, [r7, #20]
 8007f1e:	699a      	ldr	r2, [r3, #24]
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	18d1      	adds	r1, r2, r3
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	683a      	ldr	r2, [r7, #0]
 8007f28:	6978      	ldr	r0, [r7, #20]
 8007f2a:	f000 f8d5 	bl	80080d8 <prvInsertTimerInActiveList>
 8007f2e:	4603      	mov	r3, r0
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d020      	beq.n	8007f76 <prvProcessExpiredTimer+0x86>
 8007f34:	2300      	movs	r3, #0
 8007f36:	9300      	str	r3, [sp, #0]
 8007f38:	2300      	movs	r3, #0
 8007f3a:	687a      	ldr	r2, [r7, #4]
 8007f3c:	2100      	movs	r1, #0
 8007f3e:	6978      	ldr	r0, [r7, #20]
 8007f40:	f7ff ff88 	bl	8007e54 <xTimerGenericCommand>
 8007f44:	6138      	str	r0, [r7, #16]
 8007f46:	693b      	ldr	r3, [r7, #16]
 8007f48:	2b00      	cmp	r3, #0
 8007f4a:	d114      	bne.n	8007f76 <prvProcessExpiredTimer+0x86>
 8007f4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f50:	f383 8811 	msr	BASEPRI, r3
 8007f54:	f3bf 8f6f 	isb	sy
 8007f58:	f3bf 8f4f 	dsb	sy
 8007f5c:	60fb      	str	r3, [r7, #12]
 8007f5e:	bf00      	nop
 8007f60:	bf00      	nop
 8007f62:	e7fd      	b.n	8007f60 <prvProcessExpiredTimer+0x70>
 8007f64:	697b      	ldr	r3, [r7, #20]
 8007f66:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8007f6a:	f023 0301 	bic.w	r3, r3, #1
 8007f6e:	b2da      	uxtb	r2, r3
 8007f70:	697b      	ldr	r3, [r7, #20]
 8007f72:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8007f76:	697b      	ldr	r3, [r7, #20]
 8007f78:	6a1b      	ldr	r3, [r3, #32]
 8007f7a:	6978      	ldr	r0, [r7, #20]
 8007f7c:	4798      	blx	r3
 8007f7e:	bf00      	nop
 8007f80:	3718      	adds	r7, #24
 8007f82:	46bd      	mov	sp, r7
 8007f84:	bd80      	pop	{r7, pc}
 8007f86:	bf00      	nop
 8007f88:	20000b40 	.word	0x20000b40

08007f8c <prvTimerTask>:
 8007f8c:	b580      	push	{r7, lr}
 8007f8e:	b084      	sub	sp, #16
 8007f90:	af00      	add	r7, sp, #0
 8007f92:	6078      	str	r0, [r7, #4]
 8007f94:	f107 0308 	add.w	r3, r7, #8
 8007f98:	4618      	mov	r0, r3
 8007f9a:	f000 f859 	bl	8008050 <prvGetNextExpireTime>
 8007f9e:	60f8      	str	r0, [r7, #12]
 8007fa0:	68bb      	ldr	r3, [r7, #8]
 8007fa2:	4619      	mov	r1, r3
 8007fa4:	68f8      	ldr	r0, [r7, #12]
 8007fa6:	f000 f805 	bl	8007fb4 <prvProcessTimerOrBlockTask>
 8007faa:	f000 f8d7 	bl	800815c <prvProcessReceivedCommands>
 8007fae:	bf00      	nop
 8007fb0:	e7f0      	b.n	8007f94 <prvTimerTask+0x8>
	...

08007fb4 <prvProcessTimerOrBlockTask>:
 8007fb4:	b580      	push	{r7, lr}
 8007fb6:	b084      	sub	sp, #16
 8007fb8:	af00      	add	r7, sp, #0
 8007fba:	6078      	str	r0, [r7, #4]
 8007fbc:	6039      	str	r1, [r7, #0]
 8007fbe:	f7fe ff9d 	bl	8006efc <vTaskSuspendAll>
 8007fc2:	f107 0308 	add.w	r3, r7, #8
 8007fc6:	4618      	mov	r0, r3
 8007fc8:	f000 f866 	bl	8008098 <prvSampleTimeNow>
 8007fcc:	60f8      	str	r0, [r7, #12]
 8007fce:	68bb      	ldr	r3, [r7, #8]
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	d130      	bne.n	8008036 <prvProcessTimerOrBlockTask+0x82>
 8007fd4:	683b      	ldr	r3, [r7, #0]
 8007fd6:	2b00      	cmp	r3, #0
 8007fd8:	d10a      	bne.n	8007ff0 <prvProcessTimerOrBlockTask+0x3c>
 8007fda:	687a      	ldr	r2, [r7, #4]
 8007fdc:	68fb      	ldr	r3, [r7, #12]
 8007fde:	429a      	cmp	r2, r3
 8007fe0:	d806      	bhi.n	8007ff0 <prvProcessTimerOrBlockTask+0x3c>
 8007fe2:	f7fe ff99 	bl	8006f18 <xTaskResumeAll>
 8007fe6:	68f9      	ldr	r1, [r7, #12]
 8007fe8:	6878      	ldr	r0, [r7, #4]
 8007fea:	f7ff ff81 	bl	8007ef0 <prvProcessExpiredTimer>
 8007fee:	e024      	b.n	800803a <prvProcessTimerOrBlockTask+0x86>
 8007ff0:	683b      	ldr	r3, [r7, #0]
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	d008      	beq.n	8008008 <prvProcessTimerOrBlockTask+0x54>
 8007ff6:	4b13      	ldr	r3, [pc, #76]	@ (8008044 <prvProcessTimerOrBlockTask+0x90>)
 8007ff8:	681b      	ldr	r3, [r3, #0]
 8007ffa:	681b      	ldr	r3, [r3, #0]
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	d101      	bne.n	8008004 <prvProcessTimerOrBlockTask+0x50>
 8008000:	2301      	movs	r3, #1
 8008002:	e000      	b.n	8008006 <prvProcessTimerOrBlockTask+0x52>
 8008004:	2300      	movs	r3, #0
 8008006:	603b      	str	r3, [r7, #0]
 8008008:	4b0f      	ldr	r3, [pc, #60]	@ (8008048 <prvProcessTimerOrBlockTask+0x94>)
 800800a:	6818      	ldr	r0, [r3, #0]
 800800c:	687a      	ldr	r2, [r7, #4]
 800800e:	68fb      	ldr	r3, [r7, #12]
 8008010:	1ad3      	subs	r3, r2, r3
 8008012:	683a      	ldr	r2, [r7, #0]
 8008014:	4619      	mov	r1, r3
 8008016:	f7fe fd07 	bl	8006a28 <vQueueWaitForMessageRestricted>
 800801a:	f7fe ff7d 	bl	8006f18 <xTaskResumeAll>
 800801e:	4603      	mov	r3, r0
 8008020:	2b00      	cmp	r3, #0
 8008022:	d10a      	bne.n	800803a <prvProcessTimerOrBlockTask+0x86>
 8008024:	4b09      	ldr	r3, [pc, #36]	@ (800804c <prvProcessTimerOrBlockTask+0x98>)
 8008026:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800802a:	601a      	str	r2, [r3, #0]
 800802c:	f3bf 8f4f 	dsb	sy
 8008030:	f3bf 8f6f 	isb	sy
 8008034:	e001      	b.n	800803a <prvProcessTimerOrBlockTask+0x86>
 8008036:	f7fe ff6f 	bl	8006f18 <xTaskResumeAll>
 800803a:	bf00      	nop
 800803c:	3710      	adds	r7, #16
 800803e:	46bd      	mov	sp, r7
 8008040:	bd80      	pop	{r7, pc}
 8008042:	bf00      	nop
 8008044:	20000b44 	.word	0x20000b44
 8008048:	20000b48 	.word	0x20000b48
 800804c:	e000ed04 	.word	0xe000ed04

08008050 <prvGetNextExpireTime>:
 8008050:	b480      	push	{r7}
 8008052:	b085      	sub	sp, #20
 8008054:	af00      	add	r7, sp, #0
 8008056:	6078      	str	r0, [r7, #4]
 8008058:	4b0e      	ldr	r3, [pc, #56]	@ (8008094 <prvGetNextExpireTime+0x44>)
 800805a:	681b      	ldr	r3, [r3, #0]
 800805c:	681b      	ldr	r3, [r3, #0]
 800805e:	2b00      	cmp	r3, #0
 8008060:	d101      	bne.n	8008066 <prvGetNextExpireTime+0x16>
 8008062:	2201      	movs	r2, #1
 8008064:	e000      	b.n	8008068 <prvGetNextExpireTime+0x18>
 8008066:	2200      	movs	r2, #0
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	601a      	str	r2, [r3, #0]
 800806c:	687b      	ldr	r3, [r7, #4]
 800806e:	681b      	ldr	r3, [r3, #0]
 8008070:	2b00      	cmp	r3, #0
 8008072:	d105      	bne.n	8008080 <prvGetNextExpireTime+0x30>
 8008074:	4b07      	ldr	r3, [pc, #28]	@ (8008094 <prvGetNextExpireTime+0x44>)
 8008076:	681b      	ldr	r3, [r3, #0]
 8008078:	68db      	ldr	r3, [r3, #12]
 800807a:	681b      	ldr	r3, [r3, #0]
 800807c:	60fb      	str	r3, [r7, #12]
 800807e:	e001      	b.n	8008084 <prvGetNextExpireTime+0x34>
 8008080:	2300      	movs	r3, #0
 8008082:	60fb      	str	r3, [r7, #12]
 8008084:	68fb      	ldr	r3, [r7, #12]
 8008086:	4618      	mov	r0, r3
 8008088:	3714      	adds	r7, #20
 800808a:	46bd      	mov	sp, r7
 800808c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008090:	4770      	bx	lr
 8008092:	bf00      	nop
 8008094:	20000b40 	.word	0x20000b40

08008098 <prvSampleTimeNow>:
 8008098:	b580      	push	{r7, lr}
 800809a:	b084      	sub	sp, #16
 800809c:	af00      	add	r7, sp, #0
 800809e:	6078      	str	r0, [r7, #4]
 80080a0:	f7fe ffd8 	bl	8007054 <xTaskGetTickCount>
 80080a4:	60f8      	str	r0, [r7, #12]
 80080a6:	4b0b      	ldr	r3, [pc, #44]	@ (80080d4 <prvSampleTimeNow+0x3c>)
 80080a8:	681b      	ldr	r3, [r3, #0]
 80080aa:	68fa      	ldr	r2, [r7, #12]
 80080ac:	429a      	cmp	r2, r3
 80080ae:	d205      	bcs.n	80080bc <prvSampleTimeNow+0x24>
 80080b0:	f000 f93a 	bl	8008328 <prvSwitchTimerLists>
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	2201      	movs	r2, #1
 80080b8:	601a      	str	r2, [r3, #0]
 80080ba:	e002      	b.n	80080c2 <prvSampleTimeNow+0x2a>
 80080bc:	687b      	ldr	r3, [r7, #4]
 80080be:	2200      	movs	r2, #0
 80080c0:	601a      	str	r2, [r3, #0]
 80080c2:	4a04      	ldr	r2, [pc, #16]	@ (80080d4 <prvSampleTimeNow+0x3c>)
 80080c4:	68fb      	ldr	r3, [r7, #12]
 80080c6:	6013      	str	r3, [r2, #0]
 80080c8:	68fb      	ldr	r3, [r7, #12]
 80080ca:	4618      	mov	r0, r3
 80080cc:	3710      	adds	r7, #16
 80080ce:	46bd      	mov	sp, r7
 80080d0:	bd80      	pop	{r7, pc}
 80080d2:	bf00      	nop
 80080d4:	20000b50 	.word	0x20000b50

080080d8 <prvInsertTimerInActiveList>:
 80080d8:	b580      	push	{r7, lr}
 80080da:	b086      	sub	sp, #24
 80080dc:	af00      	add	r7, sp, #0
 80080de:	60f8      	str	r0, [r7, #12]
 80080e0:	60b9      	str	r1, [r7, #8]
 80080e2:	607a      	str	r2, [r7, #4]
 80080e4:	603b      	str	r3, [r7, #0]
 80080e6:	2300      	movs	r3, #0
 80080e8:	617b      	str	r3, [r7, #20]
 80080ea:	68fb      	ldr	r3, [r7, #12]
 80080ec:	68ba      	ldr	r2, [r7, #8]
 80080ee:	605a      	str	r2, [r3, #4]
 80080f0:	68fb      	ldr	r3, [r7, #12]
 80080f2:	68fa      	ldr	r2, [r7, #12]
 80080f4:	611a      	str	r2, [r3, #16]
 80080f6:	68ba      	ldr	r2, [r7, #8]
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	429a      	cmp	r2, r3
 80080fc:	d812      	bhi.n	8008124 <prvInsertTimerInActiveList+0x4c>
 80080fe:	687a      	ldr	r2, [r7, #4]
 8008100:	683b      	ldr	r3, [r7, #0]
 8008102:	1ad2      	subs	r2, r2, r3
 8008104:	68fb      	ldr	r3, [r7, #12]
 8008106:	699b      	ldr	r3, [r3, #24]
 8008108:	429a      	cmp	r2, r3
 800810a:	d302      	bcc.n	8008112 <prvInsertTimerInActiveList+0x3a>
 800810c:	2301      	movs	r3, #1
 800810e:	617b      	str	r3, [r7, #20]
 8008110:	e01b      	b.n	800814a <prvInsertTimerInActiveList+0x72>
 8008112:	4b10      	ldr	r3, [pc, #64]	@ (8008154 <prvInsertTimerInActiveList+0x7c>)
 8008114:	681a      	ldr	r2, [r3, #0]
 8008116:	68fb      	ldr	r3, [r7, #12]
 8008118:	3304      	adds	r3, #4
 800811a:	4619      	mov	r1, r3
 800811c:	4610      	mov	r0, r2
 800811e:	f7fd fc9b 	bl	8005a58 <vListInsert>
 8008122:	e012      	b.n	800814a <prvInsertTimerInActiveList+0x72>
 8008124:	687a      	ldr	r2, [r7, #4]
 8008126:	683b      	ldr	r3, [r7, #0]
 8008128:	429a      	cmp	r2, r3
 800812a:	d206      	bcs.n	800813a <prvInsertTimerInActiveList+0x62>
 800812c:	68ba      	ldr	r2, [r7, #8]
 800812e:	683b      	ldr	r3, [r7, #0]
 8008130:	429a      	cmp	r2, r3
 8008132:	d302      	bcc.n	800813a <prvInsertTimerInActiveList+0x62>
 8008134:	2301      	movs	r3, #1
 8008136:	617b      	str	r3, [r7, #20]
 8008138:	e007      	b.n	800814a <prvInsertTimerInActiveList+0x72>
 800813a:	4b07      	ldr	r3, [pc, #28]	@ (8008158 <prvInsertTimerInActiveList+0x80>)
 800813c:	681a      	ldr	r2, [r3, #0]
 800813e:	68fb      	ldr	r3, [r7, #12]
 8008140:	3304      	adds	r3, #4
 8008142:	4619      	mov	r1, r3
 8008144:	4610      	mov	r0, r2
 8008146:	f7fd fc87 	bl	8005a58 <vListInsert>
 800814a:	697b      	ldr	r3, [r7, #20]
 800814c:	4618      	mov	r0, r3
 800814e:	3718      	adds	r7, #24
 8008150:	46bd      	mov	sp, r7
 8008152:	bd80      	pop	{r7, pc}
 8008154:	20000b44 	.word	0x20000b44
 8008158:	20000b40 	.word	0x20000b40

0800815c <prvProcessReceivedCommands>:
 800815c:	b580      	push	{r7, lr}
 800815e:	b08e      	sub	sp, #56	@ 0x38
 8008160:	af02      	add	r7, sp, #8
 8008162:	e0ce      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	2b00      	cmp	r3, #0
 8008168:	da19      	bge.n	800819e <prvProcessReceivedCommands+0x42>
 800816a:	1d3b      	adds	r3, r7, #4
 800816c:	3304      	adds	r3, #4
 800816e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008170:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008172:	2b00      	cmp	r3, #0
 8008174:	d10b      	bne.n	800818e <prvProcessReceivedCommands+0x32>
 8008176:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800817a:	f383 8811 	msr	BASEPRI, r3
 800817e:	f3bf 8f6f 	isb	sy
 8008182:	f3bf 8f4f 	dsb	sy
 8008186:	61fb      	str	r3, [r7, #28]
 8008188:	bf00      	nop
 800818a:	bf00      	nop
 800818c:	e7fd      	b.n	800818a <prvProcessReceivedCommands+0x2e>
 800818e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008194:	6850      	ldr	r0, [r2, #4]
 8008196:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008198:	6892      	ldr	r2, [r2, #8]
 800819a:	4611      	mov	r1, r2
 800819c:	4798      	blx	r3
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	2b00      	cmp	r3, #0
 80081a2:	f2c0 80ae 	blt.w	8008302 <prvProcessReceivedCommands+0x1a6>
 80081a6:	68fb      	ldr	r3, [r7, #12]
 80081a8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80081aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80081ac:	695b      	ldr	r3, [r3, #20]
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d004      	beq.n	80081bc <prvProcessReceivedCommands+0x60>
 80081b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80081b4:	3304      	adds	r3, #4
 80081b6:	4618      	mov	r0, r3
 80081b8:	f7fd fc87 	bl	8005aca <uxListRemove>
 80081bc:	463b      	mov	r3, r7
 80081be:	4618      	mov	r0, r3
 80081c0:	f7ff ff6a 	bl	8008098 <prvSampleTimeNow>
 80081c4:	6278      	str	r0, [r7, #36]	@ 0x24
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	2b09      	cmp	r3, #9
 80081ca:	f200 8097 	bhi.w	80082fc <prvProcessReceivedCommands+0x1a0>
 80081ce:	a201      	add	r2, pc, #4	@ (adr r2, 80081d4 <prvProcessReceivedCommands+0x78>)
 80081d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80081d4:	080081fd 	.word	0x080081fd
 80081d8:	080081fd 	.word	0x080081fd
 80081dc:	080081fd 	.word	0x080081fd
 80081e0:	08008273 	.word	0x08008273
 80081e4:	08008287 	.word	0x08008287
 80081e8:	080082d3 	.word	0x080082d3
 80081ec:	080081fd 	.word	0x080081fd
 80081f0:	080081fd 	.word	0x080081fd
 80081f4:	08008273 	.word	0x08008273
 80081f8:	08008287 	.word	0x08008287
 80081fc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80081fe:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8008202:	f043 0301 	orr.w	r3, r3, #1
 8008206:	b2da      	uxtb	r2, r3
 8008208:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800820a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800820e:	68ba      	ldr	r2, [r7, #8]
 8008210:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008212:	699b      	ldr	r3, [r3, #24]
 8008214:	18d1      	adds	r1, r2, r3
 8008216:	68bb      	ldr	r3, [r7, #8]
 8008218:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800821a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800821c:	f7ff ff5c 	bl	80080d8 <prvInsertTimerInActiveList>
 8008220:	4603      	mov	r3, r0
 8008222:	2b00      	cmp	r3, #0
 8008224:	d06c      	beq.n	8008300 <prvProcessReceivedCommands+0x1a4>
 8008226:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008228:	6a1b      	ldr	r3, [r3, #32]
 800822a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800822c:	4798      	blx	r3
 800822e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008230:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8008234:	f003 0304 	and.w	r3, r3, #4
 8008238:	2b00      	cmp	r3, #0
 800823a:	d061      	beq.n	8008300 <prvProcessReceivedCommands+0x1a4>
 800823c:	68ba      	ldr	r2, [r7, #8]
 800823e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008240:	699b      	ldr	r3, [r3, #24]
 8008242:	441a      	add	r2, r3
 8008244:	2300      	movs	r3, #0
 8008246:	9300      	str	r3, [sp, #0]
 8008248:	2300      	movs	r3, #0
 800824a:	2100      	movs	r1, #0
 800824c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800824e:	f7ff fe01 	bl	8007e54 <xTimerGenericCommand>
 8008252:	6238      	str	r0, [r7, #32]
 8008254:	6a3b      	ldr	r3, [r7, #32]
 8008256:	2b00      	cmp	r3, #0
 8008258:	d152      	bne.n	8008300 <prvProcessReceivedCommands+0x1a4>
 800825a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800825e:	f383 8811 	msr	BASEPRI, r3
 8008262:	f3bf 8f6f 	isb	sy
 8008266:	f3bf 8f4f 	dsb	sy
 800826a:	61bb      	str	r3, [r7, #24]
 800826c:	bf00      	nop
 800826e:	bf00      	nop
 8008270:	e7fd      	b.n	800826e <prvProcessReceivedCommands+0x112>
 8008272:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008274:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8008278:	f023 0301 	bic.w	r3, r3, #1
 800827c:	b2da      	uxtb	r2, r3
 800827e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008280:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8008284:	e03d      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 8008286:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008288:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800828c:	f043 0301 	orr.w	r3, r3, #1
 8008290:	b2da      	uxtb	r2, r3
 8008292:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008294:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8008298:	68ba      	ldr	r2, [r7, #8]
 800829a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800829c:	619a      	str	r2, [r3, #24]
 800829e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80082a0:	699b      	ldr	r3, [r3, #24]
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d10b      	bne.n	80082be <prvProcessReceivedCommands+0x162>
 80082a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082aa:	f383 8811 	msr	BASEPRI, r3
 80082ae:	f3bf 8f6f 	isb	sy
 80082b2:	f3bf 8f4f 	dsb	sy
 80082b6:	617b      	str	r3, [r7, #20]
 80082b8:	bf00      	nop
 80082ba:	bf00      	nop
 80082bc:	e7fd      	b.n	80082ba <prvProcessReceivedCommands+0x15e>
 80082be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80082c0:	699a      	ldr	r2, [r3, #24]
 80082c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80082c4:	18d1      	adds	r1, r2, r3
 80082c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80082c8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80082ca:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80082cc:	f7ff ff04 	bl	80080d8 <prvInsertTimerInActiveList>
 80082d0:	e017      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 80082d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80082d4:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80082d8:	f003 0302 	and.w	r3, r3, #2
 80082dc:	2b00      	cmp	r3, #0
 80082de:	d103      	bne.n	80082e8 <prvProcessReceivedCommands+0x18c>
 80082e0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80082e2:	f000 fc09 	bl	8008af8 <vPortFree>
 80082e6:	e00c      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 80082e8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80082ea:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80082ee:	f023 0301 	bic.w	r3, r3, #1
 80082f2:	b2da      	uxtb	r2, r3
 80082f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80082f6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80082fa:	e002      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 80082fc:	bf00      	nop
 80082fe:	e000      	b.n	8008302 <prvProcessReceivedCommands+0x1a6>
 8008300:	bf00      	nop
 8008302:	4b08      	ldr	r3, [pc, #32]	@ (8008324 <prvProcessReceivedCommands+0x1c8>)
 8008304:	681b      	ldr	r3, [r3, #0]
 8008306:	1d39      	adds	r1, r7, #4
 8008308:	2200      	movs	r2, #0
 800830a:	4618      	mov	r0, r3
 800830c:	f7fd ffc6 	bl	800629c <xQueueReceive>
 8008310:	4603      	mov	r3, r0
 8008312:	2b00      	cmp	r3, #0
 8008314:	f47f af26 	bne.w	8008164 <prvProcessReceivedCommands+0x8>
 8008318:	bf00      	nop
 800831a:	bf00      	nop
 800831c:	3730      	adds	r7, #48	@ 0x30
 800831e:	46bd      	mov	sp, r7
 8008320:	bd80      	pop	{r7, pc}
 8008322:	bf00      	nop
 8008324:	20000b48 	.word	0x20000b48

08008328 <prvSwitchTimerLists>:
 8008328:	b580      	push	{r7, lr}
 800832a:	b088      	sub	sp, #32
 800832c:	af02      	add	r7, sp, #8
 800832e:	e049      	b.n	80083c4 <prvSwitchTimerLists+0x9c>
 8008330:	4b2e      	ldr	r3, [pc, #184]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	68db      	ldr	r3, [r3, #12]
 8008336:	681b      	ldr	r3, [r3, #0]
 8008338:	613b      	str	r3, [r7, #16]
 800833a:	4b2c      	ldr	r3, [pc, #176]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	68db      	ldr	r3, [r3, #12]
 8008340:	68db      	ldr	r3, [r3, #12]
 8008342:	60fb      	str	r3, [r7, #12]
 8008344:	68fb      	ldr	r3, [r7, #12]
 8008346:	3304      	adds	r3, #4
 8008348:	4618      	mov	r0, r3
 800834a:	f7fd fbbe 	bl	8005aca <uxListRemove>
 800834e:	68fb      	ldr	r3, [r7, #12]
 8008350:	6a1b      	ldr	r3, [r3, #32]
 8008352:	68f8      	ldr	r0, [r7, #12]
 8008354:	4798      	blx	r3
 8008356:	68fb      	ldr	r3, [r7, #12]
 8008358:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800835c:	f003 0304 	and.w	r3, r3, #4
 8008360:	2b00      	cmp	r3, #0
 8008362:	d02f      	beq.n	80083c4 <prvSwitchTimerLists+0x9c>
 8008364:	68fb      	ldr	r3, [r7, #12]
 8008366:	699b      	ldr	r3, [r3, #24]
 8008368:	693a      	ldr	r2, [r7, #16]
 800836a:	4413      	add	r3, r2
 800836c:	60bb      	str	r3, [r7, #8]
 800836e:	68ba      	ldr	r2, [r7, #8]
 8008370:	693b      	ldr	r3, [r7, #16]
 8008372:	429a      	cmp	r2, r3
 8008374:	d90e      	bls.n	8008394 <prvSwitchTimerLists+0x6c>
 8008376:	68fb      	ldr	r3, [r7, #12]
 8008378:	68ba      	ldr	r2, [r7, #8]
 800837a:	605a      	str	r2, [r3, #4]
 800837c:	68fb      	ldr	r3, [r7, #12]
 800837e:	68fa      	ldr	r2, [r7, #12]
 8008380:	611a      	str	r2, [r3, #16]
 8008382:	4b1a      	ldr	r3, [pc, #104]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 8008384:	681a      	ldr	r2, [r3, #0]
 8008386:	68fb      	ldr	r3, [r7, #12]
 8008388:	3304      	adds	r3, #4
 800838a:	4619      	mov	r1, r3
 800838c:	4610      	mov	r0, r2
 800838e:	f7fd fb63 	bl	8005a58 <vListInsert>
 8008392:	e017      	b.n	80083c4 <prvSwitchTimerLists+0x9c>
 8008394:	2300      	movs	r3, #0
 8008396:	9300      	str	r3, [sp, #0]
 8008398:	2300      	movs	r3, #0
 800839a:	693a      	ldr	r2, [r7, #16]
 800839c:	2100      	movs	r1, #0
 800839e:	68f8      	ldr	r0, [r7, #12]
 80083a0:	f7ff fd58 	bl	8007e54 <xTimerGenericCommand>
 80083a4:	6078      	str	r0, [r7, #4]
 80083a6:	687b      	ldr	r3, [r7, #4]
 80083a8:	2b00      	cmp	r3, #0
 80083aa:	d10b      	bne.n	80083c4 <prvSwitchTimerLists+0x9c>
 80083ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083b0:	f383 8811 	msr	BASEPRI, r3
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	603b      	str	r3, [r7, #0]
 80083be:	bf00      	nop
 80083c0:	bf00      	nop
 80083c2:	e7fd      	b.n	80083c0 <prvSwitchTimerLists+0x98>
 80083c4:	4b09      	ldr	r3, [pc, #36]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 80083c6:	681b      	ldr	r3, [r3, #0]
 80083c8:	681b      	ldr	r3, [r3, #0]
 80083ca:	2b00      	cmp	r3, #0
 80083cc:	d1b0      	bne.n	8008330 <prvSwitchTimerLists+0x8>
 80083ce:	4b07      	ldr	r3, [pc, #28]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	617b      	str	r3, [r7, #20]
 80083d4:	4b06      	ldr	r3, [pc, #24]	@ (80083f0 <prvSwitchTimerLists+0xc8>)
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	4a04      	ldr	r2, [pc, #16]	@ (80083ec <prvSwitchTimerLists+0xc4>)
 80083da:	6013      	str	r3, [r2, #0]
 80083dc:	4a04      	ldr	r2, [pc, #16]	@ (80083f0 <prvSwitchTimerLists+0xc8>)
 80083de:	697b      	ldr	r3, [r7, #20]
 80083e0:	6013      	str	r3, [r2, #0]
 80083e2:	bf00      	nop
 80083e4:	3718      	adds	r7, #24
 80083e6:	46bd      	mov	sp, r7
 80083e8:	bd80      	pop	{r7, pc}
 80083ea:	bf00      	nop
 80083ec:	20000b40 	.word	0x20000b40
 80083f0:	20000b44 	.word	0x20000b44

080083f4 <prvCheckForValidListAndQueue>:
 80083f4:	b580      	push	{r7, lr}
 80083f6:	b082      	sub	sp, #8
 80083f8:	af02      	add	r7, sp, #8
 80083fa:	f000 f98d 	bl	8008718 <vPortEnterCritical>
 80083fe:	4b15      	ldr	r3, [pc, #84]	@ (8008454 <prvCheckForValidListAndQueue+0x60>)
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	2b00      	cmp	r3, #0
 8008404:	d120      	bne.n	8008448 <prvCheckForValidListAndQueue+0x54>
 8008406:	4814      	ldr	r0, [pc, #80]	@ (8008458 <prvCheckForValidListAndQueue+0x64>)
 8008408:	f7fd fad5 	bl	80059b6 <vListInitialise>
 800840c:	4813      	ldr	r0, [pc, #76]	@ (800845c <prvCheckForValidListAndQueue+0x68>)
 800840e:	f7fd fad2 	bl	80059b6 <vListInitialise>
 8008412:	4b13      	ldr	r3, [pc, #76]	@ (8008460 <prvCheckForValidListAndQueue+0x6c>)
 8008414:	4a10      	ldr	r2, [pc, #64]	@ (8008458 <prvCheckForValidListAndQueue+0x64>)
 8008416:	601a      	str	r2, [r3, #0]
 8008418:	4b12      	ldr	r3, [pc, #72]	@ (8008464 <prvCheckForValidListAndQueue+0x70>)
 800841a:	4a10      	ldr	r2, [pc, #64]	@ (800845c <prvCheckForValidListAndQueue+0x68>)
 800841c:	601a      	str	r2, [r3, #0]
 800841e:	2300      	movs	r3, #0
 8008420:	9300      	str	r3, [sp, #0]
 8008422:	4b11      	ldr	r3, [pc, #68]	@ (8008468 <prvCheckForValidListAndQueue+0x74>)
 8008424:	4a11      	ldr	r2, [pc, #68]	@ (800846c <prvCheckForValidListAndQueue+0x78>)
 8008426:	2110      	movs	r1, #16
 8008428:	200a      	movs	r0, #10
 800842a:	f7fd fbe3 	bl	8005bf4 <xQueueGenericCreateStatic>
 800842e:	4603      	mov	r3, r0
 8008430:	4a08      	ldr	r2, [pc, #32]	@ (8008454 <prvCheckForValidListAndQueue+0x60>)
 8008432:	6013      	str	r3, [r2, #0]
 8008434:	4b07      	ldr	r3, [pc, #28]	@ (8008454 <prvCheckForValidListAndQueue+0x60>)
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	2b00      	cmp	r3, #0
 800843a:	d005      	beq.n	8008448 <prvCheckForValidListAndQueue+0x54>
 800843c:	4b05      	ldr	r3, [pc, #20]	@ (8008454 <prvCheckForValidListAndQueue+0x60>)
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	490b      	ldr	r1, [pc, #44]	@ (8008470 <prvCheckForValidListAndQueue+0x7c>)
 8008442:	4618      	mov	r0, r3
 8008444:	f7fe fac6 	bl	80069d4 <vQueueAddToRegistry>
 8008448:	f000 f998 	bl	800877c <vPortExitCritical>
 800844c:	bf00      	nop
 800844e:	46bd      	mov	sp, r7
 8008450:	bd80      	pop	{r7, pc}
 8008452:	bf00      	nop
 8008454:	20000b48 	.word	0x20000b48
 8008458:	20000b18 	.word	0x20000b18
 800845c:	20000b2c 	.word	0x20000b2c
 8008460:	20000b40 	.word	0x20000b40
 8008464:	20000b44 	.word	0x20000b44
 8008468:	20000bf4 	.word	0x20000bf4
 800846c:	20000b54 	.word	0x20000b54
 8008470:	08009a18 	.word	0x08009a18

08008474 <xTimerPendFunctionCallFromISR>:
 8008474:	b580      	push	{r7, lr}
 8008476:	b08a      	sub	sp, #40	@ 0x28
 8008478:	af00      	add	r7, sp, #0
 800847a:	60f8      	str	r0, [r7, #12]
 800847c:	60b9      	str	r1, [r7, #8]
 800847e:	607a      	str	r2, [r7, #4]
 8008480:	603b      	str	r3, [r7, #0]
 8008482:	f06f 0301 	mvn.w	r3, #1
 8008486:	617b      	str	r3, [r7, #20]
 8008488:	68fb      	ldr	r3, [r7, #12]
 800848a:	61bb      	str	r3, [r7, #24]
 800848c:	68bb      	ldr	r3, [r7, #8]
 800848e:	61fb      	str	r3, [r7, #28]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	623b      	str	r3, [r7, #32]
 8008494:	4b06      	ldr	r3, [pc, #24]	@ (80084b0 <xTimerPendFunctionCallFromISR+0x3c>)
 8008496:	6818      	ldr	r0, [r3, #0]
 8008498:	f107 0114 	add.w	r1, r7, #20
 800849c:	2300      	movs	r3, #0
 800849e:	683a      	ldr	r2, [r7, #0]
 80084a0:	f7fd fdce 	bl	8006040 <xQueueGenericSendFromISR>
 80084a4:	6278      	str	r0, [r7, #36]	@ 0x24
 80084a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80084a8:	4618      	mov	r0, r3
 80084aa:	3728      	adds	r7, #40	@ 0x28
 80084ac:	46bd      	mov	sp, r7
 80084ae:	bd80      	pop	{r7, pc}
 80084b0:	20000b48 	.word	0x20000b48

080084b4 <pxPortInitialiseStack>:
 80084b4:	b480      	push	{r7}
 80084b6:	b085      	sub	sp, #20
 80084b8:	af00      	add	r7, sp, #0
 80084ba:	60f8      	str	r0, [r7, #12]
 80084bc:	60b9      	str	r1, [r7, #8]
 80084be:	607a      	str	r2, [r7, #4]
 80084c0:	68fb      	ldr	r3, [r7, #12]
 80084c2:	3b04      	subs	r3, #4
 80084c4:	60fb      	str	r3, [r7, #12]
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80084cc:	601a      	str	r2, [r3, #0]
 80084ce:	68fb      	ldr	r3, [r7, #12]
 80084d0:	3b04      	subs	r3, #4
 80084d2:	60fb      	str	r3, [r7, #12]
 80084d4:	68bb      	ldr	r3, [r7, #8]
 80084d6:	f023 0201 	bic.w	r2, r3, #1
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	601a      	str	r2, [r3, #0]
 80084de:	68fb      	ldr	r3, [r7, #12]
 80084e0:	3b04      	subs	r3, #4
 80084e2:	60fb      	str	r3, [r7, #12]
 80084e4:	4a0c      	ldr	r2, [pc, #48]	@ (8008518 <pxPortInitialiseStack+0x64>)
 80084e6:	68fb      	ldr	r3, [r7, #12]
 80084e8:	601a      	str	r2, [r3, #0]
 80084ea:	68fb      	ldr	r3, [r7, #12]
 80084ec:	3b14      	subs	r3, #20
 80084ee:	60fb      	str	r3, [r7, #12]
 80084f0:	687a      	ldr	r2, [r7, #4]
 80084f2:	68fb      	ldr	r3, [r7, #12]
 80084f4:	601a      	str	r2, [r3, #0]
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	3b04      	subs	r3, #4
 80084fa:	60fb      	str	r3, [r7, #12]
 80084fc:	68fb      	ldr	r3, [r7, #12]
 80084fe:	f06f 0202 	mvn.w	r2, #2
 8008502:	601a      	str	r2, [r3, #0]
 8008504:	68fb      	ldr	r3, [r7, #12]
 8008506:	3b20      	subs	r3, #32
 8008508:	60fb      	str	r3, [r7, #12]
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	4618      	mov	r0, r3
 800850e:	3714      	adds	r7, #20
 8008510:	46bd      	mov	sp, r7
 8008512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008516:	4770      	bx	lr
 8008518:	0800851d 	.word	0x0800851d

0800851c <prvTaskExitError>:
 800851c:	b480      	push	{r7}
 800851e:	b085      	sub	sp, #20
 8008520:	af00      	add	r7, sp, #0
 8008522:	2300      	movs	r3, #0
 8008524:	607b      	str	r3, [r7, #4]
 8008526:	4b13      	ldr	r3, [pc, #76]	@ (8008574 <prvTaskExitError+0x58>)
 8008528:	681b      	ldr	r3, [r3, #0]
 800852a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800852e:	d00b      	beq.n	8008548 <prvTaskExitError+0x2c>
 8008530:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008534:	f383 8811 	msr	BASEPRI, r3
 8008538:	f3bf 8f6f 	isb	sy
 800853c:	f3bf 8f4f 	dsb	sy
 8008540:	60fb      	str	r3, [r7, #12]
 8008542:	bf00      	nop
 8008544:	bf00      	nop
 8008546:	e7fd      	b.n	8008544 <prvTaskExitError+0x28>
 8008548:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800854c:	f383 8811 	msr	BASEPRI, r3
 8008550:	f3bf 8f6f 	isb	sy
 8008554:	f3bf 8f4f 	dsb	sy
 8008558:	60bb      	str	r3, [r7, #8]
 800855a:	bf00      	nop
 800855c:	bf00      	nop
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	2b00      	cmp	r3, #0
 8008562:	d0fc      	beq.n	800855e <prvTaskExitError+0x42>
 8008564:	bf00      	nop
 8008566:	bf00      	nop
 8008568:	3714      	adds	r7, #20
 800856a:	46bd      	mov	sp, r7
 800856c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008570:	4770      	bx	lr
 8008572:	bf00      	nop
 8008574:	20000010 	.word	0x20000010
	...

08008580 <SVC_Handler>:
 8008580:	4b07      	ldr	r3, [pc, #28]	@ (80085a0 <pxCurrentTCBConst2>)
 8008582:	6819      	ldr	r1, [r3, #0]
 8008584:	6808      	ldr	r0, [r1, #0]
 8008586:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800858a:	f380 8809 	msr	PSP, r0
 800858e:	f3bf 8f6f 	isb	sy
 8008592:	f04f 0000 	mov.w	r0, #0
 8008596:	f380 8811 	msr	BASEPRI, r0
 800859a:	4770      	bx	lr
 800859c:	f3af 8000 	nop.w

080085a0 <pxCurrentTCBConst2>:
 80085a0:	200009ec 	.word	0x200009ec
 80085a4:	bf00      	nop
 80085a6:	bf00      	nop

080085a8 <prvPortStartFirstTask>:
 80085a8:	4808      	ldr	r0, [pc, #32]	@ (80085cc <prvPortStartFirstTask+0x24>)
 80085aa:	6800      	ldr	r0, [r0, #0]
 80085ac:	6800      	ldr	r0, [r0, #0]
 80085ae:	f380 8808 	msr	MSP, r0
 80085b2:	f04f 0000 	mov.w	r0, #0
 80085b6:	f380 8814 	msr	CONTROL, r0
 80085ba:	b662      	cpsie	i
 80085bc:	b661      	cpsie	f
 80085be:	f3bf 8f4f 	dsb	sy
 80085c2:	f3bf 8f6f 	isb	sy
 80085c6:	df00      	svc	0
 80085c8:	bf00      	nop
 80085ca:	bf00      	nop
 80085cc:	e000ed08 	.word	0xe000ed08

080085d0 <xPortStartScheduler>:
 80085d0:	b580      	push	{r7, lr}
 80085d2:	b086      	sub	sp, #24
 80085d4:	af00      	add	r7, sp, #0
 80085d6:	4b47      	ldr	r3, [pc, #284]	@ (80086f4 <xPortStartScheduler+0x124>)
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	4a47      	ldr	r2, [pc, #284]	@ (80086f8 <xPortStartScheduler+0x128>)
 80085dc:	4293      	cmp	r3, r2
 80085de:	d10b      	bne.n	80085f8 <xPortStartScheduler+0x28>
 80085e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085e4:	f383 8811 	msr	BASEPRI, r3
 80085e8:	f3bf 8f6f 	isb	sy
 80085ec:	f3bf 8f4f 	dsb	sy
 80085f0:	613b      	str	r3, [r7, #16]
 80085f2:	bf00      	nop
 80085f4:	bf00      	nop
 80085f6:	e7fd      	b.n	80085f4 <xPortStartScheduler+0x24>
 80085f8:	4b3e      	ldr	r3, [pc, #248]	@ (80086f4 <xPortStartScheduler+0x124>)
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	4a3f      	ldr	r2, [pc, #252]	@ (80086fc <xPortStartScheduler+0x12c>)
 80085fe:	4293      	cmp	r3, r2
 8008600:	d10b      	bne.n	800861a <xPortStartScheduler+0x4a>
 8008602:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008606:	f383 8811 	msr	BASEPRI, r3
 800860a:	f3bf 8f6f 	isb	sy
 800860e:	f3bf 8f4f 	dsb	sy
 8008612:	60fb      	str	r3, [r7, #12]
 8008614:	bf00      	nop
 8008616:	bf00      	nop
 8008618:	e7fd      	b.n	8008616 <xPortStartScheduler+0x46>
 800861a:	4b39      	ldr	r3, [pc, #228]	@ (8008700 <xPortStartScheduler+0x130>)
 800861c:	617b      	str	r3, [r7, #20]
 800861e:	697b      	ldr	r3, [r7, #20]
 8008620:	781b      	ldrb	r3, [r3, #0]
 8008622:	b2db      	uxtb	r3, r3
 8008624:	607b      	str	r3, [r7, #4]
 8008626:	697b      	ldr	r3, [r7, #20]
 8008628:	22ff      	movs	r2, #255	@ 0xff
 800862a:	701a      	strb	r2, [r3, #0]
 800862c:	697b      	ldr	r3, [r7, #20]
 800862e:	781b      	ldrb	r3, [r3, #0]
 8008630:	b2db      	uxtb	r3, r3
 8008632:	70fb      	strb	r3, [r7, #3]
 8008634:	78fb      	ldrb	r3, [r7, #3]
 8008636:	b2db      	uxtb	r3, r3
 8008638:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800863c:	b2da      	uxtb	r2, r3
 800863e:	4b31      	ldr	r3, [pc, #196]	@ (8008704 <xPortStartScheduler+0x134>)
 8008640:	701a      	strb	r2, [r3, #0]
 8008642:	4b31      	ldr	r3, [pc, #196]	@ (8008708 <xPortStartScheduler+0x138>)
 8008644:	2207      	movs	r2, #7
 8008646:	601a      	str	r2, [r3, #0]
 8008648:	e009      	b.n	800865e <xPortStartScheduler+0x8e>
 800864a:	4b2f      	ldr	r3, [pc, #188]	@ (8008708 <xPortStartScheduler+0x138>)
 800864c:	681b      	ldr	r3, [r3, #0]
 800864e:	3b01      	subs	r3, #1
 8008650:	4a2d      	ldr	r2, [pc, #180]	@ (8008708 <xPortStartScheduler+0x138>)
 8008652:	6013      	str	r3, [r2, #0]
 8008654:	78fb      	ldrb	r3, [r7, #3]
 8008656:	b2db      	uxtb	r3, r3
 8008658:	005b      	lsls	r3, r3, #1
 800865a:	b2db      	uxtb	r3, r3
 800865c:	70fb      	strb	r3, [r7, #3]
 800865e:	78fb      	ldrb	r3, [r7, #3]
 8008660:	b2db      	uxtb	r3, r3
 8008662:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008666:	2b80      	cmp	r3, #128	@ 0x80
 8008668:	d0ef      	beq.n	800864a <xPortStartScheduler+0x7a>
 800866a:	4b27      	ldr	r3, [pc, #156]	@ (8008708 <xPortStartScheduler+0x138>)
 800866c:	681b      	ldr	r3, [r3, #0]
 800866e:	f1c3 0307 	rsb	r3, r3, #7
 8008672:	2b04      	cmp	r3, #4
 8008674:	d00b      	beq.n	800868e <xPortStartScheduler+0xbe>
 8008676:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800867a:	f383 8811 	msr	BASEPRI, r3
 800867e:	f3bf 8f6f 	isb	sy
 8008682:	f3bf 8f4f 	dsb	sy
 8008686:	60bb      	str	r3, [r7, #8]
 8008688:	bf00      	nop
 800868a:	bf00      	nop
 800868c:	e7fd      	b.n	800868a <xPortStartScheduler+0xba>
 800868e:	4b1e      	ldr	r3, [pc, #120]	@ (8008708 <xPortStartScheduler+0x138>)
 8008690:	681b      	ldr	r3, [r3, #0]
 8008692:	021b      	lsls	r3, r3, #8
 8008694:	4a1c      	ldr	r2, [pc, #112]	@ (8008708 <xPortStartScheduler+0x138>)
 8008696:	6013      	str	r3, [r2, #0]
 8008698:	4b1b      	ldr	r3, [pc, #108]	@ (8008708 <xPortStartScheduler+0x138>)
 800869a:	681b      	ldr	r3, [r3, #0]
 800869c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80086a0:	4a19      	ldr	r2, [pc, #100]	@ (8008708 <xPortStartScheduler+0x138>)
 80086a2:	6013      	str	r3, [r2, #0]
 80086a4:	687b      	ldr	r3, [r7, #4]
 80086a6:	b2da      	uxtb	r2, r3
 80086a8:	697b      	ldr	r3, [r7, #20]
 80086aa:	701a      	strb	r2, [r3, #0]
 80086ac:	4b17      	ldr	r3, [pc, #92]	@ (800870c <xPortStartScheduler+0x13c>)
 80086ae:	681b      	ldr	r3, [r3, #0]
 80086b0:	4a16      	ldr	r2, [pc, #88]	@ (800870c <xPortStartScheduler+0x13c>)
 80086b2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80086b6:	6013      	str	r3, [r2, #0]
 80086b8:	4b14      	ldr	r3, [pc, #80]	@ (800870c <xPortStartScheduler+0x13c>)
 80086ba:	681b      	ldr	r3, [r3, #0]
 80086bc:	4a13      	ldr	r2, [pc, #76]	@ (800870c <xPortStartScheduler+0x13c>)
 80086be:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80086c2:	6013      	str	r3, [r2, #0]
 80086c4:	f000 f8da 	bl	800887c <vPortSetupTimerInterrupt>
 80086c8:	4b11      	ldr	r3, [pc, #68]	@ (8008710 <xPortStartScheduler+0x140>)
 80086ca:	2200      	movs	r2, #0
 80086cc:	601a      	str	r2, [r3, #0]
 80086ce:	f000 f8f9 	bl	80088c4 <vPortEnableVFP>
 80086d2:	4b10      	ldr	r3, [pc, #64]	@ (8008714 <xPortStartScheduler+0x144>)
 80086d4:	681b      	ldr	r3, [r3, #0]
 80086d6:	4a0f      	ldr	r2, [pc, #60]	@ (8008714 <xPortStartScheduler+0x144>)
 80086d8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80086dc:	6013      	str	r3, [r2, #0]
 80086de:	f7ff ff63 	bl	80085a8 <prvPortStartFirstTask>
 80086e2:	f7fe fd81 	bl	80071e8 <vTaskSwitchContext>
 80086e6:	f7ff ff19 	bl	800851c <prvTaskExitError>
 80086ea:	2300      	movs	r3, #0
 80086ec:	4618      	mov	r0, r3
 80086ee:	3718      	adds	r7, #24
 80086f0:	46bd      	mov	sp, r7
 80086f2:	bd80      	pop	{r7, pc}
 80086f4:	e000ed00 	.word	0xe000ed00
 80086f8:	410fc271 	.word	0x410fc271
 80086fc:	410fc270 	.word	0x410fc270
 8008700:	e000e400 	.word	0xe000e400
 8008704:	20000c3c 	.word	0x20000c3c
 8008708:	20000c40 	.word	0x20000c40
 800870c:	e000ed20 	.word	0xe000ed20
 8008710:	20000010 	.word	0x20000010
 8008714:	e000ef34 	.word	0xe000ef34

08008718 <vPortEnterCritical>:
 8008718:	b480      	push	{r7}
 800871a:	b083      	sub	sp, #12
 800871c:	af00      	add	r7, sp, #0
 800871e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008722:	f383 8811 	msr	BASEPRI, r3
 8008726:	f3bf 8f6f 	isb	sy
 800872a:	f3bf 8f4f 	dsb	sy
 800872e:	607b      	str	r3, [r7, #4]
 8008730:	bf00      	nop
 8008732:	4b10      	ldr	r3, [pc, #64]	@ (8008774 <vPortEnterCritical+0x5c>)
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	3301      	adds	r3, #1
 8008738:	4a0e      	ldr	r2, [pc, #56]	@ (8008774 <vPortEnterCritical+0x5c>)
 800873a:	6013      	str	r3, [r2, #0]
 800873c:	4b0d      	ldr	r3, [pc, #52]	@ (8008774 <vPortEnterCritical+0x5c>)
 800873e:	681b      	ldr	r3, [r3, #0]
 8008740:	2b01      	cmp	r3, #1
 8008742:	d110      	bne.n	8008766 <vPortEnterCritical+0x4e>
 8008744:	4b0c      	ldr	r3, [pc, #48]	@ (8008778 <vPortEnterCritical+0x60>)
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	b2db      	uxtb	r3, r3
 800874a:	2b00      	cmp	r3, #0
 800874c:	d00b      	beq.n	8008766 <vPortEnterCritical+0x4e>
 800874e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008752:	f383 8811 	msr	BASEPRI, r3
 8008756:	f3bf 8f6f 	isb	sy
 800875a:	f3bf 8f4f 	dsb	sy
 800875e:	603b      	str	r3, [r7, #0]
 8008760:	bf00      	nop
 8008762:	bf00      	nop
 8008764:	e7fd      	b.n	8008762 <vPortEnterCritical+0x4a>
 8008766:	bf00      	nop
 8008768:	370c      	adds	r7, #12
 800876a:	46bd      	mov	sp, r7
 800876c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008770:	4770      	bx	lr
 8008772:	bf00      	nop
 8008774:	20000010 	.word	0x20000010
 8008778:	e000ed04 	.word	0xe000ed04

0800877c <vPortExitCritical>:
 800877c:	b480      	push	{r7}
 800877e:	b083      	sub	sp, #12
 8008780:	af00      	add	r7, sp, #0
 8008782:	4b12      	ldr	r3, [pc, #72]	@ (80087cc <vPortExitCritical+0x50>)
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	2b00      	cmp	r3, #0
 8008788:	d10b      	bne.n	80087a2 <vPortExitCritical+0x26>
 800878a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800878e:	f383 8811 	msr	BASEPRI, r3
 8008792:	f3bf 8f6f 	isb	sy
 8008796:	f3bf 8f4f 	dsb	sy
 800879a:	607b      	str	r3, [r7, #4]
 800879c:	bf00      	nop
 800879e:	bf00      	nop
 80087a0:	e7fd      	b.n	800879e <vPortExitCritical+0x22>
 80087a2:	4b0a      	ldr	r3, [pc, #40]	@ (80087cc <vPortExitCritical+0x50>)
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	3b01      	subs	r3, #1
 80087a8:	4a08      	ldr	r2, [pc, #32]	@ (80087cc <vPortExitCritical+0x50>)
 80087aa:	6013      	str	r3, [r2, #0]
 80087ac:	4b07      	ldr	r3, [pc, #28]	@ (80087cc <vPortExitCritical+0x50>)
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	2b00      	cmp	r3, #0
 80087b2:	d105      	bne.n	80087c0 <vPortExitCritical+0x44>
 80087b4:	2300      	movs	r3, #0
 80087b6:	603b      	str	r3, [r7, #0]
 80087b8:	683b      	ldr	r3, [r7, #0]
 80087ba:	f383 8811 	msr	BASEPRI, r3
 80087be:	bf00      	nop
 80087c0:	bf00      	nop
 80087c2:	370c      	adds	r7, #12
 80087c4:	46bd      	mov	sp, r7
 80087c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087ca:	4770      	bx	lr
 80087cc:	20000010 	.word	0x20000010

080087d0 <PendSV_Handler>:
 80087d0:	f3ef 8009 	mrs	r0, PSP
 80087d4:	f3bf 8f6f 	isb	sy
 80087d8:	4b15      	ldr	r3, [pc, #84]	@ (8008830 <pxCurrentTCBConst>)
 80087da:	681a      	ldr	r2, [r3, #0]
 80087dc:	f01e 0f10 	tst.w	lr, #16
 80087e0:	bf08      	it	eq
 80087e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80087e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087ea:	6010      	str	r0, [r2, #0]
 80087ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80087f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80087f4:	f380 8811 	msr	BASEPRI, r0
 80087f8:	f3bf 8f4f 	dsb	sy
 80087fc:	f3bf 8f6f 	isb	sy
 8008800:	f7fe fcf2 	bl	80071e8 <vTaskSwitchContext>
 8008804:	f04f 0000 	mov.w	r0, #0
 8008808:	f380 8811 	msr	BASEPRI, r0
 800880c:	bc09      	pop	{r0, r3}
 800880e:	6819      	ldr	r1, [r3, #0]
 8008810:	6808      	ldr	r0, [r1, #0]
 8008812:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008816:	f01e 0f10 	tst.w	lr, #16
 800881a:	bf08      	it	eq
 800881c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008820:	f380 8809 	msr	PSP, r0
 8008824:	f3bf 8f6f 	isb	sy
 8008828:	4770      	bx	lr
 800882a:	bf00      	nop
 800882c:	f3af 8000 	nop.w

08008830 <pxCurrentTCBConst>:
 8008830:	200009ec 	.word	0x200009ec
 8008834:	bf00      	nop
 8008836:	bf00      	nop

08008838 <SysTick_Handler>:
 8008838:	b580      	push	{r7, lr}
 800883a:	b082      	sub	sp, #8
 800883c:	af00      	add	r7, sp, #0
 800883e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008842:	f383 8811 	msr	BASEPRI, r3
 8008846:	f3bf 8f6f 	isb	sy
 800884a:	f3bf 8f4f 	dsb	sy
 800884e:	607b      	str	r3, [r7, #4]
 8008850:	bf00      	nop
 8008852:	f7fe fc0f 	bl	8007074 <xTaskIncrementTick>
 8008856:	4603      	mov	r3, r0
 8008858:	2b00      	cmp	r3, #0
 800885a:	d003      	beq.n	8008864 <SysTick_Handler+0x2c>
 800885c:	4b06      	ldr	r3, [pc, #24]	@ (8008878 <SysTick_Handler+0x40>)
 800885e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008862:	601a      	str	r2, [r3, #0]
 8008864:	2300      	movs	r3, #0
 8008866:	603b      	str	r3, [r7, #0]
 8008868:	683b      	ldr	r3, [r7, #0]
 800886a:	f383 8811 	msr	BASEPRI, r3
 800886e:	bf00      	nop
 8008870:	bf00      	nop
 8008872:	3708      	adds	r7, #8
 8008874:	46bd      	mov	sp, r7
 8008876:	bd80      	pop	{r7, pc}
 8008878:	e000ed04 	.word	0xe000ed04

0800887c <vPortSetupTimerInterrupt>:
 800887c:	b480      	push	{r7}
 800887e:	af00      	add	r7, sp, #0
 8008880:	4b0b      	ldr	r3, [pc, #44]	@ (80088b0 <vPortSetupTimerInterrupt+0x34>)
 8008882:	2200      	movs	r2, #0
 8008884:	601a      	str	r2, [r3, #0]
 8008886:	4b0b      	ldr	r3, [pc, #44]	@ (80088b4 <vPortSetupTimerInterrupt+0x38>)
 8008888:	2200      	movs	r2, #0
 800888a:	601a      	str	r2, [r3, #0]
 800888c:	4b0a      	ldr	r3, [pc, #40]	@ (80088b8 <vPortSetupTimerInterrupt+0x3c>)
 800888e:	681b      	ldr	r3, [r3, #0]
 8008890:	4a0a      	ldr	r2, [pc, #40]	@ (80088bc <vPortSetupTimerInterrupt+0x40>)
 8008892:	fba2 2303 	umull	r2, r3, r2, r3
 8008896:	099b      	lsrs	r3, r3, #6
 8008898:	4a09      	ldr	r2, [pc, #36]	@ (80088c0 <vPortSetupTimerInterrupt+0x44>)
 800889a:	3b01      	subs	r3, #1
 800889c:	6013      	str	r3, [r2, #0]
 800889e:	4b04      	ldr	r3, [pc, #16]	@ (80088b0 <vPortSetupTimerInterrupt+0x34>)
 80088a0:	2207      	movs	r2, #7
 80088a2:	601a      	str	r2, [r3, #0]
 80088a4:	bf00      	nop
 80088a6:	46bd      	mov	sp, r7
 80088a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ac:	4770      	bx	lr
 80088ae:	bf00      	nop
 80088b0:	e000e010 	.word	0xe000e010
 80088b4:	e000e018 	.word	0xe000e018
 80088b8:	20000004 	.word	0x20000004
 80088bc:	10624dd3 	.word	0x10624dd3
 80088c0:	e000e014 	.word	0xe000e014

080088c4 <vPortEnableVFP>:
 80088c4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80088d4 <vPortEnableVFP+0x10>
 80088c8:	6801      	ldr	r1, [r0, #0]
 80088ca:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80088ce:	6001      	str	r1, [r0, #0]
 80088d0:	4770      	bx	lr
 80088d2:	bf00      	nop
 80088d4:	e000ed88 	.word	0xe000ed88

080088d8 <vPortValidateInterruptPriority>:
 80088d8:	b480      	push	{r7}
 80088da:	b085      	sub	sp, #20
 80088dc:	af00      	add	r7, sp, #0
 80088de:	f3ef 8305 	mrs	r3, IPSR
 80088e2:	60fb      	str	r3, [r7, #12]
 80088e4:	68fb      	ldr	r3, [r7, #12]
 80088e6:	2b0f      	cmp	r3, #15
 80088e8:	d915      	bls.n	8008916 <vPortValidateInterruptPriority+0x3e>
 80088ea:	4a18      	ldr	r2, [pc, #96]	@ (800894c <vPortValidateInterruptPriority+0x74>)
 80088ec:	68fb      	ldr	r3, [r7, #12]
 80088ee:	4413      	add	r3, r2
 80088f0:	781b      	ldrb	r3, [r3, #0]
 80088f2:	72fb      	strb	r3, [r7, #11]
 80088f4:	4b16      	ldr	r3, [pc, #88]	@ (8008950 <vPortValidateInterruptPriority+0x78>)
 80088f6:	781b      	ldrb	r3, [r3, #0]
 80088f8:	7afa      	ldrb	r2, [r7, #11]
 80088fa:	429a      	cmp	r2, r3
 80088fc:	d20b      	bcs.n	8008916 <vPortValidateInterruptPriority+0x3e>
 80088fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008902:	f383 8811 	msr	BASEPRI, r3
 8008906:	f3bf 8f6f 	isb	sy
 800890a:	f3bf 8f4f 	dsb	sy
 800890e:	607b      	str	r3, [r7, #4]
 8008910:	bf00      	nop
 8008912:	bf00      	nop
 8008914:	e7fd      	b.n	8008912 <vPortValidateInterruptPriority+0x3a>
 8008916:	4b0f      	ldr	r3, [pc, #60]	@ (8008954 <vPortValidateInterruptPriority+0x7c>)
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800891e:	4b0e      	ldr	r3, [pc, #56]	@ (8008958 <vPortValidateInterruptPriority+0x80>)
 8008920:	681b      	ldr	r3, [r3, #0]
 8008922:	429a      	cmp	r2, r3
 8008924:	d90b      	bls.n	800893e <vPortValidateInterruptPriority+0x66>
 8008926:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800892a:	f383 8811 	msr	BASEPRI, r3
 800892e:	f3bf 8f6f 	isb	sy
 8008932:	f3bf 8f4f 	dsb	sy
 8008936:	603b      	str	r3, [r7, #0]
 8008938:	bf00      	nop
 800893a:	bf00      	nop
 800893c:	e7fd      	b.n	800893a <vPortValidateInterruptPriority+0x62>
 800893e:	bf00      	nop
 8008940:	3714      	adds	r7, #20
 8008942:	46bd      	mov	sp, r7
 8008944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008948:	4770      	bx	lr
 800894a:	bf00      	nop
 800894c:	e000e3f0 	.word	0xe000e3f0
 8008950:	20000c3c 	.word	0x20000c3c
 8008954:	e000ed0c 	.word	0xe000ed0c
 8008958:	20000c40 	.word	0x20000c40

0800895c <pvPortMalloc>:
 800895c:	b580      	push	{r7, lr}
 800895e:	b08a      	sub	sp, #40	@ 0x28
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
 8008964:	2300      	movs	r3, #0
 8008966:	61fb      	str	r3, [r7, #28]
 8008968:	f7fe fac8 	bl	8006efc <vTaskSuspendAll>
 800896c:	4b5c      	ldr	r3, [pc, #368]	@ (8008ae0 <pvPortMalloc+0x184>)
 800896e:	681b      	ldr	r3, [r3, #0]
 8008970:	2b00      	cmp	r3, #0
 8008972:	d101      	bne.n	8008978 <pvPortMalloc+0x1c>
 8008974:	f000 f924 	bl	8008bc0 <prvHeapInit>
 8008978:	4b5a      	ldr	r3, [pc, #360]	@ (8008ae4 <pvPortMalloc+0x188>)
 800897a:	681a      	ldr	r2, [r3, #0]
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	4013      	ands	r3, r2
 8008980:	2b00      	cmp	r3, #0
 8008982:	f040 8095 	bne.w	8008ab0 <pvPortMalloc+0x154>
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	2b00      	cmp	r3, #0
 800898a:	d01e      	beq.n	80089ca <pvPortMalloc+0x6e>
 800898c:	2208      	movs	r2, #8
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	4413      	add	r3, r2
 8008992:	607b      	str	r3, [r7, #4]
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	f003 0307 	and.w	r3, r3, #7
 800899a:	2b00      	cmp	r3, #0
 800899c:	d015      	beq.n	80089ca <pvPortMalloc+0x6e>
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	f023 0307 	bic.w	r3, r3, #7
 80089a4:	3308      	adds	r3, #8
 80089a6:	607b      	str	r3, [r7, #4]
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	f003 0307 	and.w	r3, r3, #7
 80089ae:	2b00      	cmp	r3, #0
 80089b0:	d00b      	beq.n	80089ca <pvPortMalloc+0x6e>
 80089b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089b6:	f383 8811 	msr	BASEPRI, r3
 80089ba:	f3bf 8f6f 	isb	sy
 80089be:	f3bf 8f4f 	dsb	sy
 80089c2:	617b      	str	r3, [r7, #20]
 80089c4:	bf00      	nop
 80089c6:	bf00      	nop
 80089c8:	e7fd      	b.n	80089c6 <pvPortMalloc+0x6a>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	2b00      	cmp	r3, #0
 80089ce:	d06f      	beq.n	8008ab0 <pvPortMalloc+0x154>
 80089d0:	4b45      	ldr	r3, [pc, #276]	@ (8008ae8 <pvPortMalloc+0x18c>)
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	687a      	ldr	r2, [r7, #4]
 80089d6:	429a      	cmp	r2, r3
 80089d8:	d86a      	bhi.n	8008ab0 <pvPortMalloc+0x154>
 80089da:	4b44      	ldr	r3, [pc, #272]	@ (8008aec <pvPortMalloc+0x190>)
 80089dc:	623b      	str	r3, [r7, #32]
 80089de:	4b43      	ldr	r3, [pc, #268]	@ (8008aec <pvPortMalloc+0x190>)
 80089e0:	681b      	ldr	r3, [r3, #0]
 80089e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80089e4:	e004      	b.n	80089f0 <pvPortMalloc+0x94>
 80089e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089e8:	623b      	str	r3, [r7, #32]
 80089ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80089f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089f2:	685b      	ldr	r3, [r3, #4]
 80089f4:	687a      	ldr	r2, [r7, #4]
 80089f6:	429a      	cmp	r2, r3
 80089f8:	d903      	bls.n	8008a02 <pvPortMalloc+0xa6>
 80089fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	2b00      	cmp	r3, #0
 8008a00:	d1f1      	bne.n	80089e6 <pvPortMalloc+0x8a>
 8008a02:	4b37      	ldr	r3, [pc, #220]	@ (8008ae0 <pvPortMalloc+0x184>)
 8008a04:	681b      	ldr	r3, [r3, #0]
 8008a06:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008a08:	429a      	cmp	r2, r3
 8008a0a:	d051      	beq.n	8008ab0 <pvPortMalloc+0x154>
 8008a0c:	6a3b      	ldr	r3, [r7, #32]
 8008a0e:	681b      	ldr	r3, [r3, #0]
 8008a10:	2208      	movs	r2, #8
 8008a12:	4413      	add	r3, r2
 8008a14:	61fb      	str	r3, [r7, #28]
 8008a16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a18:	681a      	ldr	r2, [r3, #0]
 8008a1a:	6a3b      	ldr	r3, [r7, #32]
 8008a1c:	601a      	str	r2, [r3, #0]
 8008a1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a20:	685a      	ldr	r2, [r3, #4]
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	1ad2      	subs	r2, r2, r3
 8008a26:	2308      	movs	r3, #8
 8008a28:	005b      	lsls	r3, r3, #1
 8008a2a:	429a      	cmp	r2, r3
 8008a2c:	d920      	bls.n	8008a70 <pvPortMalloc+0x114>
 8008a2e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	4413      	add	r3, r2
 8008a34:	61bb      	str	r3, [r7, #24]
 8008a36:	69bb      	ldr	r3, [r7, #24]
 8008a38:	f003 0307 	and.w	r3, r3, #7
 8008a3c:	2b00      	cmp	r3, #0
 8008a3e:	d00b      	beq.n	8008a58 <pvPortMalloc+0xfc>
 8008a40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a44:	f383 8811 	msr	BASEPRI, r3
 8008a48:	f3bf 8f6f 	isb	sy
 8008a4c:	f3bf 8f4f 	dsb	sy
 8008a50:	613b      	str	r3, [r7, #16]
 8008a52:	bf00      	nop
 8008a54:	bf00      	nop
 8008a56:	e7fd      	b.n	8008a54 <pvPortMalloc+0xf8>
 8008a58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a5a:	685a      	ldr	r2, [r3, #4]
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	1ad2      	subs	r2, r2, r3
 8008a60:	69bb      	ldr	r3, [r7, #24]
 8008a62:	605a      	str	r2, [r3, #4]
 8008a64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a66:	687a      	ldr	r2, [r7, #4]
 8008a68:	605a      	str	r2, [r3, #4]
 8008a6a:	69b8      	ldr	r0, [r7, #24]
 8008a6c:	f000 f90a 	bl	8008c84 <prvInsertBlockIntoFreeList>
 8008a70:	4b1d      	ldr	r3, [pc, #116]	@ (8008ae8 <pvPortMalloc+0x18c>)
 8008a72:	681a      	ldr	r2, [r3, #0]
 8008a74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a76:	685b      	ldr	r3, [r3, #4]
 8008a78:	1ad3      	subs	r3, r2, r3
 8008a7a:	4a1b      	ldr	r2, [pc, #108]	@ (8008ae8 <pvPortMalloc+0x18c>)
 8008a7c:	6013      	str	r3, [r2, #0]
 8008a7e:	4b1a      	ldr	r3, [pc, #104]	@ (8008ae8 <pvPortMalloc+0x18c>)
 8008a80:	681a      	ldr	r2, [r3, #0]
 8008a82:	4b1b      	ldr	r3, [pc, #108]	@ (8008af0 <pvPortMalloc+0x194>)
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	429a      	cmp	r2, r3
 8008a88:	d203      	bcs.n	8008a92 <pvPortMalloc+0x136>
 8008a8a:	4b17      	ldr	r3, [pc, #92]	@ (8008ae8 <pvPortMalloc+0x18c>)
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	4a18      	ldr	r2, [pc, #96]	@ (8008af0 <pvPortMalloc+0x194>)
 8008a90:	6013      	str	r3, [r2, #0]
 8008a92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a94:	685a      	ldr	r2, [r3, #4]
 8008a96:	4b13      	ldr	r3, [pc, #76]	@ (8008ae4 <pvPortMalloc+0x188>)
 8008a98:	681b      	ldr	r3, [r3, #0]
 8008a9a:	431a      	orrs	r2, r3
 8008a9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a9e:	605a      	str	r2, [r3, #4]
 8008aa0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008aa2:	2200      	movs	r2, #0
 8008aa4:	601a      	str	r2, [r3, #0]
 8008aa6:	4b13      	ldr	r3, [pc, #76]	@ (8008af4 <pvPortMalloc+0x198>)
 8008aa8:	681b      	ldr	r3, [r3, #0]
 8008aaa:	3301      	adds	r3, #1
 8008aac:	4a11      	ldr	r2, [pc, #68]	@ (8008af4 <pvPortMalloc+0x198>)
 8008aae:	6013      	str	r3, [r2, #0]
 8008ab0:	f7fe fa32 	bl	8006f18 <xTaskResumeAll>
 8008ab4:	69fb      	ldr	r3, [r7, #28]
 8008ab6:	f003 0307 	and.w	r3, r3, #7
 8008aba:	2b00      	cmp	r3, #0
 8008abc:	d00b      	beq.n	8008ad6 <pvPortMalloc+0x17a>
 8008abe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ac2:	f383 8811 	msr	BASEPRI, r3
 8008ac6:	f3bf 8f6f 	isb	sy
 8008aca:	f3bf 8f4f 	dsb	sy
 8008ace:	60fb      	str	r3, [r7, #12]
 8008ad0:	bf00      	nop
 8008ad2:	bf00      	nop
 8008ad4:	e7fd      	b.n	8008ad2 <pvPortMalloc+0x176>
 8008ad6:	69fb      	ldr	r3, [r7, #28]
 8008ad8:	4618      	mov	r0, r3
 8008ada:	3728      	adds	r7, #40	@ 0x28
 8008adc:	46bd      	mov	sp, r7
 8008ade:	bd80      	pop	{r7, pc}
 8008ae0:	200023bc 	.word	0x200023bc
 8008ae4:	200023d0 	.word	0x200023d0
 8008ae8:	200023c0 	.word	0x200023c0
 8008aec:	200023b4 	.word	0x200023b4
 8008af0:	200023c4 	.word	0x200023c4
 8008af4:	200023c8 	.word	0x200023c8

08008af8 <vPortFree>:
 8008af8:	b580      	push	{r7, lr}
 8008afa:	b086      	sub	sp, #24
 8008afc:	af00      	add	r7, sp, #0
 8008afe:	6078      	str	r0, [r7, #4]
 8008b00:	687b      	ldr	r3, [r7, #4]
 8008b02:	617b      	str	r3, [r7, #20]
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	2b00      	cmp	r3, #0
 8008b08:	d04f      	beq.n	8008baa <vPortFree+0xb2>
 8008b0a:	2308      	movs	r3, #8
 8008b0c:	425b      	negs	r3, r3
 8008b0e:	697a      	ldr	r2, [r7, #20]
 8008b10:	4413      	add	r3, r2
 8008b12:	617b      	str	r3, [r7, #20]
 8008b14:	697b      	ldr	r3, [r7, #20]
 8008b16:	613b      	str	r3, [r7, #16]
 8008b18:	693b      	ldr	r3, [r7, #16]
 8008b1a:	685a      	ldr	r2, [r3, #4]
 8008b1c:	4b25      	ldr	r3, [pc, #148]	@ (8008bb4 <vPortFree+0xbc>)
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	4013      	ands	r3, r2
 8008b22:	2b00      	cmp	r3, #0
 8008b24:	d10b      	bne.n	8008b3e <vPortFree+0x46>
 8008b26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b2a:	f383 8811 	msr	BASEPRI, r3
 8008b2e:	f3bf 8f6f 	isb	sy
 8008b32:	f3bf 8f4f 	dsb	sy
 8008b36:	60fb      	str	r3, [r7, #12]
 8008b38:	bf00      	nop
 8008b3a:	bf00      	nop
 8008b3c:	e7fd      	b.n	8008b3a <vPortFree+0x42>
 8008b3e:	693b      	ldr	r3, [r7, #16]
 8008b40:	681b      	ldr	r3, [r3, #0]
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	d00b      	beq.n	8008b5e <vPortFree+0x66>
 8008b46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b4a:	f383 8811 	msr	BASEPRI, r3
 8008b4e:	f3bf 8f6f 	isb	sy
 8008b52:	f3bf 8f4f 	dsb	sy
 8008b56:	60bb      	str	r3, [r7, #8]
 8008b58:	bf00      	nop
 8008b5a:	bf00      	nop
 8008b5c:	e7fd      	b.n	8008b5a <vPortFree+0x62>
 8008b5e:	693b      	ldr	r3, [r7, #16]
 8008b60:	685a      	ldr	r2, [r3, #4]
 8008b62:	4b14      	ldr	r3, [pc, #80]	@ (8008bb4 <vPortFree+0xbc>)
 8008b64:	681b      	ldr	r3, [r3, #0]
 8008b66:	4013      	ands	r3, r2
 8008b68:	2b00      	cmp	r3, #0
 8008b6a:	d01e      	beq.n	8008baa <vPortFree+0xb2>
 8008b6c:	693b      	ldr	r3, [r7, #16]
 8008b6e:	681b      	ldr	r3, [r3, #0]
 8008b70:	2b00      	cmp	r3, #0
 8008b72:	d11a      	bne.n	8008baa <vPortFree+0xb2>
 8008b74:	693b      	ldr	r3, [r7, #16]
 8008b76:	685a      	ldr	r2, [r3, #4]
 8008b78:	4b0e      	ldr	r3, [pc, #56]	@ (8008bb4 <vPortFree+0xbc>)
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	43db      	mvns	r3, r3
 8008b7e:	401a      	ands	r2, r3
 8008b80:	693b      	ldr	r3, [r7, #16]
 8008b82:	605a      	str	r2, [r3, #4]
 8008b84:	f7fe f9ba 	bl	8006efc <vTaskSuspendAll>
 8008b88:	693b      	ldr	r3, [r7, #16]
 8008b8a:	685a      	ldr	r2, [r3, #4]
 8008b8c:	4b0a      	ldr	r3, [pc, #40]	@ (8008bb8 <vPortFree+0xc0>)
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4413      	add	r3, r2
 8008b92:	4a09      	ldr	r2, [pc, #36]	@ (8008bb8 <vPortFree+0xc0>)
 8008b94:	6013      	str	r3, [r2, #0]
 8008b96:	6938      	ldr	r0, [r7, #16]
 8008b98:	f000 f874 	bl	8008c84 <prvInsertBlockIntoFreeList>
 8008b9c:	4b07      	ldr	r3, [pc, #28]	@ (8008bbc <vPortFree+0xc4>)
 8008b9e:	681b      	ldr	r3, [r3, #0]
 8008ba0:	3301      	adds	r3, #1
 8008ba2:	4a06      	ldr	r2, [pc, #24]	@ (8008bbc <vPortFree+0xc4>)
 8008ba4:	6013      	str	r3, [r2, #0]
 8008ba6:	f7fe f9b7 	bl	8006f18 <xTaskResumeAll>
 8008baa:	bf00      	nop
 8008bac:	3718      	adds	r7, #24
 8008bae:	46bd      	mov	sp, r7
 8008bb0:	bd80      	pop	{r7, pc}
 8008bb2:	bf00      	nop
 8008bb4:	200023d0 	.word	0x200023d0
 8008bb8:	200023c0 	.word	0x200023c0
 8008bbc:	200023cc 	.word	0x200023cc

08008bc0 <prvHeapInit>:
 8008bc0:	b480      	push	{r7}
 8008bc2:	b085      	sub	sp, #20
 8008bc4:	af00      	add	r7, sp, #0
 8008bc6:	f241 7370 	movw	r3, #6000	@ 0x1770
 8008bca:	60bb      	str	r3, [r7, #8]
 8008bcc:	4b27      	ldr	r3, [pc, #156]	@ (8008c6c <prvHeapInit+0xac>)
 8008bce:	60fb      	str	r3, [r7, #12]
 8008bd0:	68fb      	ldr	r3, [r7, #12]
 8008bd2:	f003 0307 	and.w	r3, r3, #7
 8008bd6:	2b00      	cmp	r3, #0
 8008bd8:	d00c      	beq.n	8008bf4 <prvHeapInit+0x34>
 8008bda:	68fb      	ldr	r3, [r7, #12]
 8008bdc:	3307      	adds	r3, #7
 8008bde:	60fb      	str	r3, [r7, #12]
 8008be0:	68fb      	ldr	r3, [r7, #12]
 8008be2:	f023 0307 	bic.w	r3, r3, #7
 8008be6:	60fb      	str	r3, [r7, #12]
 8008be8:	68ba      	ldr	r2, [r7, #8]
 8008bea:	68fb      	ldr	r3, [r7, #12]
 8008bec:	1ad3      	subs	r3, r2, r3
 8008bee:	4a1f      	ldr	r2, [pc, #124]	@ (8008c6c <prvHeapInit+0xac>)
 8008bf0:	4413      	add	r3, r2
 8008bf2:	60bb      	str	r3, [r7, #8]
 8008bf4:	68fb      	ldr	r3, [r7, #12]
 8008bf6:	607b      	str	r3, [r7, #4]
 8008bf8:	4a1d      	ldr	r2, [pc, #116]	@ (8008c70 <prvHeapInit+0xb0>)
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	6013      	str	r3, [r2, #0]
 8008bfe:	4b1c      	ldr	r3, [pc, #112]	@ (8008c70 <prvHeapInit+0xb0>)
 8008c00:	2200      	movs	r2, #0
 8008c02:	605a      	str	r2, [r3, #4]
 8008c04:	687b      	ldr	r3, [r7, #4]
 8008c06:	68ba      	ldr	r2, [r7, #8]
 8008c08:	4413      	add	r3, r2
 8008c0a:	60fb      	str	r3, [r7, #12]
 8008c0c:	2208      	movs	r2, #8
 8008c0e:	68fb      	ldr	r3, [r7, #12]
 8008c10:	1a9b      	subs	r3, r3, r2
 8008c12:	60fb      	str	r3, [r7, #12]
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	f023 0307 	bic.w	r3, r3, #7
 8008c1a:	60fb      	str	r3, [r7, #12]
 8008c1c:	68fb      	ldr	r3, [r7, #12]
 8008c1e:	4a15      	ldr	r2, [pc, #84]	@ (8008c74 <prvHeapInit+0xb4>)
 8008c20:	6013      	str	r3, [r2, #0]
 8008c22:	4b14      	ldr	r3, [pc, #80]	@ (8008c74 <prvHeapInit+0xb4>)
 8008c24:	681b      	ldr	r3, [r3, #0]
 8008c26:	2200      	movs	r2, #0
 8008c28:	605a      	str	r2, [r3, #4]
 8008c2a:	4b12      	ldr	r3, [pc, #72]	@ (8008c74 <prvHeapInit+0xb4>)
 8008c2c:	681b      	ldr	r3, [r3, #0]
 8008c2e:	2200      	movs	r2, #0
 8008c30:	601a      	str	r2, [r3, #0]
 8008c32:	687b      	ldr	r3, [r7, #4]
 8008c34:	603b      	str	r3, [r7, #0]
 8008c36:	683b      	ldr	r3, [r7, #0]
 8008c38:	68fa      	ldr	r2, [r7, #12]
 8008c3a:	1ad2      	subs	r2, r2, r3
 8008c3c:	683b      	ldr	r3, [r7, #0]
 8008c3e:	605a      	str	r2, [r3, #4]
 8008c40:	4b0c      	ldr	r3, [pc, #48]	@ (8008c74 <prvHeapInit+0xb4>)
 8008c42:	681a      	ldr	r2, [r3, #0]
 8008c44:	683b      	ldr	r3, [r7, #0]
 8008c46:	601a      	str	r2, [r3, #0]
 8008c48:	683b      	ldr	r3, [r7, #0]
 8008c4a:	685b      	ldr	r3, [r3, #4]
 8008c4c:	4a0a      	ldr	r2, [pc, #40]	@ (8008c78 <prvHeapInit+0xb8>)
 8008c4e:	6013      	str	r3, [r2, #0]
 8008c50:	683b      	ldr	r3, [r7, #0]
 8008c52:	685b      	ldr	r3, [r3, #4]
 8008c54:	4a09      	ldr	r2, [pc, #36]	@ (8008c7c <prvHeapInit+0xbc>)
 8008c56:	6013      	str	r3, [r2, #0]
 8008c58:	4b09      	ldr	r3, [pc, #36]	@ (8008c80 <prvHeapInit+0xc0>)
 8008c5a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8008c5e:	601a      	str	r2, [r3, #0]
 8008c60:	bf00      	nop
 8008c62:	3714      	adds	r7, #20
 8008c64:	46bd      	mov	sp, r7
 8008c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c6a:	4770      	bx	lr
 8008c6c:	20000c44 	.word	0x20000c44
 8008c70:	200023b4 	.word	0x200023b4
 8008c74:	200023bc 	.word	0x200023bc
 8008c78:	200023c4 	.word	0x200023c4
 8008c7c:	200023c0 	.word	0x200023c0
 8008c80:	200023d0 	.word	0x200023d0

08008c84 <prvInsertBlockIntoFreeList>:
 8008c84:	b480      	push	{r7}
 8008c86:	b085      	sub	sp, #20
 8008c88:	af00      	add	r7, sp, #0
 8008c8a:	6078      	str	r0, [r7, #4]
 8008c8c:	4b28      	ldr	r3, [pc, #160]	@ (8008d30 <prvInsertBlockIntoFreeList+0xac>)
 8008c8e:	60fb      	str	r3, [r7, #12]
 8008c90:	e002      	b.n	8008c98 <prvInsertBlockIntoFreeList+0x14>
 8008c92:	68fb      	ldr	r3, [r7, #12]
 8008c94:	681b      	ldr	r3, [r3, #0]
 8008c96:	60fb      	str	r3, [r7, #12]
 8008c98:	68fb      	ldr	r3, [r7, #12]
 8008c9a:	681b      	ldr	r3, [r3, #0]
 8008c9c:	687a      	ldr	r2, [r7, #4]
 8008c9e:	429a      	cmp	r2, r3
 8008ca0:	d8f7      	bhi.n	8008c92 <prvInsertBlockIntoFreeList+0xe>
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	60bb      	str	r3, [r7, #8]
 8008ca6:	68fb      	ldr	r3, [r7, #12]
 8008ca8:	685b      	ldr	r3, [r3, #4]
 8008caa:	68ba      	ldr	r2, [r7, #8]
 8008cac:	4413      	add	r3, r2
 8008cae:	687a      	ldr	r2, [r7, #4]
 8008cb0:	429a      	cmp	r2, r3
 8008cb2:	d108      	bne.n	8008cc6 <prvInsertBlockIntoFreeList+0x42>
 8008cb4:	68fb      	ldr	r3, [r7, #12]
 8008cb6:	685a      	ldr	r2, [r3, #4]
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	685b      	ldr	r3, [r3, #4]
 8008cbc:	441a      	add	r2, r3
 8008cbe:	68fb      	ldr	r3, [r7, #12]
 8008cc0:	605a      	str	r2, [r3, #4]
 8008cc2:	68fb      	ldr	r3, [r7, #12]
 8008cc4:	607b      	str	r3, [r7, #4]
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	60bb      	str	r3, [r7, #8]
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	685b      	ldr	r3, [r3, #4]
 8008cce:	68ba      	ldr	r2, [r7, #8]
 8008cd0:	441a      	add	r2, r3
 8008cd2:	68fb      	ldr	r3, [r7, #12]
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	429a      	cmp	r2, r3
 8008cd8:	d118      	bne.n	8008d0c <prvInsertBlockIntoFreeList+0x88>
 8008cda:	68fb      	ldr	r3, [r7, #12]
 8008cdc:	681a      	ldr	r2, [r3, #0]
 8008cde:	4b15      	ldr	r3, [pc, #84]	@ (8008d34 <prvInsertBlockIntoFreeList+0xb0>)
 8008ce0:	681b      	ldr	r3, [r3, #0]
 8008ce2:	429a      	cmp	r2, r3
 8008ce4:	d00d      	beq.n	8008d02 <prvInsertBlockIntoFreeList+0x7e>
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	685a      	ldr	r2, [r3, #4]
 8008cea:	68fb      	ldr	r3, [r7, #12]
 8008cec:	681b      	ldr	r3, [r3, #0]
 8008cee:	685b      	ldr	r3, [r3, #4]
 8008cf0:	441a      	add	r2, r3
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	605a      	str	r2, [r3, #4]
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	681a      	ldr	r2, [r3, #0]
 8008cfc:	687b      	ldr	r3, [r7, #4]
 8008cfe:	601a      	str	r2, [r3, #0]
 8008d00:	e008      	b.n	8008d14 <prvInsertBlockIntoFreeList+0x90>
 8008d02:	4b0c      	ldr	r3, [pc, #48]	@ (8008d34 <prvInsertBlockIntoFreeList+0xb0>)
 8008d04:	681a      	ldr	r2, [r3, #0]
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	601a      	str	r2, [r3, #0]
 8008d0a:	e003      	b.n	8008d14 <prvInsertBlockIntoFreeList+0x90>
 8008d0c:	68fb      	ldr	r3, [r7, #12]
 8008d0e:	681a      	ldr	r2, [r3, #0]
 8008d10:	687b      	ldr	r3, [r7, #4]
 8008d12:	601a      	str	r2, [r3, #0]
 8008d14:	68fa      	ldr	r2, [r7, #12]
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	429a      	cmp	r2, r3
 8008d1a:	d002      	beq.n	8008d22 <prvInsertBlockIntoFreeList+0x9e>
 8008d1c:	68fb      	ldr	r3, [r7, #12]
 8008d1e:	687a      	ldr	r2, [r7, #4]
 8008d20:	601a      	str	r2, [r3, #0]
 8008d22:	bf00      	nop
 8008d24:	3714      	adds	r7, #20
 8008d26:	46bd      	mov	sp, r7
 8008d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d2c:	4770      	bx	lr
 8008d2e:	bf00      	nop
 8008d30:	200023b4 	.word	0x200023b4
 8008d34:	200023bc 	.word	0x200023bc

08008d38 <sniprintf>:
 8008d38:	b40c      	push	{r2, r3}
 8008d3a:	b530      	push	{r4, r5, lr}
 8008d3c:	4b17      	ldr	r3, [pc, #92]	@ (8008d9c <sniprintf+0x64>)
 8008d3e:	1e0c      	subs	r4, r1, #0
 8008d40:	681d      	ldr	r5, [r3, #0]
 8008d42:	b09d      	sub	sp, #116	@ 0x74
 8008d44:	da08      	bge.n	8008d58 <sniprintf+0x20>
 8008d46:	238b      	movs	r3, #139	@ 0x8b
 8008d48:	602b      	str	r3, [r5, #0]
 8008d4a:	f04f 30ff 	mov.w	r0, #4294967295
 8008d4e:	b01d      	add	sp, #116	@ 0x74
 8008d50:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008d54:	b002      	add	sp, #8
 8008d56:	4770      	bx	lr
 8008d58:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8008d5c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8008d60:	bf14      	ite	ne
 8008d62:	f104 33ff 	addne.w	r3, r4, #4294967295
 8008d66:	4623      	moveq	r3, r4
 8008d68:	9304      	str	r3, [sp, #16]
 8008d6a:	9307      	str	r3, [sp, #28]
 8008d6c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8008d70:	9002      	str	r0, [sp, #8]
 8008d72:	9006      	str	r0, [sp, #24]
 8008d74:	f8ad 3016 	strh.w	r3, [sp, #22]
 8008d78:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8008d7a:	ab21      	add	r3, sp, #132	@ 0x84
 8008d7c:	a902      	add	r1, sp, #8
 8008d7e:	4628      	mov	r0, r5
 8008d80:	9301      	str	r3, [sp, #4]
 8008d82:	f000 f9a3 	bl	80090cc <_svfiprintf_r>
 8008d86:	1c43      	adds	r3, r0, #1
 8008d88:	bfbc      	itt	lt
 8008d8a:	238b      	movlt	r3, #139	@ 0x8b
 8008d8c:	602b      	strlt	r3, [r5, #0]
 8008d8e:	2c00      	cmp	r4, #0
 8008d90:	d0dd      	beq.n	8008d4e <sniprintf+0x16>
 8008d92:	9b02      	ldr	r3, [sp, #8]
 8008d94:	2200      	movs	r2, #0
 8008d96:	701a      	strb	r2, [r3, #0]
 8008d98:	e7d9      	b.n	8008d4e <sniprintf+0x16>
 8008d9a:	bf00      	nop
 8008d9c:	20000014 	.word	0x20000014

08008da0 <memset>:
 8008da0:	4402      	add	r2, r0
 8008da2:	4603      	mov	r3, r0
 8008da4:	4293      	cmp	r3, r2
 8008da6:	d100      	bne.n	8008daa <memset+0xa>
 8008da8:	4770      	bx	lr
 8008daa:	f803 1b01 	strb.w	r1, [r3], #1
 8008dae:	e7f9      	b.n	8008da4 <memset+0x4>

08008db0 <__errno>:
 8008db0:	4b01      	ldr	r3, [pc, #4]	@ (8008db8 <__errno+0x8>)
 8008db2:	6818      	ldr	r0, [r3, #0]
 8008db4:	4770      	bx	lr
 8008db6:	bf00      	nop
 8008db8:	20000014 	.word	0x20000014

08008dbc <__libc_init_array>:
 8008dbc:	b570      	push	{r4, r5, r6, lr}
 8008dbe:	4d0d      	ldr	r5, [pc, #52]	@ (8008df4 <__libc_init_array+0x38>)
 8008dc0:	4c0d      	ldr	r4, [pc, #52]	@ (8008df8 <__libc_init_array+0x3c>)
 8008dc2:	1b64      	subs	r4, r4, r5
 8008dc4:	10a4      	asrs	r4, r4, #2
 8008dc6:	2600      	movs	r6, #0
 8008dc8:	42a6      	cmp	r6, r4
 8008dca:	d109      	bne.n	8008de0 <__libc_init_array+0x24>
 8008dcc:	4d0b      	ldr	r5, [pc, #44]	@ (8008dfc <__libc_init_array+0x40>)
 8008dce:	4c0c      	ldr	r4, [pc, #48]	@ (8008e00 <__libc_init_array+0x44>)
 8008dd0:	f000 fc66 	bl	80096a0 <_init>
 8008dd4:	1b64      	subs	r4, r4, r5
 8008dd6:	10a4      	asrs	r4, r4, #2
 8008dd8:	2600      	movs	r6, #0
 8008dda:	42a6      	cmp	r6, r4
 8008ddc:	d105      	bne.n	8008dea <__libc_init_array+0x2e>
 8008dde:	bd70      	pop	{r4, r5, r6, pc}
 8008de0:	f855 3b04 	ldr.w	r3, [r5], #4
 8008de4:	4798      	blx	r3
 8008de6:	3601      	adds	r6, #1
 8008de8:	e7ee      	b.n	8008dc8 <__libc_init_array+0xc>
 8008dea:	f855 3b04 	ldr.w	r3, [r5], #4
 8008dee:	4798      	blx	r3
 8008df0:	3601      	adds	r6, #1
 8008df2:	e7f2      	b.n	8008dda <__libc_init_array+0x1e>
 8008df4:	08009aa8 	.word	0x08009aa8
 8008df8:	08009aa8 	.word	0x08009aa8
 8008dfc:	08009aa8 	.word	0x08009aa8
 8008e00:	08009aac 	.word	0x08009aac

08008e04 <__retarget_lock_acquire_recursive>:
 8008e04:	4770      	bx	lr

08008e06 <__retarget_lock_release_recursive>:
 8008e06:	4770      	bx	lr

08008e08 <memcpy>:
 8008e08:	440a      	add	r2, r1
 8008e0a:	4291      	cmp	r1, r2
 8008e0c:	f100 33ff 	add.w	r3, r0, #4294967295
 8008e10:	d100      	bne.n	8008e14 <memcpy+0xc>
 8008e12:	4770      	bx	lr
 8008e14:	b510      	push	{r4, lr}
 8008e16:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008e1a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008e1e:	4291      	cmp	r1, r2
 8008e20:	d1f9      	bne.n	8008e16 <memcpy+0xe>
 8008e22:	bd10      	pop	{r4, pc}

08008e24 <_free_r>:
 8008e24:	b538      	push	{r3, r4, r5, lr}
 8008e26:	4605      	mov	r5, r0
 8008e28:	2900      	cmp	r1, #0
 8008e2a:	d041      	beq.n	8008eb0 <_free_r+0x8c>
 8008e2c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008e30:	1f0c      	subs	r4, r1, #4
 8008e32:	2b00      	cmp	r3, #0
 8008e34:	bfb8      	it	lt
 8008e36:	18e4      	addlt	r4, r4, r3
 8008e38:	f000 f8e0 	bl	8008ffc <__malloc_lock>
 8008e3c:	4a1d      	ldr	r2, [pc, #116]	@ (8008eb4 <_free_r+0x90>)
 8008e3e:	6813      	ldr	r3, [r2, #0]
 8008e40:	b933      	cbnz	r3, 8008e50 <_free_r+0x2c>
 8008e42:	6063      	str	r3, [r4, #4]
 8008e44:	6014      	str	r4, [r2, #0]
 8008e46:	4628      	mov	r0, r5
 8008e48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008e4c:	f000 b8dc 	b.w	8009008 <__malloc_unlock>
 8008e50:	42a3      	cmp	r3, r4
 8008e52:	d908      	bls.n	8008e66 <_free_r+0x42>
 8008e54:	6820      	ldr	r0, [r4, #0]
 8008e56:	1821      	adds	r1, r4, r0
 8008e58:	428b      	cmp	r3, r1
 8008e5a:	bf01      	itttt	eq
 8008e5c:	6819      	ldreq	r1, [r3, #0]
 8008e5e:	685b      	ldreq	r3, [r3, #4]
 8008e60:	1809      	addeq	r1, r1, r0
 8008e62:	6021      	streq	r1, [r4, #0]
 8008e64:	e7ed      	b.n	8008e42 <_free_r+0x1e>
 8008e66:	461a      	mov	r2, r3
 8008e68:	685b      	ldr	r3, [r3, #4]
 8008e6a:	b10b      	cbz	r3, 8008e70 <_free_r+0x4c>
 8008e6c:	42a3      	cmp	r3, r4
 8008e6e:	d9fa      	bls.n	8008e66 <_free_r+0x42>
 8008e70:	6811      	ldr	r1, [r2, #0]
 8008e72:	1850      	adds	r0, r2, r1
 8008e74:	42a0      	cmp	r0, r4
 8008e76:	d10b      	bne.n	8008e90 <_free_r+0x6c>
 8008e78:	6820      	ldr	r0, [r4, #0]
 8008e7a:	4401      	add	r1, r0
 8008e7c:	1850      	adds	r0, r2, r1
 8008e7e:	4283      	cmp	r3, r0
 8008e80:	6011      	str	r1, [r2, #0]
 8008e82:	d1e0      	bne.n	8008e46 <_free_r+0x22>
 8008e84:	6818      	ldr	r0, [r3, #0]
 8008e86:	685b      	ldr	r3, [r3, #4]
 8008e88:	6053      	str	r3, [r2, #4]
 8008e8a:	4408      	add	r0, r1
 8008e8c:	6010      	str	r0, [r2, #0]
 8008e8e:	e7da      	b.n	8008e46 <_free_r+0x22>
 8008e90:	d902      	bls.n	8008e98 <_free_r+0x74>
 8008e92:	230c      	movs	r3, #12
 8008e94:	602b      	str	r3, [r5, #0]
 8008e96:	e7d6      	b.n	8008e46 <_free_r+0x22>
 8008e98:	6820      	ldr	r0, [r4, #0]
 8008e9a:	1821      	adds	r1, r4, r0
 8008e9c:	428b      	cmp	r3, r1
 8008e9e:	bf04      	itt	eq
 8008ea0:	6819      	ldreq	r1, [r3, #0]
 8008ea2:	685b      	ldreq	r3, [r3, #4]
 8008ea4:	6063      	str	r3, [r4, #4]
 8008ea6:	bf04      	itt	eq
 8008ea8:	1809      	addeq	r1, r1, r0
 8008eaa:	6021      	streq	r1, [r4, #0]
 8008eac:	6054      	str	r4, [r2, #4]
 8008eae:	e7ca      	b.n	8008e46 <_free_r+0x22>
 8008eb0:	bd38      	pop	{r3, r4, r5, pc}
 8008eb2:	bf00      	nop
 8008eb4:	20002518 	.word	0x20002518

08008eb8 <sbrk_aligned>:
 8008eb8:	b570      	push	{r4, r5, r6, lr}
 8008eba:	4e0f      	ldr	r6, [pc, #60]	@ (8008ef8 <sbrk_aligned+0x40>)
 8008ebc:	460c      	mov	r4, r1
 8008ebe:	6831      	ldr	r1, [r6, #0]
 8008ec0:	4605      	mov	r5, r0
 8008ec2:	b911      	cbnz	r1, 8008eca <sbrk_aligned+0x12>
 8008ec4:	f000 fba6 	bl	8009614 <_sbrk_r>
 8008ec8:	6030      	str	r0, [r6, #0]
 8008eca:	4621      	mov	r1, r4
 8008ecc:	4628      	mov	r0, r5
 8008ece:	f000 fba1 	bl	8009614 <_sbrk_r>
 8008ed2:	1c43      	adds	r3, r0, #1
 8008ed4:	d103      	bne.n	8008ede <sbrk_aligned+0x26>
 8008ed6:	f04f 34ff 	mov.w	r4, #4294967295
 8008eda:	4620      	mov	r0, r4
 8008edc:	bd70      	pop	{r4, r5, r6, pc}
 8008ede:	1cc4      	adds	r4, r0, #3
 8008ee0:	f024 0403 	bic.w	r4, r4, #3
 8008ee4:	42a0      	cmp	r0, r4
 8008ee6:	d0f8      	beq.n	8008eda <sbrk_aligned+0x22>
 8008ee8:	1a21      	subs	r1, r4, r0
 8008eea:	4628      	mov	r0, r5
 8008eec:	f000 fb92 	bl	8009614 <_sbrk_r>
 8008ef0:	3001      	adds	r0, #1
 8008ef2:	d1f2      	bne.n	8008eda <sbrk_aligned+0x22>
 8008ef4:	e7ef      	b.n	8008ed6 <sbrk_aligned+0x1e>
 8008ef6:	bf00      	nop
 8008ef8:	20002514 	.word	0x20002514

08008efc <_malloc_r>:
 8008efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008f00:	1ccd      	adds	r5, r1, #3
 8008f02:	f025 0503 	bic.w	r5, r5, #3
 8008f06:	3508      	adds	r5, #8
 8008f08:	2d0c      	cmp	r5, #12
 8008f0a:	bf38      	it	cc
 8008f0c:	250c      	movcc	r5, #12
 8008f0e:	2d00      	cmp	r5, #0
 8008f10:	4606      	mov	r6, r0
 8008f12:	db01      	blt.n	8008f18 <_malloc_r+0x1c>
 8008f14:	42a9      	cmp	r1, r5
 8008f16:	d904      	bls.n	8008f22 <_malloc_r+0x26>
 8008f18:	230c      	movs	r3, #12
 8008f1a:	6033      	str	r3, [r6, #0]
 8008f1c:	2000      	movs	r0, #0
 8008f1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008f22:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8008ff8 <_malloc_r+0xfc>
 8008f26:	f000 f869 	bl	8008ffc <__malloc_lock>
 8008f2a:	f8d8 3000 	ldr.w	r3, [r8]
 8008f2e:	461c      	mov	r4, r3
 8008f30:	bb44      	cbnz	r4, 8008f84 <_malloc_r+0x88>
 8008f32:	4629      	mov	r1, r5
 8008f34:	4630      	mov	r0, r6
 8008f36:	f7ff ffbf 	bl	8008eb8 <sbrk_aligned>
 8008f3a:	1c43      	adds	r3, r0, #1
 8008f3c:	4604      	mov	r4, r0
 8008f3e:	d158      	bne.n	8008ff2 <_malloc_r+0xf6>
 8008f40:	f8d8 4000 	ldr.w	r4, [r8]
 8008f44:	4627      	mov	r7, r4
 8008f46:	2f00      	cmp	r7, #0
 8008f48:	d143      	bne.n	8008fd2 <_malloc_r+0xd6>
 8008f4a:	2c00      	cmp	r4, #0
 8008f4c:	d04b      	beq.n	8008fe6 <_malloc_r+0xea>
 8008f4e:	6823      	ldr	r3, [r4, #0]
 8008f50:	4639      	mov	r1, r7
 8008f52:	4630      	mov	r0, r6
 8008f54:	eb04 0903 	add.w	r9, r4, r3
 8008f58:	f000 fb5c 	bl	8009614 <_sbrk_r>
 8008f5c:	4581      	cmp	r9, r0
 8008f5e:	d142      	bne.n	8008fe6 <_malloc_r+0xea>
 8008f60:	6821      	ldr	r1, [r4, #0]
 8008f62:	1a6d      	subs	r5, r5, r1
 8008f64:	4629      	mov	r1, r5
 8008f66:	4630      	mov	r0, r6
 8008f68:	f7ff ffa6 	bl	8008eb8 <sbrk_aligned>
 8008f6c:	3001      	adds	r0, #1
 8008f6e:	d03a      	beq.n	8008fe6 <_malloc_r+0xea>
 8008f70:	6823      	ldr	r3, [r4, #0]
 8008f72:	442b      	add	r3, r5
 8008f74:	6023      	str	r3, [r4, #0]
 8008f76:	f8d8 3000 	ldr.w	r3, [r8]
 8008f7a:	685a      	ldr	r2, [r3, #4]
 8008f7c:	bb62      	cbnz	r2, 8008fd8 <_malloc_r+0xdc>
 8008f7e:	f8c8 7000 	str.w	r7, [r8]
 8008f82:	e00f      	b.n	8008fa4 <_malloc_r+0xa8>
 8008f84:	6822      	ldr	r2, [r4, #0]
 8008f86:	1b52      	subs	r2, r2, r5
 8008f88:	d420      	bmi.n	8008fcc <_malloc_r+0xd0>
 8008f8a:	2a0b      	cmp	r2, #11
 8008f8c:	d917      	bls.n	8008fbe <_malloc_r+0xc2>
 8008f8e:	1961      	adds	r1, r4, r5
 8008f90:	42a3      	cmp	r3, r4
 8008f92:	6025      	str	r5, [r4, #0]
 8008f94:	bf18      	it	ne
 8008f96:	6059      	strne	r1, [r3, #4]
 8008f98:	6863      	ldr	r3, [r4, #4]
 8008f9a:	bf08      	it	eq
 8008f9c:	f8c8 1000 	streq.w	r1, [r8]
 8008fa0:	5162      	str	r2, [r4, r5]
 8008fa2:	604b      	str	r3, [r1, #4]
 8008fa4:	4630      	mov	r0, r6
 8008fa6:	f000 f82f 	bl	8009008 <__malloc_unlock>
 8008faa:	f104 000b 	add.w	r0, r4, #11
 8008fae:	1d23      	adds	r3, r4, #4
 8008fb0:	f020 0007 	bic.w	r0, r0, #7
 8008fb4:	1ac2      	subs	r2, r0, r3
 8008fb6:	bf1c      	itt	ne
 8008fb8:	1a1b      	subne	r3, r3, r0
 8008fba:	50a3      	strne	r3, [r4, r2]
 8008fbc:	e7af      	b.n	8008f1e <_malloc_r+0x22>
 8008fbe:	6862      	ldr	r2, [r4, #4]
 8008fc0:	42a3      	cmp	r3, r4
 8008fc2:	bf0c      	ite	eq
 8008fc4:	f8c8 2000 	streq.w	r2, [r8]
 8008fc8:	605a      	strne	r2, [r3, #4]
 8008fca:	e7eb      	b.n	8008fa4 <_malloc_r+0xa8>
 8008fcc:	4623      	mov	r3, r4
 8008fce:	6864      	ldr	r4, [r4, #4]
 8008fd0:	e7ae      	b.n	8008f30 <_malloc_r+0x34>
 8008fd2:	463c      	mov	r4, r7
 8008fd4:	687f      	ldr	r7, [r7, #4]
 8008fd6:	e7b6      	b.n	8008f46 <_malloc_r+0x4a>
 8008fd8:	461a      	mov	r2, r3
 8008fda:	685b      	ldr	r3, [r3, #4]
 8008fdc:	42a3      	cmp	r3, r4
 8008fde:	d1fb      	bne.n	8008fd8 <_malloc_r+0xdc>
 8008fe0:	2300      	movs	r3, #0
 8008fe2:	6053      	str	r3, [r2, #4]
 8008fe4:	e7de      	b.n	8008fa4 <_malloc_r+0xa8>
 8008fe6:	230c      	movs	r3, #12
 8008fe8:	6033      	str	r3, [r6, #0]
 8008fea:	4630      	mov	r0, r6
 8008fec:	f000 f80c 	bl	8009008 <__malloc_unlock>
 8008ff0:	e794      	b.n	8008f1c <_malloc_r+0x20>
 8008ff2:	6005      	str	r5, [r0, #0]
 8008ff4:	e7d6      	b.n	8008fa4 <_malloc_r+0xa8>
 8008ff6:	bf00      	nop
 8008ff8:	20002518 	.word	0x20002518

08008ffc <__malloc_lock>:
 8008ffc:	4801      	ldr	r0, [pc, #4]	@ (8009004 <__malloc_lock+0x8>)
 8008ffe:	f7ff bf01 	b.w	8008e04 <__retarget_lock_acquire_recursive>
 8009002:	bf00      	nop
 8009004:	20002510 	.word	0x20002510

08009008 <__malloc_unlock>:
 8009008:	4801      	ldr	r0, [pc, #4]	@ (8009010 <__malloc_unlock+0x8>)
 800900a:	f7ff befc 	b.w	8008e06 <__retarget_lock_release_recursive>
 800900e:	bf00      	nop
 8009010:	20002510 	.word	0x20002510

08009014 <__ssputs_r>:
 8009014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009018:	688e      	ldr	r6, [r1, #8]
 800901a:	461f      	mov	r7, r3
 800901c:	42be      	cmp	r6, r7
 800901e:	680b      	ldr	r3, [r1, #0]
 8009020:	4682      	mov	sl, r0
 8009022:	460c      	mov	r4, r1
 8009024:	4690      	mov	r8, r2
 8009026:	d82d      	bhi.n	8009084 <__ssputs_r+0x70>
 8009028:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800902c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8009030:	d026      	beq.n	8009080 <__ssputs_r+0x6c>
 8009032:	6965      	ldr	r5, [r4, #20]
 8009034:	6909      	ldr	r1, [r1, #16]
 8009036:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800903a:	eba3 0901 	sub.w	r9, r3, r1
 800903e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8009042:	1c7b      	adds	r3, r7, #1
 8009044:	444b      	add	r3, r9
 8009046:	106d      	asrs	r5, r5, #1
 8009048:	429d      	cmp	r5, r3
 800904a:	bf38      	it	cc
 800904c:	461d      	movcc	r5, r3
 800904e:	0553      	lsls	r3, r2, #21
 8009050:	d527      	bpl.n	80090a2 <__ssputs_r+0x8e>
 8009052:	4629      	mov	r1, r5
 8009054:	f7ff ff52 	bl	8008efc <_malloc_r>
 8009058:	4606      	mov	r6, r0
 800905a:	b360      	cbz	r0, 80090b6 <__ssputs_r+0xa2>
 800905c:	6921      	ldr	r1, [r4, #16]
 800905e:	464a      	mov	r2, r9
 8009060:	f7ff fed2 	bl	8008e08 <memcpy>
 8009064:	89a3      	ldrh	r3, [r4, #12]
 8009066:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800906a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800906e:	81a3      	strh	r3, [r4, #12]
 8009070:	6126      	str	r6, [r4, #16]
 8009072:	6165      	str	r5, [r4, #20]
 8009074:	444e      	add	r6, r9
 8009076:	eba5 0509 	sub.w	r5, r5, r9
 800907a:	6026      	str	r6, [r4, #0]
 800907c:	60a5      	str	r5, [r4, #8]
 800907e:	463e      	mov	r6, r7
 8009080:	42be      	cmp	r6, r7
 8009082:	d900      	bls.n	8009086 <__ssputs_r+0x72>
 8009084:	463e      	mov	r6, r7
 8009086:	6820      	ldr	r0, [r4, #0]
 8009088:	4632      	mov	r2, r6
 800908a:	4641      	mov	r1, r8
 800908c:	f000 faa8 	bl	80095e0 <memmove>
 8009090:	68a3      	ldr	r3, [r4, #8]
 8009092:	1b9b      	subs	r3, r3, r6
 8009094:	60a3      	str	r3, [r4, #8]
 8009096:	6823      	ldr	r3, [r4, #0]
 8009098:	4433      	add	r3, r6
 800909a:	6023      	str	r3, [r4, #0]
 800909c:	2000      	movs	r0, #0
 800909e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80090a2:	462a      	mov	r2, r5
 80090a4:	f000 fac6 	bl	8009634 <_realloc_r>
 80090a8:	4606      	mov	r6, r0
 80090aa:	2800      	cmp	r0, #0
 80090ac:	d1e0      	bne.n	8009070 <__ssputs_r+0x5c>
 80090ae:	6921      	ldr	r1, [r4, #16]
 80090b0:	4650      	mov	r0, sl
 80090b2:	f7ff feb7 	bl	8008e24 <_free_r>
 80090b6:	230c      	movs	r3, #12
 80090b8:	f8ca 3000 	str.w	r3, [sl]
 80090bc:	89a3      	ldrh	r3, [r4, #12]
 80090be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80090c2:	81a3      	strh	r3, [r4, #12]
 80090c4:	f04f 30ff 	mov.w	r0, #4294967295
 80090c8:	e7e9      	b.n	800909e <__ssputs_r+0x8a>
	...

080090cc <_svfiprintf_r>:
 80090cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80090d0:	4698      	mov	r8, r3
 80090d2:	898b      	ldrh	r3, [r1, #12]
 80090d4:	061b      	lsls	r3, r3, #24
 80090d6:	b09d      	sub	sp, #116	@ 0x74
 80090d8:	4607      	mov	r7, r0
 80090da:	460d      	mov	r5, r1
 80090dc:	4614      	mov	r4, r2
 80090de:	d510      	bpl.n	8009102 <_svfiprintf_r+0x36>
 80090e0:	690b      	ldr	r3, [r1, #16]
 80090e2:	b973      	cbnz	r3, 8009102 <_svfiprintf_r+0x36>
 80090e4:	2140      	movs	r1, #64	@ 0x40
 80090e6:	f7ff ff09 	bl	8008efc <_malloc_r>
 80090ea:	6028      	str	r0, [r5, #0]
 80090ec:	6128      	str	r0, [r5, #16]
 80090ee:	b930      	cbnz	r0, 80090fe <_svfiprintf_r+0x32>
 80090f0:	230c      	movs	r3, #12
 80090f2:	603b      	str	r3, [r7, #0]
 80090f4:	f04f 30ff 	mov.w	r0, #4294967295
 80090f8:	b01d      	add	sp, #116	@ 0x74
 80090fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090fe:	2340      	movs	r3, #64	@ 0x40
 8009100:	616b      	str	r3, [r5, #20]
 8009102:	2300      	movs	r3, #0
 8009104:	9309      	str	r3, [sp, #36]	@ 0x24
 8009106:	2320      	movs	r3, #32
 8009108:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800910c:	f8cd 800c 	str.w	r8, [sp, #12]
 8009110:	2330      	movs	r3, #48	@ 0x30
 8009112:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80092b0 <_svfiprintf_r+0x1e4>
 8009116:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800911a:	f04f 0901 	mov.w	r9, #1
 800911e:	4623      	mov	r3, r4
 8009120:	469a      	mov	sl, r3
 8009122:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009126:	b10a      	cbz	r2, 800912c <_svfiprintf_r+0x60>
 8009128:	2a25      	cmp	r2, #37	@ 0x25
 800912a:	d1f9      	bne.n	8009120 <_svfiprintf_r+0x54>
 800912c:	ebba 0b04 	subs.w	fp, sl, r4
 8009130:	d00b      	beq.n	800914a <_svfiprintf_r+0x7e>
 8009132:	465b      	mov	r3, fp
 8009134:	4622      	mov	r2, r4
 8009136:	4629      	mov	r1, r5
 8009138:	4638      	mov	r0, r7
 800913a:	f7ff ff6b 	bl	8009014 <__ssputs_r>
 800913e:	3001      	adds	r0, #1
 8009140:	f000 80a7 	beq.w	8009292 <_svfiprintf_r+0x1c6>
 8009144:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009146:	445a      	add	r2, fp
 8009148:	9209      	str	r2, [sp, #36]	@ 0x24
 800914a:	f89a 3000 	ldrb.w	r3, [sl]
 800914e:	2b00      	cmp	r3, #0
 8009150:	f000 809f 	beq.w	8009292 <_svfiprintf_r+0x1c6>
 8009154:	2300      	movs	r3, #0
 8009156:	f04f 32ff 	mov.w	r2, #4294967295
 800915a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800915e:	f10a 0a01 	add.w	sl, sl, #1
 8009162:	9304      	str	r3, [sp, #16]
 8009164:	9307      	str	r3, [sp, #28]
 8009166:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800916a:	931a      	str	r3, [sp, #104]	@ 0x68
 800916c:	4654      	mov	r4, sl
 800916e:	2205      	movs	r2, #5
 8009170:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009174:	484e      	ldr	r0, [pc, #312]	@ (80092b0 <_svfiprintf_r+0x1e4>)
 8009176:	f7f7 f833 	bl	80001e0 <memchr>
 800917a:	9a04      	ldr	r2, [sp, #16]
 800917c:	b9d8      	cbnz	r0, 80091b6 <_svfiprintf_r+0xea>
 800917e:	06d0      	lsls	r0, r2, #27
 8009180:	bf44      	itt	mi
 8009182:	2320      	movmi	r3, #32
 8009184:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009188:	0711      	lsls	r1, r2, #28
 800918a:	bf44      	itt	mi
 800918c:	232b      	movmi	r3, #43	@ 0x2b
 800918e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009192:	f89a 3000 	ldrb.w	r3, [sl]
 8009196:	2b2a      	cmp	r3, #42	@ 0x2a
 8009198:	d015      	beq.n	80091c6 <_svfiprintf_r+0xfa>
 800919a:	9a07      	ldr	r2, [sp, #28]
 800919c:	4654      	mov	r4, sl
 800919e:	2000      	movs	r0, #0
 80091a0:	f04f 0c0a 	mov.w	ip, #10
 80091a4:	4621      	mov	r1, r4
 80091a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80091aa:	3b30      	subs	r3, #48	@ 0x30
 80091ac:	2b09      	cmp	r3, #9
 80091ae:	d94b      	bls.n	8009248 <_svfiprintf_r+0x17c>
 80091b0:	b1b0      	cbz	r0, 80091e0 <_svfiprintf_r+0x114>
 80091b2:	9207      	str	r2, [sp, #28]
 80091b4:	e014      	b.n	80091e0 <_svfiprintf_r+0x114>
 80091b6:	eba0 0308 	sub.w	r3, r0, r8
 80091ba:	fa09 f303 	lsl.w	r3, r9, r3
 80091be:	4313      	orrs	r3, r2
 80091c0:	9304      	str	r3, [sp, #16]
 80091c2:	46a2      	mov	sl, r4
 80091c4:	e7d2      	b.n	800916c <_svfiprintf_r+0xa0>
 80091c6:	9b03      	ldr	r3, [sp, #12]
 80091c8:	1d19      	adds	r1, r3, #4
 80091ca:	681b      	ldr	r3, [r3, #0]
 80091cc:	9103      	str	r1, [sp, #12]
 80091ce:	2b00      	cmp	r3, #0
 80091d0:	bfbb      	ittet	lt
 80091d2:	425b      	neglt	r3, r3
 80091d4:	f042 0202 	orrlt.w	r2, r2, #2
 80091d8:	9307      	strge	r3, [sp, #28]
 80091da:	9307      	strlt	r3, [sp, #28]
 80091dc:	bfb8      	it	lt
 80091de:	9204      	strlt	r2, [sp, #16]
 80091e0:	7823      	ldrb	r3, [r4, #0]
 80091e2:	2b2e      	cmp	r3, #46	@ 0x2e
 80091e4:	d10a      	bne.n	80091fc <_svfiprintf_r+0x130>
 80091e6:	7863      	ldrb	r3, [r4, #1]
 80091e8:	2b2a      	cmp	r3, #42	@ 0x2a
 80091ea:	d132      	bne.n	8009252 <_svfiprintf_r+0x186>
 80091ec:	9b03      	ldr	r3, [sp, #12]
 80091ee:	1d1a      	adds	r2, r3, #4
 80091f0:	681b      	ldr	r3, [r3, #0]
 80091f2:	9203      	str	r2, [sp, #12]
 80091f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80091f8:	3402      	adds	r4, #2
 80091fa:	9305      	str	r3, [sp, #20]
 80091fc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80092c0 <_svfiprintf_r+0x1f4>
 8009200:	7821      	ldrb	r1, [r4, #0]
 8009202:	2203      	movs	r2, #3
 8009204:	4650      	mov	r0, sl
 8009206:	f7f6 ffeb 	bl	80001e0 <memchr>
 800920a:	b138      	cbz	r0, 800921c <_svfiprintf_r+0x150>
 800920c:	9b04      	ldr	r3, [sp, #16]
 800920e:	eba0 000a 	sub.w	r0, r0, sl
 8009212:	2240      	movs	r2, #64	@ 0x40
 8009214:	4082      	lsls	r2, r0
 8009216:	4313      	orrs	r3, r2
 8009218:	3401      	adds	r4, #1
 800921a:	9304      	str	r3, [sp, #16]
 800921c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009220:	4824      	ldr	r0, [pc, #144]	@ (80092b4 <_svfiprintf_r+0x1e8>)
 8009222:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8009226:	2206      	movs	r2, #6
 8009228:	f7f6 ffda 	bl	80001e0 <memchr>
 800922c:	2800      	cmp	r0, #0
 800922e:	d036      	beq.n	800929e <_svfiprintf_r+0x1d2>
 8009230:	4b21      	ldr	r3, [pc, #132]	@ (80092b8 <_svfiprintf_r+0x1ec>)
 8009232:	bb1b      	cbnz	r3, 800927c <_svfiprintf_r+0x1b0>
 8009234:	9b03      	ldr	r3, [sp, #12]
 8009236:	3307      	adds	r3, #7
 8009238:	f023 0307 	bic.w	r3, r3, #7
 800923c:	3308      	adds	r3, #8
 800923e:	9303      	str	r3, [sp, #12]
 8009240:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009242:	4433      	add	r3, r6
 8009244:	9309      	str	r3, [sp, #36]	@ 0x24
 8009246:	e76a      	b.n	800911e <_svfiprintf_r+0x52>
 8009248:	fb0c 3202 	mla	r2, ip, r2, r3
 800924c:	460c      	mov	r4, r1
 800924e:	2001      	movs	r0, #1
 8009250:	e7a8      	b.n	80091a4 <_svfiprintf_r+0xd8>
 8009252:	2300      	movs	r3, #0
 8009254:	3401      	adds	r4, #1
 8009256:	9305      	str	r3, [sp, #20]
 8009258:	4619      	mov	r1, r3
 800925a:	f04f 0c0a 	mov.w	ip, #10
 800925e:	4620      	mov	r0, r4
 8009260:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009264:	3a30      	subs	r2, #48	@ 0x30
 8009266:	2a09      	cmp	r2, #9
 8009268:	d903      	bls.n	8009272 <_svfiprintf_r+0x1a6>
 800926a:	2b00      	cmp	r3, #0
 800926c:	d0c6      	beq.n	80091fc <_svfiprintf_r+0x130>
 800926e:	9105      	str	r1, [sp, #20]
 8009270:	e7c4      	b.n	80091fc <_svfiprintf_r+0x130>
 8009272:	fb0c 2101 	mla	r1, ip, r1, r2
 8009276:	4604      	mov	r4, r0
 8009278:	2301      	movs	r3, #1
 800927a:	e7f0      	b.n	800925e <_svfiprintf_r+0x192>
 800927c:	ab03      	add	r3, sp, #12
 800927e:	9300      	str	r3, [sp, #0]
 8009280:	462a      	mov	r2, r5
 8009282:	4b0e      	ldr	r3, [pc, #56]	@ (80092bc <_svfiprintf_r+0x1f0>)
 8009284:	a904      	add	r1, sp, #16
 8009286:	4638      	mov	r0, r7
 8009288:	f3af 8000 	nop.w
 800928c:	1c42      	adds	r2, r0, #1
 800928e:	4606      	mov	r6, r0
 8009290:	d1d6      	bne.n	8009240 <_svfiprintf_r+0x174>
 8009292:	89ab      	ldrh	r3, [r5, #12]
 8009294:	065b      	lsls	r3, r3, #25
 8009296:	f53f af2d 	bmi.w	80090f4 <_svfiprintf_r+0x28>
 800929a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800929c:	e72c      	b.n	80090f8 <_svfiprintf_r+0x2c>
 800929e:	ab03      	add	r3, sp, #12
 80092a0:	9300      	str	r3, [sp, #0]
 80092a2:	462a      	mov	r2, r5
 80092a4:	4b05      	ldr	r3, [pc, #20]	@ (80092bc <_svfiprintf_r+0x1f0>)
 80092a6:	a904      	add	r1, sp, #16
 80092a8:	4638      	mov	r0, r7
 80092aa:	f000 f879 	bl	80093a0 <_printf_i>
 80092ae:	e7ed      	b.n	800928c <_svfiprintf_r+0x1c0>
 80092b0:	08009a6c 	.word	0x08009a6c
 80092b4:	08009a76 	.word	0x08009a76
 80092b8:	00000000 	.word	0x00000000
 80092bc:	08009015 	.word	0x08009015
 80092c0:	08009a72 	.word	0x08009a72

080092c4 <_printf_common>:
 80092c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80092c8:	4616      	mov	r6, r2
 80092ca:	4698      	mov	r8, r3
 80092cc:	688a      	ldr	r2, [r1, #8]
 80092ce:	690b      	ldr	r3, [r1, #16]
 80092d0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80092d4:	4293      	cmp	r3, r2
 80092d6:	bfb8      	it	lt
 80092d8:	4613      	movlt	r3, r2
 80092da:	6033      	str	r3, [r6, #0]
 80092dc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80092e0:	4607      	mov	r7, r0
 80092e2:	460c      	mov	r4, r1
 80092e4:	b10a      	cbz	r2, 80092ea <_printf_common+0x26>
 80092e6:	3301      	adds	r3, #1
 80092e8:	6033      	str	r3, [r6, #0]
 80092ea:	6823      	ldr	r3, [r4, #0]
 80092ec:	0699      	lsls	r1, r3, #26
 80092ee:	bf42      	ittt	mi
 80092f0:	6833      	ldrmi	r3, [r6, #0]
 80092f2:	3302      	addmi	r3, #2
 80092f4:	6033      	strmi	r3, [r6, #0]
 80092f6:	6825      	ldr	r5, [r4, #0]
 80092f8:	f015 0506 	ands.w	r5, r5, #6
 80092fc:	d106      	bne.n	800930c <_printf_common+0x48>
 80092fe:	f104 0a19 	add.w	sl, r4, #25
 8009302:	68e3      	ldr	r3, [r4, #12]
 8009304:	6832      	ldr	r2, [r6, #0]
 8009306:	1a9b      	subs	r3, r3, r2
 8009308:	42ab      	cmp	r3, r5
 800930a:	dc26      	bgt.n	800935a <_printf_common+0x96>
 800930c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8009310:	6822      	ldr	r2, [r4, #0]
 8009312:	3b00      	subs	r3, #0
 8009314:	bf18      	it	ne
 8009316:	2301      	movne	r3, #1
 8009318:	0692      	lsls	r2, r2, #26
 800931a:	d42b      	bmi.n	8009374 <_printf_common+0xb0>
 800931c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8009320:	4641      	mov	r1, r8
 8009322:	4638      	mov	r0, r7
 8009324:	47c8      	blx	r9
 8009326:	3001      	adds	r0, #1
 8009328:	d01e      	beq.n	8009368 <_printf_common+0xa4>
 800932a:	6823      	ldr	r3, [r4, #0]
 800932c:	6922      	ldr	r2, [r4, #16]
 800932e:	f003 0306 	and.w	r3, r3, #6
 8009332:	2b04      	cmp	r3, #4
 8009334:	bf02      	ittt	eq
 8009336:	68e5      	ldreq	r5, [r4, #12]
 8009338:	6833      	ldreq	r3, [r6, #0]
 800933a:	1aed      	subeq	r5, r5, r3
 800933c:	68a3      	ldr	r3, [r4, #8]
 800933e:	bf0c      	ite	eq
 8009340:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8009344:	2500      	movne	r5, #0
 8009346:	4293      	cmp	r3, r2
 8009348:	bfc4      	itt	gt
 800934a:	1a9b      	subgt	r3, r3, r2
 800934c:	18ed      	addgt	r5, r5, r3
 800934e:	2600      	movs	r6, #0
 8009350:	341a      	adds	r4, #26
 8009352:	42b5      	cmp	r5, r6
 8009354:	d11a      	bne.n	800938c <_printf_common+0xc8>
 8009356:	2000      	movs	r0, #0
 8009358:	e008      	b.n	800936c <_printf_common+0xa8>
 800935a:	2301      	movs	r3, #1
 800935c:	4652      	mov	r2, sl
 800935e:	4641      	mov	r1, r8
 8009360:	4638      	mov	r0, r7
 8009362:	47c8      	blx	r9
 8009364:	3001      	adds	r0, #1
 8009366:	d103      	bne.n	8009370 <_printf_common+0xac>
 8009368:	f04f 30ff 	mov.w	r0, #4294967295
 800936c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009370:	3501      	adds	r5, #1
 8009372:	e7c6      	b.n	8009302 <_printf_common+0x3e>
 8009374:	18e1      	adds	r1, r4, r3
 8009376:	1c5a      	adds	r2, r3, #1
 8009378:	2030      	movs	r0, #48	@ 0x30
 800937a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800937e:	4422      	add	r2, r4
 8009380:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8009384:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8009388:	3302      	adds	r3, #2
 800938a:	e7c7      	b.n	800931c <_printf_common+0x58>
 800938c:	2301      	movs	r3, #1
 800938e:	4622      	mov	r2, r4
 8009390:	4641      	mov	r1, r8
 8009392:	4638      	mov	r0, r7
 8009394:	47c8      	blx	r9
 8009396:	3001      	adds	r0, #1
 8009398:	d0e6      	beq.n	8009368 <_printf_common+0xa4>
 800939a:	3601      	adds	r6, #1
 800939c:	e7d9      	b.n	8009352 <_printf_common+0x8e>
	...

080093a0 <_printf_i>:
 80093a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80093a4:	7e0f      	ldrb	r7, [r1, #24]
 80093a6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80093a8:	2f78      	cmp	r7, #120	@ 0x78
 80093aa:	4691      	mov	r9, r2
 80093ac:	4680      	mov	r8, r0
 80093ae:	460c      	mov	r4, r1
 80093b0:	469a      	mov	sl, r3
 80093b2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80093b6:	d807      	bhi.n	80093c8 <_printf_i+0x28>
 80093b8:	2f62      	cmp	r7, #98	@ 0x62
 80093ba:	d80a      	bhi.n	80093d2 <_printf_i+0x32>
 80093bc:	2f00      	cmp	r7, #0
 80093be:	f000 80d2 	beq.w	8009566 <_printf_i+0x1c6>
 80093c2:	2f58      	cmp	r7, #88	@ 0x58
 80093c4:	f000 80b9 	beq.w	800953a <_printf_i+0x19a>
 80093c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80093cc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80093d0:	e03a      	b.n	8009448 <_printf_i+0xa8>
 80093d2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80093d6:	2b15      	cmp	r3, #21
 80093d8:	d8f6      	bhi.n	80093c8 <_printf_i+0x28>
 80093da:	a101      	add	r1, pc, #4	@ (adr r1, 80093e0 <_printf_i+0x40>)
 80093dc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80093e0:	08009439 	.word	0x08009439
 80093e4:	0800944d 	.word	0x0800944d
 80093e8:	080093c9 	.word	0x080093c9
 80093ec:	080093c9 	.word	0x080093c9
 80093f0:	080093c9 	.word	0x080093c9
 80093f4:	080093c9 	.word	0x080093c9
 80093f8:	0800944d 	.word	0x0800944d
 80093fc:	080093c9 	.word	0x080093c9
 8009400:	080093c9 	.word	0x080093c9
 8009404:	080093c9 	.word	0x080093c9
 8009408:	080093c9 	.word	0x080093c9
 800940c:	0800954d 	.word	0x0800954d
 8009410:	08009477 	.word	0x08009477
 8009414:	08009507 	.word	0x08009507
 8009418:	080093c9 	.word	0x080093c9
 800941c:	080093c9 	.word	0x080093c9
 8009420:	0800956f 	.word	0x0800956f
 8009424:	080093c9 	.word	0x080093c9
 8009428:	08009477 	.word	0x08009477
 800942c:	080093c9 	.word	0x080093c9
 8009430:	080093c9 	.word	0x080093c9
 8009434:	0800950f 	.word	0x0800950f
 8009438:	6833      	ldr	r3, [r6, #0]
 800943a:	1d1a      	adds	r2, r3, #4
 800943c:	681b      	ldr	r3, [r3, #0]
 800943e:	6032      	str	r2, [r6, #0]
 8009440:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8009444:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8009448:	2301      	movs	r3, #1
 800944a:	e09d      	b.n	8009588 <_printf_i+0x1e8>
 800944c:	6833      	ldr	r3, [r6, #0]
 800944e:	6820      	ldr	r0, [r4, #0]
 8009450:	1d19      	adds	r1, r3, #4
 8009452:	6031      	str	r1, [r6, #0]
 8009454:	0606      	lsls	r6, r0, #24
 8009456:	d501      	bpl.n	800945c <_printf_i+0xbc>
 8009458:	681d      	ldr	r5, [r3, #0]
 800945a:	e003      	b.n	8009464 <_printf_i+0xc4>
 800945c:	0645      	lsls	r5, r0, #25
 800945e:	d5fb      	bpl.n	8009458 <_printf_i+0xb8>
 8009460:	f9b3 5000 	ldrsh.w	r5, [r3]
 8009464:	2d00      	cmp	r5, #0
 8009466:	da03      	bge.n	8009470 <_printf_i+0xd0>
 8009468:	232d      	movs	r3, #45	@ 0x2d
 800946a:	426d      	negs	r5, r5
 800946c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009470:	4859      	ldr	r0, [pc, #356]	@ (80095d8 <_printf_i+0x238>)
 8009472:	230a      	movs	r3, #10
 8009474:	e011      	b.n	800949a <_printf_i+0xfa>
 8009476:	6821      	ldr	r1, [r4, #0]
 8009478:	6833      	ldr	r3, [r6, #0]
 800947a:	0608      	lsls	r0, r1, #24
 800947c:	f853 5b04 	ldr.w	r5, [r3], #4
 8009480:	d402      	bmi.n	8009488 <_printf_i+0xe8>
 8009482:	0649      	lsls	r1, r1, #25
 8009484:	bf48      	it	mi
 8009486:	b2ad      	uxthmi	r5, r5
 8009488:	2f6f      	cmp	r7, #111	@ 0x6f
 800948a:	4853      	ldr	r0, [pc, #332]	@ (80095d8 <_printf_i+0x238>)
 800948c:	6033      	str	r3, [r6, #0]
 800948e:	bf14      	ite	ne
 8009490:	230a      	movne	r3, #10
 8009492:	2308      	moveq	r3, #8
 8009494:	2100      	movs	r1, #0
 8009496:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800949a:	6866      	ldr	r6, [r4, #4]
 800949c:	60a6      	str	r6, [r4, #8]
 800949e:	2e00      	cmp	r6, #0
 80094a0:	bfa2      	ittt	ge
 80094a2:	6821      	ldrge	r1, [r4, #0]
 80094a4:	f021 0104 	bicge.w	r1, r1, #4
 80094a8:	6021      	strge	r1, [r4, #0]
 80094aa:	b90d      	cbnz	r5, 80094b0 <_printf_i+0x110>
 80094ac:	2e00      	cmp	r6, #0
 80094ae:	d04b      	beq.n	8009548 <_printf_i+0x1a8>
 80094b0:	4616      	mov	r6, r2
 80094b2:	fbb5 f1f3 	udiv	r1, r5, r3
 80094b6:	fb03 5711 	mls	r7, r3, r1, r5
 80094ba:	5dc7      	ldrb	r7, [r0, r7]
 80094bc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80094c0:	462f      	mov	r7, r5
 80094c2:	42bb      	cmp	r3, r7
 80094c4:	460d      	mov	r5, r1
 80094c6:	d9f4      	bls.n	80094b2 <_printf_i+0x112>
 80094c8:	2b08      	cmp	r3, #8
 80094ca:	d10b      	bne.n	80094e4 <_printf_i+0x144>
 80094cc:	6823      	ldr	r3, [r4, #0]
 80094ce:	07df      	lsls	r7, r3, #31
 80094d0:	d508      	bpl.n	80094e4 <_printf_i+0x144>
 80094d2:	6923      	ldr	r3, [r4, #16]
 80094d4:	6861      	ldr	r1, [r4, #4]
 80094d6:	4299      	cmp	r1, r3
 80094d8:	bfde      	ittt	le
 80094da:	2330      	movle	r3, #48	@ 0x30
 80094dc:	f806 3c01 	strble.w	r3, [r6, #-1]
 80094e0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80094e4:	1b92      	subs	r2, r2, r6
 80094e6:	6122      	str	r2, [r4, #16]
 80094e8:	f8cd a000 	str.w	sl, [sp]
 80094ec:	464b      	mov	r3, r9
 80094ee:	aa03      	add	r2, sp, #12
 80094f0:	4621      	mov	r1, r4
 80094f2:	4640      	mov	r0, r8
 80094f4:	f7ff fee6 	bl	80092c4 <_printf_common>
 80094f8:	3001      	adds	r0, #1
 80094fa:	d14a      	bne.n	8009592 <_printf_i+0x1f2>
 80094fc:	f04f 30ff 	mov.w	r0, #4294967295
 8009500:	b004      	add	sp, #16
 8009502:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009506:	6823      	ldr	r3, [r4, #0]
 8009508:	f043 0320 	orr.w	r3, r3, #32
 800950c:	6023      	str	r3, [r4, #0]
 800950e:	4833      	ldr	r0, [pc, #204]	@ (80095dc <_printf_i+0x23c>)
 8009510:	2778      	movs	r7, #120	@ 0x78
 8009512:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8009516:	6823      	ldr	r3, [r4, #0]
 8009518:	6831      	ldr	r1, [r6, #0]
 800951a:	061f      	lsls	r7, r3, #24
 800951c:	f851 5b04 	ldr.w	r5, [r1], #4
 8009520:	d402      	bmi.n	8009528 <_printf_i+0x188>
 8009522:	065f      	lsls	r7, r3, #25
 8009524:	bf48      	it	mi
 8009526:	b2ad      	uxthmi	r5, r5
 8009528:	6031      	str	r1, [r6, #0]
 800952a:	07d9      	lsls	r1, r3, #31
 800952c:	bf44      	itt	mi
 800952e:	f043 0320 	orrmi.w	r3, r3, #32
 8009532:	6023      	strmi	r3, [r4, #0]
 8009534:	b11d      	cbz	r5, 800953e <_printf_i+0x19e>
 8009536:	2310      	movs	r3, #16
 8009538:	e7ac      	b.n	8009494 <_printf_i+0xf4>
 800953a:	4827      	ldr	r0, [pc, #156]	@ (80095d8 <_printf_i+0x238>)
 800953c:	e7e9      	b.n	8009512 <_printf_i+0x172>
 800953e:	6823      	ldr	r3, [r4, #0]
 8009540:	f023 0320 	bic.w	r3, r3, #32
 8009544:	6023      	str	r3, [r4, #0]
 8009546:	e7f6      	b.n	8009536 <_printf_i+0x196>
 8009548:	4616      	mov	r6, r2
 800954a:	e7bd      	b.n	80094c8 <_printf_i+0x128>
 800954c:	6833      	ldr	r3, [r6, #0]
 800954e:	6825      	ldr	r5, [r4, #0]
 8009550:	6961      	ldr	r1, [r4, #20]
 8009552:	1d18      	adds	r0, r3, #4
 8009554:	6030      	str	r0, [r6, #0]
 8009556:	062e      	lsls	r6, r5, #24
 8009558:	681b      	ldr	r3, [r3, #0]
 800955a:	d501      	bpl.n	8009560 <_printf_i+0x1c0>
 800955c:	6019      	str	r1, [r3, #0]
 800955e:	e002      	b.n	8009566 <_printf_i+0x1c6>
 8009560:	0668      	lsls	r0, r5, #25
 8009562:	d5fb      	bpl.n	800955c <_printf_i+0x1bc>
 8009564:	8019      	strh	r1, [r3, #0]
 8009566:	2300      	movs	r3, #0
 8009568:	6123      	str	r3, [r4, #16]
 800956a:	4616      	mov	r6, r2
 800956c:	e7bc      	b.n	80094e8 <_printf_i+0x148>
 800956e:	6833      	ldr	r3, [r6, #0]
 8009570:	1d1a      	adds	r2, r3, #4
 8009572:	6032      	str	r2, [r6, #0]
 8009574:	681e      	ldr	r6, [r3, #0]
 8009576:	6862      	ldr	r2, [r4, #4]
 8009578:	2100      	movs	r1, #0
 800957a:	4630      	mov	r0, r6
 800957c:	f7f6 fe30 	bl	80001e0 <memchr>
 8009580:	b108      	cbz	r0, 8009586 <_printf_i+0x1e6>
 8009582:	1b80      	subs	r0, r0, r6
 8009584:	6060      	str	r0, [r4, #4]
 8009586:	6863      	ldr	r3, [r4, #4]
 8009588:	6123      	str	r3, [r4, #16]
 800958a:	2300      	movs	r3, #0
 800958c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009590:	e7aa      	b.n	80094e8 <_printf_i+0x148>
 8009592:	6923      	ldr	r3, [r4, #16]
 8009594:	4632      	mov	r2, r6
 8009596:	4649      	mov	r1, r9
 8009598:	4640      	mov	r0, r8
 800959a:	47d0      	blx	sl
 800959c:	3001      	adds	r0, #1
 800959e:	d0ad      	beq.n	80094fc <_printf_i+0x15c>
 80095a0:	6823      	ldr	r3, [r4, #0]
 80095a2:	079b      	lsls	r3, r3, #30
 80095a4:	d413      	bmi.n	80095ce <_printf_i+0x22e>
 80095a6:	68e0      	ldr	r0, [r4, #12]
 80095a8:	9b03      	ldr	r3, [sp, #12]
 80095aa:	4298      	cmp	r0, r3
 80095ac:	bfb8      	it	lt
 80095ae:	4618      	movlt	r0, r3
 80095b0:	e7a6      	b.n	8009500 <_printf_i+0x160>
 80095b2:	2301      	movs	r3, #1
 80095b4:	4632      	mov	r2, r6
 80095b6:	4649      	mov	r1, r9
 80095b8:	4640      	mov	r0, r8
 80095ba:	47d0      	blx	sl
 80095bc:	3001      	adds	r0, #1
 80095be:	d09d      	beq.n	80094fc <_printf_i+0x15c>
 80095c0:	3501      	adds	r5, #1
 80095c2:	68e3      	ldr	r3, [r4, #12]
 80095c4:	9903      	ldr	r1, [sp, #12]
 80095c6:	1a5b      	subs	r3, r3, r1
 80095c8:	42ab      	cmp	r3, r5
 80095ca:	dcf2      	bgt.n	80095b2 <_printf_i+0x212>
 80095cc:	e7eb      	b.n	80095a6 <_printf_i+0x206>
 80095ce:	2500      	movs	r5, #0
 80095d0:	f104 0619 	add.w	r6, r4, #25
 80095d4:	e7f5      	b.n	80095c2 <_printf_i+0x222>
 80095d6:	bf00      	nop
 80095d8:	08009a7d 	.word	0x08009a7d
 80095dc:	08009a8e 	.word	0x08009a8e

080095e0 <memmove>:
 80095e0:	4288      	cmp	r0, r1
 80095e2:	b510      	push	{r4, lr}
 80095e4:	eb01 0402 	add.w	r4, r1, r2
 80095e8:	d902      	bls.n	80095f0 <memmove+0x10>
 80095ea:	4284      	cmp	r4, r0
 80095ec:	4623      	mov	r3, r4
 80095ee:	d807      	bhi.n	8009600 <memmove+0x20>
 80095f0:	1e43      	subs	r3, r0, #1
 80095f2:	42a1      	cmp	r1, r4
 80095f4:	d008      	beq.n	8009608 <memmove+0x28>
 80095f6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80095fa:	f803 2f01 	strb.w	r2, [r3, #1]!
 80095fe:	e7f8      	b.n	80095f2 <memmove+0x12>
 8009600:	4402      	add	r2, r0
 8009602:	4601      	mov	r1, r0
 8009604:	428a      	cmp	r2, r1
 8009606:	d100      	bne.n	800960a <memmove+0x2a>
 8009608:	bd10      	pop	{r4, pc}
 800960a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800960e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8009612:	e7f7      	b.n	8009604 <memmove+0x24>

08009614 <_sbrk_r>:
 8009614:	b538      	push	{r3, r4, r5, lr}
 8009616:	4d06      	ldr	r5, [pc, #24]	@ (8009630 <_sbrk_r+0x1c>)
 8009618:	2300      	movs	r3, #0
 800961a:	4604      	mov	r4, r0
 800961c:	4608      	mov	r0, r1
 800961e:	602b      	str	r3, [r5, #0]
 8009620:	f7f7 fc84 	bl	8000f2c <_sbrk>
 8009624:	1c43      	adds	r3, r0, #1
 8009626:	d102      	bne.n	800962e <_sbrk_r+0x1a>
 8009628:	682b      	ldr	r3, [r5, #0]
 800962a:	b103      	cbz	r3, 800962e <_sbrk_r+0x1a>
 800962c:	6023      	str	r3, [r4, #0]
 800962e:	bd38      	pop	{r3, r4, r5, pc}
 8009630:	2000250c 	.word	0x2000250c

08009634 <_realloc_r>:
 8009634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009638:	4680      	mov	r8, r0
 800963a:	4615      	mov	r5, r2
 800963c:	460c      	mov	r4, r1
 800963e:	b921      	cbnz	r1, 800964a <_realloc_r+0x16>
 8009640:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009644:	4611      	mov	r1, r2
 8009646:	f7ff bc59 	b.w	8008efc <_malloc_r>
 800964a:	b92a      	cbnz	r2, 8009658 <_realloc_r+0x24>
 800964c:	f7ff fbea 	bl	8008e24 <_free_r>
 8009650:	2400      	movs	r4, #0
 8009652:	4620      	mov	r0, r4
 8009654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009658:	f000 f81a 	bl	8009690 <_malloc_usable_size_r>
 800965c:	4285      	cmp	r5, r0
 800965e:	4606      	mov	r6, r0
 8009660:	d802      	bhi.n	8009668 <_realloc_r+0x34>
 8009662:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8009666:	d8f4      	bhi.n	8009652 <_realloc_r+0x1e>
 8009668:	4629      	mov	r1, r5
 800966a:	4640      	mov	r0, r8
 800966c:	f7ff fc46 	bl	8008efc <_malloc_r>
 8009670:	4607      	mov	r7, r0
 8009672:	2800      	cmp	r0, #0
 8009674:	d0ec      	beq.n	8009650 <_realloc_r+0x1c>
 8009676:	42b5      	cmp	r5, r6
 8009678:	462a      	mov	r2, r5
 800967a:	4621      	mov	r1, r4
 800967c:	bf28      	it	cs
 800967e:	4632      	movcs	r2, r6
 8009680:	f7ff fbc2 	bl	8008e08 <memcpy>
 8009684:	4621      	mov	r1, r4
 8009686:	4640      	mov	r0, r8
 8009688:	f7ff fbcc 	bl	8008e24 <_free_r>
 800968c:	463c      	mov	r4, r7
 800968e:	e7e0      	b.n	8009652 <_realloc_r+0x1e>

08009690 <_malloc_usable_size_r>:
 8009690:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009694:	1f18      	subs	r0, r3, #4
 8009696:	2b00      	cmp	r3, #0
 8009698:	bfbc      	itt	lt
 800969a:	580b      	ldrlt	r3, [r1, r0]
 800969c:	18c0      	addlt	r0, r0, r3
 800969e:	4770      	bx	lr

080096a0 <_init>:
 80096a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80096a2:	bf00      	nop
 80096a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80096a6:	bc08      	pop	{r3}
 80096a8:	469e      	mov	lr, r3
 80096aa:	4770      	bx	lr

080096ac <_fini>:
 80096ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80096ae:	bf00      	nop
 80096b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80096b2:	bc08      	pop	{r3}
 80096b4:	469e      	mov	lr, r3
 80096b6:	4770      	bx	lr
